

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Tue Feb 25 23:11:54 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,space=0,delta=2,noexec
     6                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,space=0,delta=2
    12                           	psect	clrtext,global,class=CODE,space=0,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    16                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=1
    21                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2,group=1
    22                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2,group=1
    29                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,space=0,merge=1,delta=2
    47                           	psect	text32,local,class=CODE,space=0,merge=1,delta=2
    48                           	psect	text33,local,class=CODE,space=0,merge=1,delta=2
    49                           	psect	text34,local,class=CODE,space=0,merge=1,delta=2,group=1
    50                           	psect	text35,local,class=CODE,space=0,merge=1,delta=2,group=1
    51                           	psect	text36,local,class=CODE,space=0,merge=1,delta=2,group=1
    52                           	psect	text37,local,class=CODE,space=0,merge=1,delta=2
    53                           	psect	text38,local,class=CODE,space=0,merge=1,delta=2
    54                           	psect	text39,local,class=CODE,space=0,merge=1,delta=2
    55                           	psect	text40,local,class=CODE,space=0,merge=1,delta=2
    56                           	psect	text41,local,class=CODE,space=0,merge=1,delta=2
    57                           	psect	text42,local,class=CODE,space=0,merge=1,delta=2
    58                           	psect	text43,local,class=CODE,space=0,merge=1,delta=2
    59                           	psect	text44,local,class=CODE,space=0,merge=1,delta=2
    60                           	psect	text45,local,class=CODE,space=0,merge=1,delta=2
    61                           	psect	text46,local,class=CODE,space=0,merge=1,delta=2
    62                           	psect	text47,local,class=CODE,space=0,merge=1,delta=2
    63                           	psect	text48,local,class=CODE,space=0,merge=1,delta=2
    64                           	psect	text49,local,class=CODE,space=0,merge=1,delta=2
    65                           	psect	text50,local,class=CODE,space=0,merge=1,delta=2,group=1
    66                           	psect	text51,local,class=CODE,space=0,merge=1,delta=2,group=1
    67                           	psect	text52,local,class=CODE,space=0,merge=1,delta=2,group=1
    68                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    69                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    70                           	dabs	1,0x7E,2
    71     0000                     
    72                           ; Version 2.40
    73                           ; Generated 17/11/2021 GMT
    74                           ; 
    75                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    76                           ; All rights reserved.
    77                           ; 
    78                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    79                           ; 
    80                           ; Redistribution and use in source and binary forms, with or without modification, are
    81                           ; permitted provided that the following conditions are met:
    82                           ; 
    83                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    84                           ;        conditions and the following disclaimer.
    85                           ; 
    86                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    87                           ;        of conditions and the following disclaimer in the documentation and/or other
    88                           ;        materials provided with the distribution. Publication is not required when
    89                           ;        this file is used in an embedded application.
    90                           ; 
    91                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    92                           ;        software without specific prior written permission.
    93                           ; 
    94                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    95                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    96                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    97                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    98                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    99                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   100                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   101                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   102                           ; 
   103                           ; 
   104                           ; Code-generator required, PIC16F877A Definitions
   105                           ; 
   106                           ; SFR Addresses
   107     0004                     fsr             equ	4
   108     0004                     fsr0            equ	4
   109     0000                     indf            equ	0
   110     0000                     indf0           equ	0
   111     0002                     pc              equ	2
   112     0002                     pcl             equ	2
   113     000A                     pclath          equ	10
   114     0003                     status          equ	3
   115     0000                     INDF            equ	0	;# 
   116     0001                     TMR0            equ	1	;# 
   117     0002                     PCL             equ	2	;# 
   118     0003                     STATUS          equ	3	;# 
   119     0004                     FSR             equ	4	;# 
   120     0005                     PORTA           equ	5	;# 
   121     0006                     PORTB           equ	6	;# 
   122     0007                     PORTC           equ	7	;# 
   123     0008                     PORTD           equ	8	;# 
   124     0009                     PORTE           equ	9	;# 
   125     000A                     PCLATH          equ	10	;# 
   126     000B                     INTCON          equ	11	;# 
   127     000C                     PIR1            equ	12	;# 
   128     000D                     PIR2            equ	13	;# 
   129     000E                     TMR1            equ	14	;# 
   130     000E                     TMR1L           equ	14	;# 
   131     000F                     TMR1H           equ	15	;# 
   132     0010                     T1CON           equ	16	;# 
   133     0011                     TMR2            equ	17	;# 
   134     0012                     T2CON           equ	18	;# 
   135     0013                     SSPBUF          equ	19	;# 
   136     0014                     SSPCON          equ	20	;# 
   137     0015                     CCPR1           equ	21	;# 
   138     0015                     CCPR1L          equ	21	;# 
   139     0016                     CCPR1H          equ	22	;# 
   140     0017                     CCP1CON         equ	23	;# 
   141     0018                     RCSTA           equ	24	;# 
   142     0019                     TXREG           equ	25	;# 
   143     001A                     RCREG           equ	26	;# 
   144     001B                     CCPR2           equ	27	;# 
   145     001B                     CCPR2L          equ	27	;# 
   146     001C                     CCPR2H          equ	28	;# 
   147     001D                     CCP2CON         equ	29	;# 
   148     001E                     ADRESH          equ	30	;# 
   149     001F                     ADCON0          equ	31	;# 
   150     0081                     OPTION_REG      equ	129	;# 
   151     0085                     TRISA           equ	133	;# 
   152     0086                     TRISB           equ	134	;# 
   153     0087                     TRISC           equ	135	;# 
   154     0088                     TRISD           equ	136	;# 
   155     0089                     TRISE           equ	137	;# 
   156     008C                     PIE1            equ	140	;# 
   157     008D                     PIE2            equ	141	;# 
   158     008E                     PCON            equ	142	;# 
   159     0091                     SSPCON2         equ	145	;# 
   160     0092                     PR2             equ	146	;# 
   161     0093                     SSPADD          equ	147	;# 
   162     0094                     SSPSTAT         equ	148	;# 
   163     0098                     TXSTA           equ	152	;# 
   164     0099                     SPBRG           equ	153	;# 
   165     009C                     CMCON           equ	156	;# 
   166     009D                     CVRCON          equ	157	;# 
   167     009E                     ADRESL          equ	158	;# 
   168     009F                     ADCON1          equ	159	;# 
   169     010C                     EEDATA          equ	268	;# 
   170     010D                     EEADR           equ	269	;# 
   171     010E                     EEDATH          equ	270	;# 
   172     010F                     EEADRH          equ	271	;# 
   173     018C                     EECON1          equ	396	;# 
   174     018D                     EECON2          equ	397	;# 
   175     0000                     INDF            equ	0	;# 
   176     0001                     TMR0            equ	1	;# 
   177     0002                     PCL             equ	2	;# 
   178     0003                     STATUS          equ	3	;# 
   179     0004                     FSR             equ	4	;# 
   180     0005                     PORTA           equ	5	;# 
   181     0006                     PORTB           equ	6	;# 
   182     0007                     PORTC           equ	7	;# 
   183     0008                     PORTD           equ	8	;# 
   184     0009                     PORTE           equ	9	;# 
   185     000A                     PCLATH          equ	10	;# 
   186     000B                     INTCON          equ	11	;# 
   187     000C                     PIR1            equ	12	;# 
   188     000D                     PIR2            equ	13	;# 
   189     000E                     TMR1            equ	14	;# 
   190     000E                     TMR1L           equ	14	;# 
   191     000F                     TMR1H           equ	15	;# 
   192     0010                     T1CON           equ	16	;# 
   193     0011                     TMR2            equ	17	;# 
   194     0012                     T2CON           equ	18	;# 
   195     0013                     SSPBUF          equ	19	;# 
   196     0014                     SSPCON          equ	20	;# 
   197     0015                     CCPR1           equ	21	;# 
   198     0015                     CCPR1L          equ	21	;# 
   199     0016                     CCPR1H          equ	22	;# 
   200     0017                     CCP1CON         equ	23	;# 
   201     0018                     RCSTA           equ	24	;# 
   202     0019                     TXREG           equ	25	;# 
   203     001A                     RCREG           equ	26	;# 
   204     001B                     CCPR2           equ	27	;# 
   205     001B                     CCPR2L          equ	27	;# 
   206     001C                     CCPR2H          equ	28	;# 
   207     001D                     CCP2CON         equ	29	;# 
   208     001E                     ADRESH          equ	30	;# 
   209     001F                     ADCON0          equ	31	;# 
   210     0081                     OPTION_REG      equ	129	;# 
   211     0085                     TRISA           equ	133	;# 
   212     0086                     TRISB           equ	134	;# 
   213     0087                     TRISC           equ	135	;# 
   214     0088                     TRISD           equ	136	;# 
   215     0089                     TRISE           equ	137	;# 
   216     008C                     PIE1            equ	140	;# 
   217     008D                     PIE2            equ	141	;# 
   218     008E                     PCON            equ	142	;# 
   219     0091                     SSPCON2         equ	145	;# 
   220     0092                     PR2             equ	146	;# 
   221     0093                     SSPADD          equ	147	;# 
   222     0094                     SSPSTAT         equ	148	;# 
   223     0098                     TXSTA           equ	152	;# 
   224     0099                     SPBRG           equ	153	;# 
   225     009C                     CMCON           equ	156	;# 
   226     009D                     CVRCON          equ	157	;# 
   227     009E                     ADRESL          equ	158	;# 
   228     009F                     ADCON1          equ	159	;# 
   229     010C                     EEDATA          equ	268	;# 
   230     010D                     EEADR           equ	269	;# 
   231     010E                     EEDATH          equ	270	;# 
   232     010F                     EEADRH          equ	271	;# 
   233     018C                     EECON1          equ	396	;# 
   234     018D                     EECON2          equ	397	;# 
   235     0000                     INDF            equ	0	;# 
   236     0001                     TMR0            equ	1	;# 
   237     0002                     PCL             equ	2	;# 
   238     0003                     STATUS          equ	3	;# 
   239     0004                     FSR             equ	4	;# 
   240     0005                     PORTA           equ	5	;# 
   241     0006                     PORTB           equ	6	;# 
   242     0007                     PORTC           equ	7	;# 
   243     0008                     PORTD           equ	8	;# 
   244     0009                     PORTE           equ	9	;# 
   245     000A                     PCLATH          equ	10	;# 
   246     000B                     INTCON          equ	11	;# 
   247     000C                     PIR1            equ	12	;# 
   248     000D                     PIR2            equ	13	;# 
   249     000E                     TMR1            equ	14	;# 
   250     000E                     TMR1L           equ	14	;# 
   251     000F                     TMR1H           equ	15	;# 
   252     0010                     T1CON           equ	16	;# 
   253     0011                     TMR2            equ	17	;# 
   254     0012                     T2CON           equ	18	;# 
   255     0013                     SSPBUF          equ	19	;# 
   256     0014                     SSPCON          equ	20	;# 
   257     0015                     CCPR1           equ	21	;# 
   258     0015                     CCPR1L          equ	21	;# 
   259     0016                     CCPR1H          equ	22	;# 
   260     0017                     CCP1CON         equ	23	;# 
   261     0018                     RCSTA           equ	24	;# 
   262     0019                     TXREG           equ	25	;# 
   263     001A                     RCREG           equ	26	;# 
   264     001B                     CCPR2           equ	27	;# 
   265     001B                     CCPR2L          equ	27	;# 
   266     001C                     CCPR2H          equ	28	;# 
   267     001D                     CCP2CON         equ	29	;# 
   268     001E                     ADRESH          equ	30	;# 
   269     001F                     ADCON0          equ	31	;# 
   270     0081                     OPTION_REG      equ	129	;# 
   271     0085                     TRISA           equ	133	;# 
   272     0086                     TRISB           equ	134	;# 
   273     0087                     TRISC           equ	135	;# 
   274     0088                     TRISD           equ	136	;# 
   275     0089                     TRISE           equ	137	;# 
   276     008C                     PIE1            equ	140	;# 
   277     008D                     PIE2            equ	141	;# 
   278     008E                     PCON            equ	142	;# 
   279     0091                     SSPCON2         equ	145	;# 
   280     0092                     PR2             equ	146	;# 
   281     0093                     SSPADD          equ	147	;# 
   282     0094                     SSPSTAT         equ	148	;# 
   283     0098                     TXSTA           equ	152	;# 
   284     0099                     SPBRG           equ	153	;# 
   285     009C                     CMCON           equ	156	;# 
   286     009D                     CVRCON          equ	157	;# 
   287     009E                     ADRESL          equ	158	;# 
   288     009F                     ADCON1          equ	159	;# 
   289     010C                     EEDATA          equ	268	;# 
   290     010D                     EEADR           equ	269	;# 
   291     010E                     EEDATH          equ	270	;# 
   292     010F                     EEADRH          equ	271	;# 
   293     018C                     EECON1          equ	396	;# 
   294     018D                     EECON2          equ	397	;# 
   295     0000                     INDF            equ	0	;# 
   296     0001                     TMR0            equ	1	;# 
   297     0002                     PCL             equ	2	;# 
   298     0003                     STATUS          equ	3	;# 
   299     0004                     FSR             equ	4	;# 
   300     0005                     PORTA           equ	5	;# 
   301     0006                     PORTB           equ	6	;# 
   302     0007                     PORTC           equ	7	;# 
   303     0008                     PORTD           equ	8	;# 
   304     0009                     PORTE           equ	9	;# 
   305     000A                     PCLATH          equ	10	;# 
   306     000B                     INTCON          equ	11	;# 
   307     000C                     PIR1            equ	12	;# 
   308     000D                     PIR2            equ	13	;# 
   309     000E                     TMR1            equ	14	;# 
   310     000E                     TMR1L           equ	14	;# 
   311     000F                     TMR1H           equ	15	;# 
   312     0010                     T1CON           equ	16	;# 
   313     0011                     TMR2            equ	17	;# 
   314     0012                     T2CON           equ	18	;# 
   315     0013                     SSPBUF          equ	19	;# 
   316     0014                     SSPCON          equ	20	;# 
   317     0015                     CCPR1           equ	21	;# 
   318     0015                     CCPR1L          equ	21	;# 
   319     0016                     CCPR1H          equ	22	;# 
   320     0017                     CCP1CON         equ	23	;# 
   321     0018                     RCSTA           equ	24	;# 
   322     0019                     TXREG           equ	25	;# 
   323     001A                     RCREG           equ	26	;# 
   324     001B                     CCPR2           equ	27	;# 
   325     001B                     CCPR2L          equ	27	;# 
   326     001C                     CCPR2H          equ	28	;# 
   327     001D                     CCP2CON         equ	29	;# 
   328     001E                     ADRESH          equ	30	;# 
   329     001F                     ADCON0          equ	31	;# 
   330     0081                     OPTION_REG      equ	129	;# 
   331     0085                     TRISA           equ	133	;# 
   332     0086                     TRISB           equ	134	;# 
   333     0087                     TRISC           equ	135	;# 
   334     0088                     TRISD           equ	136	;# 
   335     0089                     TRISE           equ	137	;# 
   336     008C                     PIE1            equ	140	;# 
   337     008D                     PIE2            equ	141	;# 
   338     008E                     PCON            equ	142	;# 
   339     0091                     SSPCON2         equ	145	;# 
   340     0092                     PR2             equ	146	;# 
   341     0093                     SSPADD          equ	147	;# 
   342     0094                     SSPSTAT         equ	148	;# 
   343     0098                     TXSTA           equ	152	;# 
   344     0099                     SPBRG           equ	153	;# 
   345     009C                     CMCON           equ	156	;# 
   346     009D                     CVRCON          equ	157	;# 
   347     009E                     ADRESL          equ	158	;# 
   348     009F                     ADCON1          equ	159	;# 
   349     010C                     EEDATA          equ	268	;# 
   350     010D                     EEADR           equ	269	;# 
   351     010E                     EEDATH          equ	270	;# 
   352     010F                     EEADRH          equ	271	;# 
   353     018C                     EECON1          equ	396	;# 
   354     018D                     EECON2          equ	397	;# 
   355     0000                     INDF            equ	0	;# 
   356     0001                     TMR0            equ	1	;# 
   357     0002                     PCL             equ	2	;# 
   358     0003                     STATUS          equ	3	;# 
   359     0004                     FSR             equ	4	;# 
   360     0005                     PORTA           equ	5	;# 
   361     0006                     PORTB           equ	6	;# 
   362     0007                     PORTC           equ	7	;# 
   363     0008                     PORTD           equ	8	;# 
   364     0009                     PORTE           equ	9	;# 
   365     000A                     PCLATH          equ	10	;# 
   366     000B                     INTCON          equ	11	;# 
   367     000C                     PIR1            equ	12	;# 
   368     000D                     PIR2            equ	13	;# 
   369     000E                     TMR1            equ	14	;# 
   370     000E                     TMR1L           equ	14	;# 
   371     000F                     TMR1H           equ	15	;# 
   372     0010                     T1CON           equ	16	;# 
   373     0011                     TMR2            equ	17	;# 
   374     0012                     T2CON           equ	18	;# 
   375     0013                     SSPBUF          equ	19	;# 
   376     0014                     SSPCON          equ	20	;# 
   377     0015                     CCPR1           equ	21	;# 
   378     0015                     CCPR1L          equ	21	;# 
   379     0016                     CCPR1H          equ	22	;# 
   380     0017                     CCP1CON         equ	23	;# 
   381     0018                     RCSTA           equ	24	;# 
   382     0019                     TXREG           equ	25	;# 
   383     001A                     RCREG           equ	26	;# 
   384     001B                     CCPR2           equ	27	;# 
   385     001B                     CCPR2L          equ	27	;# 
   386     001C                     CCPR2H          equ	28	;# 
   387     001D                     CCP2CON         equ	29	;# 
   388     001E                     ADRESH          equ	30	;# 
   389     001F                     ADCON0          equ	31	;# 
   390     0081                     OPTION_REG      equ	129	;# 
   391     0085                     TRISA           equ	133	;# 
   392     0086                     TRISB           equ	134	;# 
   393     0087                     TRISC           equ	135	;# 
   394     0088                     TRISD           equ	136	;# 
   395     0089                     TRISE           equ	137	;# 
   396     008C                     PIE1            equ	140	;# 
   397     008D                     PIE2            equ	141	;# 
   398     008E                     PCON            equ	142	;# 
   399     0091                     SSPCON2         equ	145	;# 
   400     0092                     PR2             equ	146	;# 
   401     0093                     SSPADD          equ	147	;# 
   402     0094                     SSPSTAT         equ	148	;# 
   403     0098                     TXSTA           equ	152	;# 
   404     0099                     SPBRG           equ	153	;# 
   405     009C                     CMCON           equ	156	;# 
   406     009D                     CVRCON          equ	157	;# 
   407     009E                     ADRESL          equ	158	;# 
   408     009F                     ADCON1          equ	159	;# 
   409     010C                     EEDATA          equ	268	;# 
   410     010D                     EEADR           equ	269	;# 
   411     010E                     EEDATH          equ	270	;# 
   412     010F                     EEADRH          equ	271	;# 
   413     018C                     EECON1          equ	396	;# 
   414     018D                     EECON2          equ	397	;# 
   415     0000                     INDF            equ	0	;# 
   416     0001                     TMR0            equ	1	;# 
   417     0002                     PCL             equ	2	;# 
   418     0003                     STATUS          equ	3	;# 
   419     0004                     FSR             equ	4	;# 
   420     0005                     PORTA           equ	5	;# 
   421     0006                     PORTB           equ	6	;# 
   422     0007                     PORTC           equ	7	;# 
   423     0008                     PORTD           equ	8	;# 
   424     0009                     PORTE           equ	9	;# 
   425     000A                     PCLATH          equ	10	;# 
   426     000B                     INTCON          equ	11	;# 
   427     000C                     PIR1            equ	12	;# 
   428     000D                     PIR2            equ	13	;# 
   429     000E                     TMR1            equ	14	;# 
   430     000E                     TMR1L           equ	14	;# 
   431     000F                     TMR1H           equ	15	;# 
   432     0010                     T1CON           equ	16	;# 
   433     0011                     TMR2            equ	17	;# 
   434     0012                     T2CON           equ	18	;# 
   435     0013                     SSPBUF          equ	19	;# 
   436     0014                     SSPCON          equ	20	;# 
   437     0015                     CCPR1           equ	21	;# 
   438     0015                     CCPR1L          equ	21	;# 
   439     0016                     CCPR1H          equ	22	;# 
   440     0017                     CCP1CON         equ	23	;# 
   441     0018                     RCSTA           equ	24	;# 
   442     0019                     TXREG           equ	25	;# 
   443     001A                     RCREG           equ	26	;# 
   444     001B                     CCPR2           equ	27	;# 
   445     001B                     CCPR2L          equ	27	;# 
   446     001C                     CCPR2H          equ	28	;# 
   447     001D                     CCP2CON         equ	29	;# 
   448     001E                     ADRESH          equ	30	;# 
   449     001F                     ADCON0          equ	31	;# 
   450     0081                     OPTION_REG      equ	129	;# 
   451     0085                     TRISA           equ	133	;# 
   452     0086                     TRISB           equ	134	;# 
   453     0087                     TRISC           equ	135	;# 
   454     0088                     TRISD           equ	136	;# 
   455     0089                     TRISE           equ	137	;# 
   456     008C                     PIE1            equ	140	;# 
   457     008D                     PIE2            equ	141	;# 
   458     008E                     PCON            equ	142	;# 
   459     0091                     SSPCON2         equ	145	;# 
   460     0092                     PR2             equ	146	;# 
   461     0093                     SSPADD          equ	147	;# 
   462     0094                     SSPSTAT         equ	148	;# 
   463     0098                     TXSTA           equ	152	;# 
   464     0099                     SPBRG           equ	153	;# 
   465     009C                     CMCON           equ	156	;# 
   466     009D                     CVRCON          equ	157	;# 
   467     009E                     ADRESL          equ	158	;# 
   468     009F                     ADCON1          equ	159	;# 
   469     010C                     EEDATA          equ	268	;# 
   470     010D                     EEADR           equ	269	;# 
   471     010E                     EEDATH          equ	270	;# 
   472     010F                     EEADRH          equ	271	;# 
   473     018C                     EECON1          equ	396	;# 
   474     018D                     EECON2          equ	397	;# 
   475     0000                     INDF            equ	0	;# 
   476     0001                     TMR0            equ	1	;# 
   477     0002                     PCL             equ	2	;# 
   478     0003                     STATUS          equ	3	;# 
   479     0004                     FSR             equ	4	;# 
   480     0005                     PORTA           equ	5	;# 
   481     0006                     PORTB           equ	6	;# 
   482     0007                     PORTC           equ	7	;# 
   483     0008                     PORTD           equ	8	;# 
   484     0009                     PORTE           equ	9	;# 
   485     000A                     PCLATH          equ	10	;# 
   486     000B                     INTCON          equ	11	;# 
   487     000C                     PIR1            equ	12	;# 
   488     000D                     PIR2            equ	13	;# 
   489     000E                     TMR1            equ	14	;# 
   490     000E                     TMR1L           equ	14	;# 
   491     000F                     TMR1H           equ	15	;# 
   492     0010                     T1CON           equ	16	;# 
   493     0011                     TMR2            equ	17	;# 
   494     0012                     T2CON           equ	18	;# 
   495     0013                     SSPBUF          equ	19	;# 
   496     0014                     SSPCON          equ	20	;# 
   497     0015                     CCPR1           equ	21	;# 
   498     0015                     CCPR1L          equ	21	;# 
   499     0016                     CCPR1H          equ	22	;# 
   500     0017                     CCP1CON         equ	23	;# 
   501     0018                     RCSTA           equ	24	;# 
   502     0019                     TXREG           equ	25	;# 
   503     001A                     RCREG           equ	26	;# 
   504     001B                     CCPR2           equ	27	;# 
   505     001B                     CCPR2L          equ	27	;# 
   506     001C                     CCPR2H          equ	28	;# 
   507     001D                     CCP2CON         equ	29	;# 
   508     001E                     ADRESH          equ	30	;# 
   509     001F                     ADCON0          equ	31	;# 
   510     0081                     OPTION_REG      equ	129	;# 
   511     0085                     TRISA           equ	133	;# 
   512     0086                     TRISB           equ	134	;# 
   513     0087                     TRISC           equ	135	;# 
   514     0088                     TRISD           equ	136	;# 
   515     0089                     TRISE           equ	137	;# 
   516     008C                     PIE1            equ	140	;# 
   517     008D                     PIE2            equ	141	;# 
   518     008E                     PCON            equ	142	;# 
   519     0091                     SSPCON2         equ	145	;# 
   520     0092                     PR2             equ	146	;# 
   521     0093                     SSPADD          equ	147	;# 
   522     0094                     SSPSTAT         equ	148	;# 
   523     0098                     TXSTA           equ	152	;# 
   524     0099                     SPBRG           equ	153	;# 
   525     009C                     CMCON           equ	156	;# 
   526     009D                     CVRCON          equ	157	;# 
   527     009E                     ADRESL          equ	158	;# 
   528     009F                     ADCON1          equ	159	;# 
   529     010C                     EEDATA          equ	268	;# 
   530     010D                     EEADR           equ	269	;# 
   531     010E                     EEDATH          equ	270	;# 
   532     010F                     EEADRH          equ	271	;# 
   533     018C                     EECON1          equ	396	;# 
   534     018D                     EECON2          equ	397	;# 
   535     0000                     INDF            equ	0	;# 
   536     0001                     TMR0            equ	1	;# 
   537     0002                     PCL             equ	2	;# 
   538     0003                     STATUS          equ	3	;# 
   539     0004                     FSR             equ	4	;# 
   540     0005                     PORTA           equ	5	;# 
   541     0006                     PORTB           equ	6	;# 
   542     0007                     PORTC           equ	7	;# 
   543     0008                     PORTD           equ	8	;# 
   544     0009                     PORTE           equ	9	;# 
   545     000A                     PCLATH          equ	10	;# 
   546     000B                     INTCON          equ	11	;# 
   547     000C                     PIR1            equ	12	;# 
   548     000D                     PIR2            equ	13	;# 
   549     000E                     TMR1            equ	14	;# 
   550     000E                     TMR1L           equ	14	;# 
   551     000F                     TMR1H           equ	15	;# 
   552     0010                     T1CON           equ	16	;# 
   553     0011                     TMR2            equ	17	;# 
   554     0012                     T2CON           equ	18	;# 
   555     0013                     SSPBUF          equ	19	;# 
   556     0014                     SSPCON          equ	20	;# 
   557     0015                     CCPR1           equ	21	;# 
   558     0015                     CCPR1L          equ	21	;# 
   559     0016                     CCPR1H          equ	22	;# 
   560     0017                     CCP1CON         equ	23	;# 
   561     0018                     RCSTA           equ	24	;# 
   562     0019                     TXREG           equ	25	;# 
   563     001A                     RCREG           equ	26	;# 
   564     001B                     CCPR2           equ	27	;# 
   565     001B                     CCPR2L          equ	27	;# 
   566     001C                     CCPR2H          equ	28	;# 
   567     001D                     CCP2CON         equ	29	;# 
   568     001E                     ADRESH          equ	30	;# 
   569     001F                     ADCON0          equ	31	;# 
   570     0081                     OPTION_REG      equ	129	;# 
   571     0085                     TRISA           equ	133	;# 
   572     0086                     TRISB           equ	134	;# 
   573     0087                     TRISC           equ	135	;# 
   574     0088                     TRISD           equ	136	;# 
   575     0089                     TRISE           equ	137	;# 
   576     008C                     PIE1            equ	140	;# 
   577     008D                     PIE2            equ	141	;# 
   578     008E                     PCON            equ	142	;# 
   579     0091                     SSPCON2         equ	145	;# 
   580     0092                     PR2             equ	146	;# 
   581     0093                     SSPADD          equ	147	;# 
   582     0094                     SSPSTAT         equ	148	;# 
   583     0098                     TXSTA           equ	152	;# 
   584     0099                     SPBRG           equ	153	;# 
   585     009C                     CMCON           equ	156	;# 
   586     009D                     CVRCON          equ	157	;# 
   587     009E                     ADRESL          equ	158	;# 
   588     009F                     ADCON1          equ	159	;# 
   589     010C                     EEDATA          equ	268	;# 
   590     010D                     EEADR           equ	269	;# 
   591     010E                     EEDATH          equ	270	;# 
   592     010F                     EEADRH          equ	271	;# 
   593     018C                     EECON1          equ	396	;# 
   594     018D                     EECON2          equ	397	;# 
   595     0000                     INDF            equ	0	;# 
   596     0001                     TMR0            equ	1	;# 
   597     0002                     PCL             equ	2	;# 
   598     0003                     STATUS          equ	3	;# 
   599     0004                     FSR             equ	4	;# 
   600     0005                     PORTA           equ	5	;# 
   601     0006                     PORTB           equ	6	;# 
   602     0007                     PORTC           equ	7	;# 
   603     0008                     PORTD           equ	8	;# 
   604     0009                     PORTE           equ	9	;# 
   605     000A                     PCLATH          equ	10	;# 
   606     000B                     INTCON          equ	11	;# 
   607     000C                     PIR1            equ	12	;# 
   608     000D                     PIR2            equ	13	;# 
   609     000E                     TMR1            equ	14	;# 
   610     000E                     TMR1L           equ	14	;# 
   611     000F                     TMR1H           equ	15	;# 
   612     0010                     T1CON           equ	16	;# 
   613     0011                     TMR2            equ	17	;# 
   614     0012                     T2CON           equ	18	;# 
   615     0013                     SSPBUF          equ	19	;# 
   616     0014                     SSPCON          equ	20	;# 
   617     0015                     CCPR1           equ	21	;# 
   618     0015                     CCPR1L          equ	21	;# 
   619     0016                     CCPR1H          equ	22	;# 
   620     0017                     CCP1CON         equ	23	;# 
   621     0018                     RCSTA           equ	24	;# 
   622     0019                     TXREG           equ	25	;# 
   623     001A                     RCREG           equ	26	;# 
   624     001B                     CCPR2           equ	27	;# 
   625     001B                     CCPR2L          equ	27	;# 
   626     001C                     CCPR2H          equ	28	;# 
   627     001D                     CCP2CON         equ	29	;# 
   628     001E                     ADRESH          equ	30	;# 
   629     001F                     ADCON0          equ	31	;# 
   630     0081                     OPTION_REG      equ	129	;# 
   631     0085                     TRISA           equ	133	;# 
   632     0086                     TRISB           equ	134	;# 
   633     0087                     TRISC           equ	135	;# 
   634     0088                     TRISD           equ	136	;# 
   635     0089                     TRISE           equ	137	;# 
   636     008C                     PIE1            equ	140	;# 
   637     008D                     PIE2            equ	141	;# 
   638     008E                     PCON            equ	142	;# 
   639     0091                     SSPCON2         equ	145	;# 
   640     0092                     PR2             equ	146	;# 
   641     0093                     SSPADD          equ	147	;# 
   642     0094                     SSPSTAT         equ	148	;# 
   643     0098                     TXSTA           equ	152	;# 
   644     0099                     SPBRG           equ	153	;# 
   645     009C                     CMCON           equ	156	;# 
   646     009D                     CVRCON          equ	157	;# 
   647     009E                     ADRESL          equ	158	;# 
   648     009F                     ADCON1          equ	159	;# 
   649     010C                     EEDATA          equ	268	;# 
   650     010D                     EEADR           equ	269	;# 
   651     010E                     EEDATH          equ	270	;# 
   652     010F                     EEADRH          equ	271	;# 
   653     018C                     EECON1          equ	396	;# 
   654     018D                     EECON2          equ	397	;# 
   655     0000                     INDF            equ	0	;# 
   656     0001                     TMR0            equ	1	;# 
   657     0002                     PCL             equ	2	;# 
   658     0003                     STATUS          equ	3	;# 
   659     0004                     FSR             equ	4	;# 
   660     0005                     PORTA           equ	5	;# 
   661     0006                     PORTB           equ	6	;# 
   662     0007                     PORTC           equ	7	;# 
   663     0008                     PORTD           equ	8	;# 
   664     0009                     PORTE           equ	9	;# 
   665     000A                     PCLATH          equ	10	;# 
   666     000B                     INTCON          equ	11	;# 
   667     000C                     PIR1            equ	12	;# 
   668     000D                     PIR2            equ	13	;# 
   669     000E                     TMR1            equ	14	;# 
   670     000E                     TMR1L           equ	14	;# 
   671     000F                     TMR1H           equ	15	;# 
   672     0010                     T1CON           equ	16	;# 
   673     0011                     TMR2            equ	17	;# 
   674     0012                     T2CON           equ	18	;# 
   675     0013                     SSPBUF          equ	19	;# 
   676     0014                     SSPCON          equ	20	;# 
   677     0015                     CCPR1           equ	21	;# 
   678     0015                     CCPR1L          equ	21	;# 
   679     0016                     CCPR1H          equ	22	;# 
   680     0017                     CCP1CON         equ	23	;# 
   681     0018                     RCSTA           equ	24	;# 
   682     0019                     TXREG           equ	25	;# 
   683     001A                     RCREG           equ	26	;# 
   684     001B                     CCPR2           equ	27	;# 
   685     001B                     CCPR2L          equ	27	;# 
   686     001C                     CCPR2H          equ	28	;# 
   687     001D                     CCP2CON         equ	29	;# 
   688     001E                     ADRESH          equ	30	;# 
   689     001F                     ADCON0          equ	31	;# 
   690     0081                     OPTION_REG      equ	129	;# 
   691     0085                     TRISA           equ	133	;# 
   692     0086                     TRISB           equ	134	;# 
   693     0087                     TRISC           equ	135	;# 
   694     0088                     TRISD           equ	136	;# 
   695     0089                     TRISE           equ	137	;# 
   696     008C                     PIE1            equ	140	;# 
   697     008D                     PIE2            equ	141	;# 
   698     008E                     PCON            equ	142	;# 
   699     0091                     SSPCON2         equ	145	;# 
   700     0092                     PR2             equ	146	;# 
   701     0093                     SSPADD          equ	147	;# 
   702     0094                     SSPSTAT         equ	148	;# 
   703     0098                     TXSTA           equ	152	;# 
   704     0099                     SPBRG           equ	153	;# 
   705     009C                     CMCON           equ	156	;# 
   706     009D                     CVRCON          equ	157	;# 
   707     009E                     ADRESL          equ	158	;# 
   708     009F                     ADCON1          equ	159	;# 
   709     010C                     EEDATA          equ	268	;# 
   710     010D                     EEADR           equ	269	;# 
   711     010E                     EEDATH          equ	270	;# 
   712     010F                     EEADRH          equ	271	;# 
   713     018C                     EECON1          equ	396	;# 
   714     018D                     EECON2          equ	397	;# 
   715     0000                     INDF            equ	0	;# 
   716     0001                     TMR0            equ	1	;# 
   717     0002                     PCL             equ	2	;# 
   718     0003                     STATUS          equ	3	;# 
   719     0004                     FSR             equ	4	;# 
   720     0005                     PORTA           equ	5	;# 
   721     0006                     PORTB           equ	6	;# 
   722     0007                     PORTC           equ	7	;# 
   723     0008                     PORTD           equ	8	;# 
   724     0009                     PORTE           equ	9	;# 
   725     000A                     PCLATH          equ	10	;# 
   726     000B                     INTCON          equ	11	;# 
   727     000C                     PIR1            equ	12	;# 
   728     000D                     PIR2            equ	13	;# 
   729     000E                     TMR1            equ	14	;# 
   730     000E                     TMR1L           equ	14	;# 
   731     000F                     TMR1H           equ	15	;# 
   732     0010                     T1CON           equ	16	;# 
   733     0011                     TMR2            equ	17	;# 
   734     0012                     T2CON           equ	18	;# 
   735     0013                     SSPBUF          equ	19	;# 
   736     0014                     SSPCON          equ	20	;# 
   737     0015                     CCPR1           equ	21	;# 
   738     0015                     CCPR1L          equ	21	;# 
   739     0016                     CCPR1H          equ	22	;# 
   740     0017                     CCP1CON         equ	23	;# 
   741     0018                     RCSTA           equ	24	;# 
   742     0019                     TXREG           equ	25	;# 
   743     001A                     RCREG           equ	26	;# 
   744     001B                     CCPR2           equ	27	;# 
   745     001B                     CCPR2L          equ	27	;# 
   746     001C                     CCPR2H          equ	28	;# 
   747     001D                     CCP2CON         equ	29	;# 
   748     001E                     ADRESH          equ	30	;# 
   749     001F                     ADCON0          equ	31	;# 
   750     0081                     OPTION_REG      equ	129	;# 
   751     0085                     TRISA           equ	133	;# 
   752     0086                     TRISB           equ	134	;# 
   753     0087                     TRISC           equ	135	;# 
   754     0088                     TRISD           equ	136	;# 
   755     0089                     TRISE           equ	137	;# 
   756     008C                     PIE1            equ	140	;# 
   757     008D                     PIE2            equ	141	;# 
   758     008E                     PCON            equ	142	;# 
   759     0091                     SSPCON2         equ	145	;# 
   760     0092                     PR2             equ	146	;# 
   761     0093                     SSPADD          equ	147	;# 
   762     0094                     SSPSTAT         equ	148	;# 
   763     0098                     TXSTA           equ	152	;# 
   764     0099                     SPBRG           equ	153	;# 
   765     009C                     CMCON           equ	156	;# 
   766     009D                     CVRCON          equ	157	;# 
   767     009E                     ADRESL          equ	158	;# 
   768     009F                     ADCON1          equ	159	;# 
   769     010C                     EEDATA          equ	268	;# 
   770     010D                     EEADR           equ	269	;# 
   771     010E                     EEDATH          equ	270	;# 
   772     010F                     EEADRH          equ	271	;# 
   773     018C                     EECON1          equ	396	;# 
   774     018D                     EECON2          equ	397	;# 
   775                           
   776                           	psect	idataBANK0
   777     16EB                     __pidataBANK0:
   778                           
   779                           ;initializer for _Main_menu
   780     16EB  343C               	retlw	low ((STR_1-__stringbase)| (0+32768))
   781     16EC  344D               	retlw	low ((STR_2-__stringbase)| (0+32768))
   782     16ED  345E               	retlw	low ((STR_3-__stringbase)| (0+32768))
   783     16EE  342B               	retlw	low ((STR_4-__stringbase)| (0+32768))
   784     16EF  341A               	retlw	low ((STR_5-__stringbase)| (0+32768))
   785                           
   786                           ;initializer for _menu_count
   787     16F0  3402               	retlw	2
   788                           
   789                           ;initializer for read_digital_keypad@once
   790     16F1  3401               	retlw	1
   791                           
   792                           	psect	idataBANK1
   793     00D4                     __pidataBANK1:
   794                           
   795                           ;initializer for _events
   796     00D4  344F               	retlw	79
   797     00D5  344E               	retlw	78
   798     00D6  3400               	retlw	0
   799     00D7  3447               	retlw	71
   800     00D8  344E               	retlw	78
   801     00D9  3400               	retlw	0
   802     00DA  3447               	retlw	71
   803     00DB  3431               	retlw	49
   804     00DC  3400               	retlw	0
   805     00DD  3447               	retlw	71
   806     00DE  3432               	retlw	50
   807     00DF  3400               	retlw	0
   808     00E0  3447               	retlw	71
   809     00E1  3433               	retlw	51
   810     00E2  3400               	retlw	0
   811     00E3  3447               	retlw	71
   812     00E4  3434               	retlw	52
   813     00E5  3400               	retlw	0
   814     00E6  3447               	retlw	71
   815     00E7  3435               	retlw	53
   816     00E8  3400               	retlw	0
   817     00E9  3447               	retlw	71
   818     00EA  3452               	retlw	82
   819     00EB  3400               	retlw	0
   820     00EC  3443               	retlw	67
   821     00ED  3430               	retlw	48
   822     00EE  3400               	retlw	0
   823     00EF  3400               	retlw	0
   824     00F0  3400               	retlw	0
   825     00F1  3400               	retlw	0
   826     0019                     _TXREG          set	25
   827     001A                     _RCREG          set	26
   828     0013                     _SSPBUF         set	19
   829     001E                     _ADRESH         set	30
   830     001F                     _ADCON0         set	31
   831     0006                     _PORTB          set	6
   832     0008                     _PORTD          set	8
   833     0064                     _TXIF           set	100
   834     0065                     _RCIF           set	101
   835     00C4                     _CREN           set	196
   836     00C7                     _SPEN           set	199
   837     00A5                     _SSPEN          set	165
   838     00A3                     _SSPM3          set	163
   839     00FA                     _nDONE          set	250
   840     00FA                     _GO             set	250
   841     00F8                     _ADON           set	248
   842     0049                     _RE1            set	73
   843     004A                     _RE2            set	74
   844     0099                     _SPBRG          set	153
   845     0091                     _SSPCON2        set	145
   846     0093                     _SSPADD         set	147
   847     009E                     _ADRESL         set	158
   848     0086                     _TRISB          set	134
   849     0088                     _TRISD          set	136
   850     048E                     _ACKSTAT        set	1166
   851     048C                     _ACKEN          set	1164
   852     048D                     _ACKDT          set	1165
   853     048B                     _RCEN           set	1163
   854     048A                     _PEN            set	1162
   855     0488                     _SEN            set	1160
   856     04A2                     _R_nW           set	1186
   857     04FF                     _ADFM           set	1279
   858     0449                     _TRISE1         set	1097
   859     044A                     _TRISE2         set	1098
   860                           
   861                           	psect	strings
   862     0003                     __pstrings:
   863     0003                     stringtab:
   864     0003                     __stringtab:
   865                           
   866                           ;	String table - string pointers are 1 byte each
   867     0003  1BFF               	btfsc	btemp+1,7
   868     0004  280D               	ljmp	stringcode
   869     0005  1383               	bcf	3,7
   870     0006  187F               	btfsc	btemp+1,0
   871     0007  1783               	bsf	3,7
   872     0008  0800               	movf	0,w
   873     0009  0A84               	incf	4,f
   874     000A  1903               	skipnz
   875     000B  0AFF               	incf	btemp+1,f
   876     000C  0008               	return
   877     000D                     stringcode:
   878     000D                     stringdir:
   879     000D  3000               	movlw	high stringdir
   880     000E  008A               	movwf	10
   881     000F  0804               	movf	4,w
   882     0010  0A84               	incf	4,f
   883     0011  0782               	addwf	2,f
   884     0012                     __stringbase:
   885     0012  3400               	retlw	0
   886     0013                     __end_of__stringtab:
   887     0013                     STR_9:
   888     0013  3454               	retlw	84	;'T'
   889     0014  3449               	retlw	73	;'I'
   890     0015  344D               	retlw	77	;'M'
   891     0016  3445               	retlw	69	;'E'
   892     0017  3420               	retlw	32	;' '
   893     0018  3420               	retlw	32	;' '
   894     0019  3420               	retlw	32	;' '
   895     001A  3420               	retlw	32	;' '
   896     001B  3420               	retlw	32	;' '
   897     001C  3420               	retlw	32	;' '
   898     001D  3445               	retlw	69	;'E'
   899     001E  3456               	retlw	86	;'V'
   900     001F  3445               	retlw	69	;'E'
   901     0020  344E               	retlw	78	;'N'
   902     0021  3454               	retlw	84	;'T'
   903     0022  3420               	retlw	32	;' '
   904     0023  3420               	retlw	32	;' '
   905     0024  3453               	retlw	83	;'S'
   906     0025  3450               	retlw	80	;'P'
   907     0026  3445               	retlw	69	;'E'
   908     0027  3445               	retlw	69	;'E'
   909     0028  3444               	retlw	68	;'D'
   910     0029  340D               	retlw	13
   911     002A  340A               	retlw	10
   912     002B  3400               	retlw	0
   913     002C                     STR_5:
   914     002C  3420               	retlw	32	;' '
   915     002D  3420               	retlw	32	;' '
   916     002E  3420               	retlw	32	;' '
   917     002F  3420               	retlw	32	;' '
   918     0030  3420               	retlw	32	;' '
   919     0031  3420               	retlw	32	;' '
   920     0032  3420               	retlw	32	;' '
   921     0033  3420               	retlw	32	;' '
   922     0034  3420               	retlw	32	;' '
   923     0035  3420               	retlw	32	;' '
   924     0036  3420               	retlw	32	;' '
   925     0037  3420               	retlw	32	;' '
   926     0038  3420               	retlw	32	;' '
   927     0039  3420               	retlw	32	;' '
   928     003A  3420               	retlw	32	;' '
   929     003B  3420               	retlw	32	;' '
   930     003C  3400               	retlw	0
   931     003D                     STR_4:
   932     003D  3453               	retlw	83	;'S'
   933     003E  3445               	retlw	69	;'E'
   934     003F  3454               	retlw	84	;'T'
   935     0040  345F               	retlw	95	;'_'
   936     0041  3454               	retlw	84	;'T'
   937     0042  3449               	retlw	73	;'I'
   938     0043  344D               	retlw	77	;'M'
   939     0044  3445               	retlw	69	;'E'
   940     0045  3420               	retlw	32	;' '
   941     0046  3420               	retlw	32	;' '
   942     0047  3420               	retlw	32	;' '
   943     0048  3420               	retlw	32	;' '
   944     0049  3420               	retlw	32	;' '
   945     004A  3420               	retlw	32	;' '
   946     004B  3420               	retlw	32	;' '
   947     004C  3420               	retlw	32	;' '
   948     004D  3400               	retlw	0
   949     004E                     STR_1:
   950     004E  3456               	retlw	86	;'V'
   951     004F  3449               	retlw	73	;'I'
   952     0050  3445               	retlw	69	;'E'
   953     0051  3457               	retlw	87	;'W'
   954     0052  345F               	retlw	95	;'_'
   955     0053  344C               	retlw	76	;'L'
   956     0054  344F               	retlw	79	;'O'
   957     0055  3447               	retlw	71	;'G'
   958     0056  3420               	retlw	32	;' '
   959     0057  3420               	retlw	32	;' '
   960     0058  3420               	retlw	32	;' '
   961     0059  3420               	retlw	32	;' '
   962     005A  3420               	retlw	32	;' '
   963     005B  3420               	retlw	32	;' '
   964     005C  3420               	retlw	32	;' '
   965     005D  3420               	retlw	32	;' '
   966     005E  3400               	retlw	0
   967     005F                     STR_2:
   968     005F  3443               	retlw	67	;'C'
   969     0060  344C               	retlw	76	;'L'
   970     0061  3445               	retlw	69	;'E'
   971     0062  3441               	retlw	65	;'A'
   972     0063  3452               	retlw	82	;'R'
   973     0064  345F               	retlw	95	;'_'
   974     0065  344C               	retlw	76	;'L'
   975     0066  344F               	retlw	79	;'O'
   976     0067  3447               	retlw	71	;'G'
   977     0068  3420               	retlw	32	;' '
   978     0069  3420               	retlw	32	;' '
   979     006A  3420               	retlw	32	;' '
   980     006B  3420               	retlw	32	;' '
   981     006C  3420               	retlw	32	;' '
   982     006D  3420               	retlw	32	;' '
   983     006E  3420               	retlw	32	;' '
   984     006F  3400               	retlw	0
   985     0070                     STR_3:
   986     0070  3444               	retlw	68	;'D'
   987     0071  344F               	retlw	79	;'O'
   988     0072  3457               	retlw	87	;'W'
   989     0073  344E               	retlw	78	;'N'
   990     0074  344C               	retlw	76	;'L'
   991     0075  344F               	retlw	79	;'O'
   992     0076  3441               	retlw	65	;'A'
   993     0077  3444               	retlw	68	;'D'
   994     0078  345F               	retlw	95	;'_'
   995     0079  344C               	retlw	76	;'L'
   996     007A  344F               	retlw	79	;'O'
   997     007B  3447               	retlw	71	;'G'
   998     007C  3420               	retlw	32	;' '
   999     007D  3420               	retlw	32	;' '
  1000     007E  3420               	retlw	32	;' '
  1001     007F  3420               	retlw	32	;' '
  1002     0080  3400               	retlw	0
  1003     0081                     STR_6:
  1004     0081  3454               	retlw	84	;'T'
  1005     0082  3449               	retlw	73	;'I'
  1006     0083  344D               	retlw	77	;'M'
  1007     0084  3445               	retlw	69	;'E'
  1008     0085  3420               	retlw	32	;' '
  1009     0086  3420               	retlw	32	;' '
  1010     0087  3420               	retlw	32	;' '
  1011     0088  3420               	retlw	32	;' '
  1012     0089  3420               	retlw	32	;' '
  1013     008A  3445               	retlw	69	;'E'
  1014     008B  3456               	retlw	86	;'V'
  1015     008C  3420               	retlw	32	;' '
  1016     008D  3420               	retlw	32	;' '
  1017     008E  3420               	retlw	32	;' '
  1018     008F  3453               	retlw	83	;'S'
  1019     0090  3450               	retlw	80	;'P'
  1020     0091  3400               	retlw	0
  1021     0092                     STR_7:
  1022     0092  3423               	retlw	35	;'#'
  1023     0093  3420               	retlw	32	;' '
  1024     0094  3454               	retlw	84	;'T'
  1025     0095  3449               	retlw	73	;'I'
  1026     0096  344D               	retlw	77	;'M'
  1027     0097  3445               	retlw	69	;'E'
  1028     0098  3420               	retlw	32	;' '
  1029     0099  3420               	retlw	32	;' '
  1030     009A  3420               	retlw	32	;' '
  1031     009B  3420               	retlw	32	;' '
  1032     009C  3420               	retlw	32	;' '
  1033     009D  3445               	retlw	69	;'E'
  1034     009E  3456               	retlw	86	;'V'
  1035     009F  3420               	retlw	32	;' '
  1036     00A0  3453               	retlw	83	;'S'
  1037     00A1  3450               	retlw	80	;'P'
  1038     00A2  3400               	retlw	0
  1039     00A3                     STR_8:
  1040     00A3  344E               	retlw	78	;'N'
  1041     00A4  344F               	retlw	79	;'O'
  1042     00A5  345F               	retlw	95	;'_'
  1043     00A6  344C               	retlw	76	;'L'
  1044     00A7  344F               	retlw	79	;'O'
  1045     00A8  3447               	retlw	71	;'G'
  1046     00A9  3453               	retlw	83	;'S'
  1047     00AA  3428               	retlw	40	;'('
  1048     00AB  3445               	retlw	69	;'E'
  1049     00AC  344D               	retlw	77	;'M'
  1050     00AD  3450               	retlw	80	;'P'
  1051     00AE  3454               	retlw	84	;'T'
  1052     00AF  3459               	retlw	89	;'Y'
  1053     00B0  3429               	retlw	41	;')'
  1054     00B1  3400               	retlw	0
  1055     00B2                     STR_16:
  1056     00B2  3443               	retlw	67	;'C'
  1057     00B3  344C               	retlw	76	;'L'
  1058     00B4  3445               	retlw	69	;'E'
  1059     00B5  3441               	retlw	65	;'A'
  1060     00B6  3452               	retlw	82	;'R'
  1061     00B7  3445               	retlw	69	;'E'
  1062     00B8  3444               	retlw	68	;'D'
  1063     00B9  342E               	retlw	46	;'.'
  1064     00BA  342E               	retlw	46	;'.'
  1065     00BB  342E               	retlw	46	;'.'
  1066     00BC  342E               	retlw	46	;'.'
  1067     00BD  342E               	retlw	46	;'.'
  1068     00BE  342E               	retlw	46	;'.'
  1069     00BF  3400               	retlw	0
  1070     00C0                     STR_13:
  1071     00C0  3444               	retlw	68	;'D'
  1072     00C1  344F               	retlw	79	;'O'
  1073     00C2  3457               	retlw	87	;'W'
  1074     00C3  344E               	retlw	78	;'N'
  1075     00C4  344C               	retlw	76	;'L'
  1076     00C5  344F               	retlw	79	;'O'
  1077     00C6  3441               	retlw	65	;'A'
  1078     00C7  3444               	retlw	68	;'D'
  1079     00C8  3445               	retlw	69	;'E'
  1080     00C9  3444               	retlw	68	;'D'
  1081     00CA  3400               	retlw	0
  1082     00CB                     STR_17:
  1083     00CB  3448               	retlw	72	;'H'
  1084     00CC  3448               	retlw	72	;'H'
  1085     00CD  3420               	retlw	32	;' '
  1086     00CE  344D               	retlw	77	;'M'
  1087     00CF  344D               	retlw	77	;'M'
  1088     00D0  3420               	retlw	32	;' '
  1089     00D1  3453               	retlw	83	;'S'
  1090     00D2  3453               	retlw	83	;'S'
  1091     00D3  3400               	retlw	0
  1092     00A3                     STR_15          equ	STR_8
  1093     0070                     STR_20          equ	STR_3
  1094     005F                     STR_19          equ	STR_2
  1095     004E                     STR_18          equ	STR_1
  1096     003D                     STR_21          equ	STR_4
  1097     002C                     STR_14          equ	STR_5
  1098     002C                     STR_22          equ	STR_5
  1099     0037                     STR_11          equ	STR_5+11
  1100     003A                     STR_10          equ	STR_5+14
  1101     0029                     STR_12          equ	STR_9+22
  1102                           
  1103                           	psect	cinit
  1104     07D9                     start_initialization:	
  1105                           ; #config settings
  1106                           
  1107     07D9                     __initialization:
  1108                           
  1109                           ; Initialize objects allocated to BANK1
  1110     07D9  1383               	bcf	3,7	;select IRP bank0
  1111     07DA  30BE               	movlw	low (__pdataBANK1+30)
  1112     07DB  00FD               	movwf	btemp+-1
  1113     07DC  3000               	movlw	high __pidataBANK1
  1114     07DD  00FE               	movwf	btemp
  1115     07DE  30D4               	movlw	low __pidataBANK1
  1116     07DF  00FF               	movwf	btemp+1
  1117     07E0  30A0               	movlw	low __pdataBANK1
  1118     07E1  0084               	movwf	4
  1119     07E2  160A  118A  279E  120A  118A  	fcall	init_ram0
  1120                           
  1121                           ; Initialize objects allocated to BANK0
  1122     07E7  3070               	movlw	low (__pdataBANK0+7)
  1123     07E8  00FD               	movwf	btemp+-1
  1124     07E9  3016               	movlw	high __pidataBANK0
  1125     07EA  00FE               	movwf	btemp
  1126     07EB  30EB               	movlw	low __pidataBANK0
  1127     07EC  00FF               	movwf	btemp+1
  1128     07ED  3069               	movlw	low __pdataBANK0
  1129     07EE  0084               	movwf	4
  1130     07EF  160A  118A  279E  120A  118A  	fcall	init_ram0
  1131                           
  1132                           ; Clear objects allocated to BANK0
  1133     07F4  3049               	movlw	low __pbssBANK0
  1134     07F5  0084               	movwf	4
  1135     07F6  3069               	movlw	low (__pbssBANK0+32)
  1136     07F7  160A  118A  26F2  120A  118A  	fcall	clear_ram0
  1137     07FC                     end_of_initialization:	
  1138                           ;End of C runtime variable initialization code
  1139                           
  1140     07FC                     __end_of__initialization:
  1141     07FC  0183               	clrf	3
  1142     07FD  120A  158A  2C00   	ljmp	_main	;jump to C main() function
  1143                           
  1144                           	psect	bssBANK0
  1145     0049                     __pbssBANK0:
  1146     0049                     _main_index@main$F277:
  1147     0049                     	ds	2
  1148     004B                     _view:
  1149     004B                     	ds	2
  1150     004D                     _event_count:
  1151     004D                     	ds	2
  1152     004F                     _enter_key:
  1153     004F                     	ds	2
  1154     0051                     _speed:
  1155     0051                     	ds	2
  1156     0053                     _main_index:
  1157     0053                     	ds	2
  1158     0055                     _Event_index:
  1159     0055                     	ds	2
  1160     0057                     _main_flag:
  1161     0057                     	ds	2
  1162     0059                     _ADDR@main$F280:
  1163     0059                     	ds	1
  1164     005A                     _twist_flag:
  1165     005A                     	ds	1
  1166     005B                     _menu_flag:
  1167     005B                     	ds	1
  1168     005C                     _clear_flag:
  1169     005C                     	ds	1
  1170     005D                     _ADDR:
  1171     005D                     	ds	1
  1172     005E                     _key:
  1173     005E                     	ds	1
  1174     005F                     _time:
  1175     005F                     	ds	10
  1176                           
  1177                           	psect	dataBANK0
  1178     0069                     __pdataBANK0:
  1179     0069                     _Main_menu:
  1180     0069                     	ds	5
  1181     006E                     _menu_count:
  1182     006E                     	ds	1
  1183     006F                     read_digital_keypad@once:
  1184     006F                     	ds	1
  1185                           
  1186                           	psect	dataBANK1
  1187     00A0                     __pdataBANK1:
  1188     00A0                     _events:
  1189     00A0                     	ds	30
  1190                           
  1191                           	psect	inittext
  1192     179A                     init_fetch0:	
  1193                           ;	Called with low address in FSR and high address in W
  1194                           
  1195     179A  087E               	movf	btemp,w
  1196     179B  008A               	movwf	10
  1197     179C  087F               	movf	btemp+1,w
  1198     179D  0082               	movwf	2
  1199     179E                     init_ram0:	
  1200                           ;Called with:
  1201                           ;	high address of idata address in btemp 
  1202                           ;	low address of idata address in btemp+1 
  1203                           ;	low address of data in FSR
  1204                           ;	high address + 1 of data in btemp-1
  1205                           
  1206     179E  160A  118A  279A  160A  118A  	fcall	init_fetch0
  1207     17A3  0080               	movwf	0
  1208     17A4  0A84               	incf	4,f
  1209     17A5  0804               	movf	4,w
  1210     17A6  067D               	xorwf	btemp+-1,w
  1211     17A7  1903               	btfsc	3,2
  1212     17A8  3400               	retlw	0
  1213     17A9  0AFF               	incf	btemp+1,f
  1214     17AA  1903               	btfsc	3,2
  1215     17AB  0AFE               	incf	btemp,f
  1216     17AC  2F9E               	goto	init_ram0
  1217                           
  1218                           	psect	clrtext
  1219     16F2                     clear_ram0:	
  1220                           ;	Called with FSR containing the base address, and
  1221                           ;	W with the last address+1
  1222                           
  1223     16F2  0064               	clrwdt	;clear the watchdog before getting into this loop
  1224     16F3                     clrloop0:
  1225     16F3  0180               	clrf	0	;clear RAM location pointed to by FSR
  1226     16F4  0A84               	incf	4,f	;increment pointer
  1227     16F5  0604               	xorwf	4,w	;XOR with final address
  1228     16F6  1903               	btfsc	3,2	;have we reached the end yet?
  1229     16F7  3400               	retlw	0	;all done for this memory range, return
  1230     16F8  0604               	xorwf	4,w	;XOR again to restore value
  1231     16F9  2EF3               	goto	clrloop0	;do the next byte
  1232                           
  1233                           	psect	cstackCOMMON
  1234     0070                     __pcstackCOMMON:
  1235     0070                     ?_read_ds1307:
  1236     0070                     ?_read_ext_eeprom:	
  1237                           ; 1 bytes @ 0x0
  1238                           
  1239     0070                     ?_bcd_to_binary:	
  1240                           ; 1 bytes @ 0x0
  1241                           
  1242     0070                     ?_binary_to_bcd:	
  1243                           ; 1 bytes @ 0x0
  1244                           
  1245     0070                     ?_i2c1_start:	
  1246                           ; 1 bytes @ 0x0
  1247                           
  1248     0070                     ?_i2c1_rep_start:	
  1249                           ; 1 bytes @ 0x0
  1250                           
  1251     0070                     ?_i2c1_read:	
  1252                           ; 1 bytes @ 0x0
  1253                           
  1254     0070                     ?_i2c1_stop:	
  1255                           ; 1 bytes @ 0x0
  1256                           
  1257     0070                     ?_clcd_write:	
  1258                           ; 1 bytes @ 0x0
  1259                           
  1260     0070                     ?_init_display_controller:	
  1261                           ; 1 bytes @ 0x0
  1262                           
  1263     0070                     ?_init_clcd:	
  1264                           ; 1 bytes @ 0x0
  1265                           
  1266     0070                     ?_init_digital_keypad:	
  1267                           ; 1 bytes @ 0x0
  1268                           
  1269     0070                     ?_read_digital_keypad:	
  1270                           ; 1 bytes @ 0x0
  1271                           
  1272     0070                     ?_init_adc:	
  1273                           ; 1 bytes @ 0x0
  1274                           
  1275     0070                     ?_i2c_wait_for_idle:	
  1276                           ; 1 bytes @ 0x0
  1277                           
  1278     0070                     ?_i2c_start:	
  1279                           ; 1 bytes @ 0x0
  1280                           
  1281     0070                     ?_i2c_rep_start:	
  1282                           ; 1 bytes @ 0x0
  1283                           
  1284     0070                     ?_i2c_stop:	
  1285                           ; 1 bytes @ 0x0
  1286                           
  1287     0070                     ?_i2c_read:	
  1288                           ; 1 bytes @ 0x0
  1289                           
  1290     0070                     ?_init_ds1307:	
  1291                           ; 1 bytes @ 0x0
  1292                           
  1293     0070                     ?_store_events:	
  1294                           ; 1 bytes @ 0x0
  1295                           
  1296     0070                     ?_Dash_board:	
  1297                           ; 1 bytes @ 0x0
  1298                           
  1299     0070                     ?_main_menu:	
  1300                           ; 1 bytes @ 0x0
  1301                           
  1302     0070                     ?_view_log:	
  1303                           ; 1 bytes @ 0x0
  1304                           
  1305     0070                     ?_Download_log:	
  1306                           ; 1 bytes @ 0x0
  1307                           
  1308     0070                     ?_clear_log:	
  1309                           ; 1 bytes @ 0x0
  1310                           
  1311     0070                     ?_set_time:	
  1312                           ; 1 bytes @ 0x0
  1313                           
  1314     0070                     ?_init_config:	
  1315                           ; 1 bytes @ 0x0
  1316                           
  1317     0070                     ?_main:	
  1318                           ; 1 bytes @ 0x0
  1319                           
  1320     0070                     ?_putchar:	
  1321                           ; 1 bytes @ 0x0
  1322                           
  1323     0070                     ?_i2c1_wait_for_idle:	
  1324                           ; 1 bytes @ 0x0
  1325                           
  1326     0070                     ?___bmul:	
  1327                           ; 1 bytes @ 0x0
  1328                           
  1329     0070                     ?_i2c1_write:	
  1330                           ; 1 bytes @ 0x0
  1331                           
  1332     0070                     ?_read_adc:	
  1333                           ; 2 bytes @ 0x0
  1334                           
  1335     0070                     ?_i2c_write:	
  1336                           ; 2 bytes @ 0x0
  1337                           
  1338     0070                     ?___awdiv:	
  1339                           ; 2 bytes @ 0x0
  1340                           
  1341     0070                     ?___awmod:	
  1342                           ; 2 bytes @ 0x0
  1343                           
  1344     0070                     ?___lwdiv:	
  1345                           ; 2 bytes @ 0x0
  1346                           
  1347     0070                     ?___lwmod:	
  1348                           ; 2 bytes @ 0x0
  1349                           
  1350     0070                     ?___lldiv:	
  1351                           ; 2 bytes @ 0x0
  1352                           
  1353     0070                     ?___xxtofl:	
  1354                           ; 4 bytes @ 0x0
  1355                           
  1356     0070                     clcd_write@mode:	
  1357                           ; 4 bytes @ 0x0
  1358                           
  1359     0070                     i2c_read@ack:	
  1360                           ; 1 bytes @ 0x0
  1361                           
  1362     0070                     i2c_write@data:	
  1363                           ; 1 bytes @ 0x0
  1364                           
  1365     0070                     putchar@data:	
  1366                           ; 1 bytes @ 0x0
  1367                           
  1368     0070                     i2c1_read@ack:	
  1369                           ; 1 bytes @ 0x0
  1370                           
  1371     0070                     i2c1_write@data:	
  1372                           ; 1 bytes @ 0x0
  1373                           
  1374     0070                     ___bmul@multiplicand:	
  1375                           ; 1 bytes @ 0x0
  1376                           
  1377     0070                     ___awdiv@divisor:	
  1378                           ; 1 bytes @ 0x0
  1379                           
  1380     0070                     ___awmod@divisor:	
  1381                           ; 2 bytes @ 0x0
  1382                           
  1383     0070                     ___lwdiv@divisor:	
  1384                           ; 2 bytes @ 0x0
  1385                           
  1386     0070                     ___lwmod@divisor:	
  1387                           ; 2 bytes @ 0x0
  1388                           
  1389     0070                     ___lldiv@divisor:	
  1390                           ; 2 bytes @ 0x0
  1391                           
  1392     0070                     ___xxtofl@val:	
  1393                           ; 4 bytes @ 0x0
  1394                           
  1395     0070                     ??_i2c1_start:	
  1396                           ; 4 bytes @ 0x0
  1397                           
  1398     0070                     ??_i2c1_write:	
  1399                           ; 1 bytes @ 0x0
  1400                           
  1401     0070                     ??_i2c1_rep_start:	
  1402                           ; 1 bytes @ 0x0
  1403                           
  1404     0070                     ??_i2c1_read:	
  1405                           ; 1 bytes @ 0x0
  1406                           
  1407     0070                     ??_i2c1_stop:	
  1408                           ; 1 bytes @ 0x0
  1409                           
  1410     0070                     ??_init_digital_keypad:	
  1411                           ; 1 bytes @ 0x0
  1412                           
  1413     0070                     ??_read_digital_keypad:	
  1414                           ; 1 bytes @ 0x0
  1415                           
  1416     0070                     ??_init_adc:	
  1417                           ; 1 bytes @ 0x0
  1418                           
  1419     0070                     ??_i2c_wait_for_idle:	
  1420                           ; 1 bytes @ 0x0
  1421                           
  1422     0070                     ??_i2c_start:	
  1423                           ; 1 bytes @ 0x0
  1424                           
  1425     0070                     ??_i2c_rep_start:	
  1426                           ; 1 bytes @ 0x0
  1427                           
  1428     0070                     ??_i2c_stop:	
  1429                           ; 1 bytes @ 0x0
  1430                           
  1431     0070                     ??_i2c_read:	
  1432                           ; 1 bytes @ 0x0
  1433                           
  1434     0070                     ??_i2c_write:	
  1435                           ; 1 bytes @ 0x0
  1436                           
  1437     0070                     ??_putchar:	
  1438                           ; 1 bytes @ 0x0
  1439                           
  1440     0070                     ??_i2c1_wait_for_idle:	
  1441                           ; 1 bytes @ 0x0
  1442                           
  1443                           
  1444                           ; 1 bytes @ 0x0
  1445     0070                     	ds	1
  1446     0071                     ?_write_ds1307:
  1447     0071                     ?_puts:	
  1448                           ; 1 bytes @ 0x1
  1449                           
  1450     0071                     read_digital_keypad@mode:	
  1451                           ; 1 bytes @ 0x1
  1452                           
  1453     0071                     i2c_read@data:	
  1454                           ; 1 bytes @ 0x1
  1455                           
  1456     0071                     write_ds1307@data:	
  1457                           ; 1 bytes @ 0x1
  1458                           
  1459     0071                     i2c1_read@data:	
  1460                           ; 1 bytes @ 0x1
  1461                           
  1462     0071                     ___bmul@product:	
  1463                           ; 1 bytes @ 0x1
  1464                           
  1465     0071                     puts@s:	
  1466                           ; 1 bytes @ 0x1
  1467                           
  1468     0071                     ??_clcd_write:	
  1469                           ; 2 bytes @ 0x1
  1470                           
  1471     0071                     ??___bmul:	
  1472                           ; 1 bytes @ 0x1
  1473                           
  1474                           
  1475                           ; 1 bytes @ 0x1
  1476     0071                     	ds	1
  1477     0072                     read_ds1307@addr:
  1478     0072                     write_ds1307@addr:	
  1479                           ; 1 bytes @ 0x2
  1480                           
  1481     0072                     read_ext_eeprom@addr:	
  1482                           ; 1 bytes @ 0x2
  1483                           
  1484     0072                     ___bmul@multiplier:	
  1485                           ; 1 bytes @ 0x2
  1486                           
  1487     0072                     ___awdiv@dividend:	
  1488                           ; 1 bytes @ 0x2
  1489                           
  1490     0072                     ___awmod@dividend:	
  1491                           ; 2 bytes @ 0x2
  1492                           
  1493     0072                     ___lwdiv@dividend:	
  1494                           ; 2 bytes @ 0x2
  1495                           
  1496     0072                     ___lwmod@dividend:	
  1497                           ; 2 bytes @ 0x2
  1498                           
  1499     0072                     ??_read_ds1307:	
  1500                           ; 2 bytes @ 0x2
  1501                           
  1502     0072                     ??_write_ds1307:	
  1503                           ; 1 bytes @ 0x2
  1504                           
  1505     0072                     ??_read_ext_eeprom:	
  1506                           ; 1 bytes @ 0x2
  1507                           
  1508     0072                     ??_read_adc:	
  1509                           ; 1 bytes @ 0x2
  1510                           
  1511                           
  1512                           ; 1 bytes @ 0x2
  1513     0072                     	ds	1
  1514     0073                     clcd_write@byte:
  1515     0073                     read_ds1307@data:	
  1516                           ; 1 bytes @ 0x3
  1517                           
  1518     0073                     read_ext_eeprom@data:	
  1519                           ; 1 bytes @ 0x3
  1520                           
  1521     0073                     read_adc@adc_reg_val:	
  1522                           ; 1 bytes @ 0x3
  1523                           
  1524     0073                     ??_puts:	
  1525                           ; 2 bytes @ 0x3
  1526                           
  1527     0073                     ??_bcd_to_binary:	
  1528                           ; 1 bytes @ 0x3
  1529                           
  1530                           
  1531                           ; 1 bytes @ 0x3
  1532     0073                     	ds	1
  1533     0074                     ?_clcd_print:
  1534     0074                     ?_get_time:	
  1535                           ; 1 bytes @ 0x4
  1536                           
  1537     0074                     init_ds1307@dummy:	
  1538                           ; 1 bytes @ 0x4
  1539                           
  1540     0074                     get_time@clock_register:	
  1541                           ; 1 bytes @ 0x4
  1542                           
  1543     0074                     ___awdiv@counter:	
  1544                           ; 1 bytes @ 0x4
  1545                           
  1546     0074                     ___awmod@counter:	
  1547                           ; 1 bytes @ 0x4
  1548                           
  1549     0074                     ___lwmod@counter:	
  1550                           ; 1 bytes @ 0x4
  1551                           
  1552     0074                     clcd_print@str:	
  1553                           ; 1 bytes @ 0x4
  1554                           
  1555     0074                     ___lwdiv@quotient:	
  1556                           ; 2 bytes @ 0x4
  1557                           
  1558     0074                     ___lldiv@dividend:	
  1559                           ; 2 bytes @ 0x4
  1560                           
  1561     0074                     ??_init_display_controller:	
  1562                           ; 4 bytes @ 0x4
  1563                           
  1564     0074                     ??_init_ds1307:	
  1565                           ; 1 bytes @ 0x4
  1566                           
  1567     0074                     ??___awdiv:	
  1568                           ; 1 bytes @ 0x4
  1569                           
  1570     0074                     ??___awmod:	
  1571                           ; 1 bytes @ 0x4
  1572                           
  1573     0074                     ??___lwdiv:	
  1574                           ; 1 bytes @ 0x4
  1575                           
  1576     0074                     ??___lwmod:	
  1577                           ; 1 bytes @ 0x4
  1578                           
  1579     0074                     ??___xxtofl:	
  1580                           ; 1 bytes @ 0x4
  1581                           
  1582                           
  1583                           ; 1 bytes @ 0x4
  1584     0074                     	ds	1
  1585     0075                     read_adc@channel:
  1586     0075                     bcd_to_binary@BCD:	
  1587                           ; 1 bytes @ 0x5
  1588                           
  1589     0075                     ___awdiv@sign:	
  1590                           ; 1 bytes @ 0x5
  1591                           
  1592     0075                     ___awmod@sign:	
  1593                           ; 1 bytes @ 0x5
  1594                           
  1595     0075                     ??_get_time:	
  1596                           ; 1 bytes @ 0x5
  1597                           
  1598                           
  1599                           ; 1 bytes @ 0x5
  1600     0075                     	ds	1
  1601     0076                     clcd_print@addr:
  1602     0076                     ___lwdiv@counter:	
  1603                           ; 1 bytes @ 0x6
  1604                           
  1605     0076                     ___awdiv@quotient:	
  1606                           ; 1 bytes @ 0x6
  1607                           
  1608     0076                     ??_init_clcd:	
  1609                           ; 2 bytes @ 0x6
  1610                           
  1611                           
  1612                           ; 1 bytes @ 0x6
  1613     0076                     	ds	1
  1614     0077                     ?_write_ext_eeprom:
  1615     0077                     ?_clcd_putch:	
  1616                           ; 1 bytes @ 0x7
  1617                           
  1618     0077                     ?_display_time:	
  1619                           ; 1 bytes @ 0x7
  1620                           
  1621     0077                     clcd_putch@addr:	
  1622                           ; 1 bytes @ 0x7
  1623                           
  1624     0077                     display_time@clock_register:	
  1625                           ; 1 bytes @ 0x7
  1626                           
  1627     0077                     write_ext_eeprom@data:	
  1628                           ; 1 bytes @ 0x7
  1629                           
  1630     0077                     ??_clcd_print:	
  1631                           ; 1 bytes @ 0x7
  1632                           
  1633     0077                     ??_Download_log:	
  1634                           ; 1 bytes @ 0x7
  1635                           
  1636     0077                     ??_clear_log:	
  1637                           ; 1 bytes @ 0x7
  1638                           
  1639                           
  1640                           ; 1 bytes @ 0x7
  1641     0077                     	ds	1
  1642     0078                     clcd_putch@data:
  1643     0078                     binary_to_bcd@binary:	
  1644                           ; 1 bytes @ 0x8
  1645                           
  1646     0078                     ___xxtofl@sign:	
  1647                           ; 1 bytes @ 0x8
  1648                           
  1649     0078                     ??_write_ext_eeprom:	
  1650                           ; 1 bytes @ 0x8
  1651                           
  1652     0078                     ??_clcd_putch:	
  1653                           ; 1 bytes @ 0x8
  1654                           
  1655     0078                     ??_display_time:	
  1656                           ; 1 bytes @ 0x8
  1657                           
  1658     0078                     ??___lldiv:	
  1659                           ; 1 bytes @ 0x8
  1660                           
  1661                           
  1662                           ; 1 bytes @ 0x8
  1663     0078                     	ds	1
  1664     0079                     ___xxtofl@exp:
  1665     0079                     ___lldiv@quotient:	
  1666                           ; 1 bytes @ 0x9
  1667                           
  1668     0079                     ??_main_menu:	
  1669                           ; 4 bytes @ 0x9
  1670                           
  1671     0079                     ??_view_log:	
  1672                           ; 1 bytes @ 0x9
  1673                           
  1674     0079                     ??_set_time:	
  1675                           ; 1 bytes @ 0x9
  1676                           
  1677                           
  1678                           ; 1 bytes @ 0x9
  1679     0079                     	ds	1
  1680     007A                     write_ext_eeprom@addr:
  1681     007A                     ___xxtofl@arg:	
  1682                           ; 1 bytes @ 0xA
  1683                           
  1684                           
  1685                           ; 4 bytes @ 0xA
  1686     007A                     	ds	1
  1687     007B                     store_events@i:
  1688     007B                     ??_store_events:	
  1689                           ; 2 bytes @ 0xB
  1690                           
  1691                           
  1692                           ; 1 bytes @ 0xB
  1693     007B                     	ds	2
  1694     007D                     ___lldiv@counter:
  1695                           
  1696                           ; 1 bytes @ 0xD
  1697     007D                     	ds	1
  1698     007E                     ??_Dash_board:
  1699     007E                     ??_init_config:	
  1700                           ; 1 bytes @ 0xE
  1701                           
  1702     007E                     ??_main:	
  1703                           ; 1 bytes @ 0xE
  1704                           
  1705                           
  1706                           	psect	cstackBANK0
  1707     0020                     __pcstackBANK0:	
  1708                           ; 1 bytes @ 0xE
  1709                           
  1710     0020                     ?_init_i2c1:
  1711     0020                     ?_init_uart:	
  1712                           ; 1 bytes @ 0x0
  1713                           
  1714     0020                     ?_init_i2c:	
  1715                           ; 1 bytes @ 0x0
  1716                           
  1717     0020                     ?___fldiv:	
  1718                           ; 1 bytes @ 0x0
  1719                           
  1720     0020                     init_i2c@baud:	
  1721                           ; 4 bytes @ 0x0
  1722                           
  1723     0020                     init_uart@baud:	
  1724                           ; 4 bytes @ 0x0
  1725                           
  1726     0020                     init_i2c1@baud:	
  1727                           ; 4 bytes @ 0x0
  1728                           
  1729     0020                     ___fldiv@a:	
  1730                           ; 4 bytes @ 0x0
  1731                           
  1732     0020                     view_log@time_data:	
  1733                           ; 4 bytes @ 0x0
  1734                           
  1735     0020                     Download_log@time_data:	
  1736                           ; 10 bytes @ 0x0
  1737                           
  1738     0020                     ??_binary_to_bcd:	
  1739                           ; 10 bytes @ 0x0
  1740                           
  1741                           
  1742                           ; 1 bytes @ 0x0
  1743     0020                     	ds	4
  1744     0024                     ___fldiv@b:
  1745     0024                     ??_init_i2c1:	
  1746                           ; 4 bytes @ 0x4
  1747                           
  1748     0024                     ??_init_uart:	
  1749                           ; 1 bytes @ 0x4
  1750                           
  1751     0024                     ??_init_i2c:	
  1752                           ; 1 bytes @ 0x4
  1753                           
  1754                           
  1755                           ; 1 bytes @ 0x4
  1756     0024                     	ds	3
  1757     0027                     set_time@blink:
  1758                           
  1759                           ; 1 bytes @ 0x7
  1760     0027                     	ds	1
  1761     0028                     set_time@hour:
  1762     0028                     ??___fldiv:	
  1763                           ; 1 bytes @ 0x8
  1764                           
  1765                           
  1766                           ; 1 bytes @ 0x8
  1767     0028                     	ds	1
  1768     0029                     set_time@minute:
  1769                           
  1770                           ; 1 bytes @ 0x9
  1771     0029                     	ds	1
  1772     002A                     set_time@second:
  1773     002A                     view_log@event_data:	
  1774                           ; 1 bytes @ 0xA
  1775                           
  1776     002A                     Download_log@event_data:	
  1777                           ; 3 bytes @ 0xA
  1778                           
  1779                           
  1780                           ; 3 bytes @ 0xA
  1781     002A                     	ds	1
  1782     002B                     set_time@Clock_register:
  1783                           
  1784                           ; 3 bytes @ 0xB
  1785     002B                     	ds	2
  1786     002D                     view_log@speed_data:
  1787     002D                     Download_log@speed_data:	
  1788                           ; 3 bytes @ 0xD
  1789                           
  1790     002D                     ___fldiv@rem:	
  1791                           ; 3 bytes @ 0xD
  1792                           
  1793                           
  1794                           ; 4 bytes @ 0xD
  1795     002D                     	ds	1
  1796     002E                     set_time@time_flag:
  1797                           
  1798                           ; 1 bytes @ 0xE
  1799     002E                     	ds	2
  1800     0030                     view_log@ADDR2:
  1801     0030                     Download_log@i:	
  1802                           ; 1 bytes @ 0x10
  1803                           
  1804                           
  1805                           ; 2 bytes @ 0x10
  1806     0030                     	ds	1
  1807     0031                     ___fldiv@sign:
  1808     0031                     view_log@j:	
  1809                           ; 1 bytes @ 0x11
  1810                           
  1811                           
  1812                           ; 2 bytes @ 0x11
  1813     0031                     	ds	1
  1814     0032                     Download_log@j:
  1815     0032                     ___fldiv@new_exp:	
  1816                           ; 2 bytes @ 0x12
  1817                           
  1818                           
  1819                           ; 2 bytes @ 0x12
  1820     0032                     	ds	1
  1821     0033                     view_log@i:
  1822                           
  1823                           ; 2 bytes @ 0x13
  1824     0033                     	ds	1
  1825     0034                     Download_log@ADDR1:
  1826     0034                     ___fldiv@grs:	
  1827                           ; 2 bytes @ 0x14
  1828                           
  1829                           
  1830                           ; 4 bytes @ 0x14
  1831     0034                     	ds	1
  1832     0035                     view_log@ADDR1:
  1833                           
  1834                           ; 2 bytes @ 0x15
  1835     0035                     	ds	3
  1836     0038                     ___fldiv@bexp:
  1837                           
  1838                           ; 1 bytes @ 0x18
  1839     0038                     	ds	1
  1840     0039                     ___fldiv@aexp:
  1841                           
  1842                           ; 1 bytes @ 0x19
  1843     0039                     	ds	1
  1844     003A                     ?___fltol:
  1845     003A                     ___fltol@f1:	
  1846                           ; 4 bytes @ 0x1A
  1847                           
  1848                           
  1849                           ; 4 bytes @ 0x1A
  1850     003A                     	ds	4
  1851     003E                     ??___fltol:
  1852                           
  1853                           ; 1 bytes @ 0x1E
  1854     003E                     	ds	4
  1855     0042                     ___fltol@sign1:
  1856                           
  1857                           ; 1 bytes @ 0x22
  1858     0042                     	ds	1
  1859     0043                     ___fltol@exp1:
  1860                           
  1861                           ; 1 bytes @ 0x23
  1862     0043                     	ds	1
  1863     0044                     Dash_board@adc_val:
  1864                           
  1865                           ; 2 bytes @ 0x24
  1866     0044                     	ds	2
  1867     0046                     Dash_board@Clock_register:
  1868                           
  1869                           ; 3 bytes @ 0x26
  1870     0046                     	ds	3
  1871                           
  1872                           	psect	maintext
  1873     0C00                     __pmaintext:	
  1874 ;;
  1875 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1876 ;;
  1877 ;; *************** function _main *****************
  1878 ;; Defined at:
  1879 ;;		line 28 in file "main.c"
  1880 ;; Parameters:    Size  Location     Type
  1881 ;;		None
  1882 ;; Auto vars:     Size  Location     Type
  1883 ;;		None
  1884 ;; Return value:  Size  Location     Type
  1885 ;;                  1    wreg      void 
  1886 ;; Registers used:
  1887 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1888 ;; Tracked objects:
  1889 ;;		On entry : B00/0
  1890 ;;		On exit  : 0/0
  1891 ;;		Unchanged: 0/0
  1892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1893 ;;      Params:         0       0       0       0       0
  1894 ;;      Locals:         0       0       0       0       0
  1895 ;;      Temps:          0       0       0       0       0
  1896 ;;      Totals:         0       0       0       0       0
  1897 ;;Total ram usage:        0 bytes
  1898 ;; Hardware stack levels required when called: 5
  1899 ;; This function calls:
  1900 ;;		_Dash_board
  1901 ;;		_Download_log
  1902 ;;		_clear_log
  1903 ;;		_init_config
  1904 ;;		_main_menu
  1905 ;;		_read_digital_keypad
  1906 ;;		_set_time
  1907 ;;		_view_log
  1908 ;; This function is called by:
  1909 ;;		Startup code after reset
  1910 ;; This function uses a non-reentrant model
  1911 ;;
  1912                           
  1913     0C00                     _main:	
  1914                           ;psect for function _main
  1915                           
  1916     0C00                     l3155:	
  1917                           ;incstack = 0
  1918                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1919                           
  1920                           
  1921                           ;main.c: 29:       {
  1922     0C00  120A  158A  2315  120A  158A  	fcall	_init_config
  1923     0C05                     l382:	
  1924                           ;main.c: 30:             view_log();
  1925                           
  1926                           
  1927                           ;main.c: 31:       };main.c: 33:       {
  1928     0C05  3001               	movlw	1
  1929     0C06  120A  158A  20EB  120A  158A  	fcall	_read_digital_keypad
  1930     0C0B  1283               	bcf	3,5	;RP0=0, select bank0
  1931     0C0C  1303               	bcf	3,6	;RP1=0, select bank0
  1932     0C0D  00DE               	movwf	_key
  1933     0C0E                     l3157:
  1934                           
  1935                           ;main.c: 35:       }
  1936     0C0E  0857               	movf	_main_flag,w
  1937     0C0F  0458               	iorwf	_main_flag+1,w
  1938     0C10  1D03               	btfss	3,2
  1939     0C11  2C13               	goto	u3441
  1940     0C12  2C14               	goto	u3440
  1941     0C13                     u3441:
  1942     0C13  2C1A               	goto	l3161
  1943     0C14                     u3440:
  1944     0C14                     l3159:
  1945                           
  1946                           ;main.c: 36:       else if(main_flag == DOWNLOAD_LOG);main.c: 37:       {
  1947     0C14  120A  118A  20F2  120A  158A  	fcall	_Dash_board
  1948                           
  1949                           ;main.c: 38:             Download_log();
  1950     0C19  2C05               	goto	l382
  1951     0C1A                     l3161:
  1952     0C1A  0357               	decf	_main_flag,w
  1953     0C1B  0458               	iorwf	_main_flag+1,w
  1954     0C1C  1D03               	btfss	3,2
  1955     0C1D  2C1F               	goto	u3451
  1956     0C1E  2C20               	goto	u3450
  1957     0C1F                     u3451:
  1958     0C1F  2C26               	goto	l3165
  1959     0C20                     u3450:
  1960     0C20                     l3163:
  1961                           
  1962                           ;main.c: 40:       else if(main_flag == SET_TIME);main.c: 41:       {
  1963     0C20  120A  158A  26A5  120A  158A  	fcall	_main_menu
  1964                           
  1965                           ;main.c: 42:             set_time();
  1966     0C25  2C05               	goto	l382
  1967     0C26                     l3165:
  1968     0C26  3002               	movlw	2
  1969     0C27  0657               	xorwf	_main_flag,w
  1970     0C28  0458               	iorwf	_main_flag+1,w
  1971     0C29  1D03               	btfss	3,2
  1972     0C2A  2C2C               	goto	u3461
  1973     0C2B  2C2D               	goto	u3460
  1974     0C2C                     u3461:
  1975     0C2C  2C33               	goto	l3169
  1976     0C2D                     u3460:
  1977     0C2D                     l3167:
  1978                           
  1979                           ;main.c: 44: ;main.c: 45:     }
  1980     0C2D  120A  118A  249E  120A  158A  	fcall	_view_log
  1981                           
  1982                           ;main.c: 46:     return;
  1983     0C32  2C05               	goto	l382
  1984     0C33                     l3169:
  1985     0C33  3003               	movlw	3
  1986     0C34  0657               	xorwf	_main_flag,w
  1987     0C35  0458               	iorwf	_main_flag+1,w
  1988     0C36  1D03               	btfss	3,2
  1989     0C37  2C39               	goto	u3471
  1990     0C38  2C3A               	goto	u3470
  1991     0C39                     u3471:
  1992     0C39  2C40               	goto	l3173
  1993     0C3A                     u3470:
  1994     0C3A                     l3171:
  1995     0C3A  120A  158A  20C1  120A  158A  	fcall	_clear_log
  1996     0C3F  2C05               	goto	l382
  1997     0C40                     l3173:
  1998     0C40  3004               	movlw	4
  1999     0C41  0657               	xorwf	_main_flag,w
  2000     0C42  0458               	iorwf	_main_flag+1,w
  2001     0C43  1D03               	btfss	3,2
  2002     0C44  2C46               	goto	u3481
  2003     0C45  2C47               	goto	u3480
  2004     0C46                     u3481:
  2005     0C46  2C4D               	goto	l3177
  2006     0C47                     u3480:
  2007     0C47                     l3175:
  2008     0C47  120A  118A  221C  120A  158A  	fcall	_Download_log
  2009     0C4C  2C05               	goto	l382
  2010     0C4D                     l3177:
  2011     0C4D  3005               	movlw	5
  2012     0C4E  0657               	xorwf	_main_flag,w
  2013     0C4F  0458               	iorwf	_main_flag+1,w
  2014     0C50  1D03               	btfss	3,2
  2015     0C51  2C53               	goto	u3491
  2016     0C52  2C54               	goto	u3490
  2017     0C53                     u3491:
  2018     0C53  2C5A               	goto	l388
  2019     0C54                     u3490:
  2020     0C54                     l3179:
  2021     0C54  120A  118A  234A  120A  158A  	fcall	_set_time
  2022     0C59  2C05               	goto	l382
  2023     0C5A                     l388:
  2024     0C5A  2C05               	goto	l382
  2025     0C5B  120A  118A  2800   	ljmp	start
  2026     0C5E                     __end_of_main:
  2027                           
  2028                           	psect	text1
  2029     049E                     __ptext1:	
  2030 ;; *************** function _view_log *****************
  2031 ;; Defined at:
  2032 ;;		line 149 in file "BLACK_BOX.c"
  2033 ;; Parameters:    Size  Location     Type
  2034 ;;		None
  2035 ;; Auto vars:     Size  Location     Type
  2036 ;;  j               2   17[BANK0 ] int 
  2037 ;;  ADDR2           1   16[BANK0 ] unsigned char 
  2038 ;;  time_data      10    0[BANK0 ] unsigned char [10]
  2039 ;;  speed_data      3   13[BANK0 ] unsigned char [3]
  2040 ;;  event_data      3   10[BANK0 ] unsigned char [3]
  2041 ;;  ADDR1           2   21[BANK0 ] int 
  2042 ;;  i               2   19[BANK0 ] int 
  2043 ;; Return value:  Size  Location     Type
  2044 ;;                  1    wreg      void 
  2045 ;; Registers used:
  2046 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2047 ;; Tracked objects:
  2048 ;;		On entry : 0/0
  2049 ;;		On exit  : 0/0
  2050 ;;		Unchanged: 0/0
  2051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2052 ;;      Params:         0       0       0       0       0
  2053 ;;      Locals:         0      23       0       0       0
  2054 ;;      Temps:          3       0       0       0       0
  2055 ;;      Totals:         3      23       0       0       0
  2056 ;;Total ram usage:       26 bytes
  2057 ;; Hardware stack levels used: 1
  2058 ;; Hardware stack levels required when called: 3
  2059 ;; This function calls:
  2060 ;;		___bmul
  2061 ;;		_clcd_print
  2062 ;;		_clcd_putch
  2063 ;;		_clcd_write
  2064 ;;		_read_digital_keypad
  2065 ;;		_read_ext_eeprom
  2066 ;; This function is called by:
  2067 ;;		_main
  2068 ;; This function uses a non-reentrant model
  2069 ;;
  2070                           
  2071     049E                     _view_log:	
  2072                           ;psect for function _view_log
  2073                           
  2074     049E                     l2875:	
  2075                           ;incstack = 0
  2076                           ; Regs used in _view_log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2077                           
  2078                           
  2079                           ;BLACK_BOX.c: 151:     int i = 0;
  2080     049E  1283               	bcf	3,5	;RP0=0, select bank0
  2081     049F  1303               	bcf	3,6	;RP1=0, select bank0
  2082     04A0  01B3               	clrf	view_log@i
  2083     04A1  01B4               	clrf	view_log@i+1
  2084     04A2                     l2877:
  2085                           
  2086                           ;BLACK_BOX.c: 153:     unsigned char time_data[10], event_data[3], speed_data[3];;BLACK_
      +                          BOX.c: 155:     if (clear_flag == 0 && event_count > 0)
  2087     04A2  085C               	movf	_clear_flag,w
  2088     04A3  1D03               	btfss	3,2
  2089     04A4  2CA6               	goto	u3131
  2090     04A5  2CA7               	goto	u3130
  2091     04A6                     u3131:
  2092     04A6  2DE3               	goto	l2955
  2093     04A7                     u3130:
  2094     04A7                     l2879:
  2095     04A7  084E               	movf	_event_count+1,w
  2096     04A8  3A80               	xorlw	128
  2097     04A9  00FF               	movwf	btemp+1
  2098     04AA  3080               	movlw	128
  2099     04AB  027F               	subwf	btemp+1,w
  2100     04AC  1D03               	skipz
  2101     04AD  2CB0               	goto	u3145
  2102     04AE  3001               	movlw	1
  2103     04AF  024D               	subwf	_event_count,w
  2104     04B0                     u3145:
  2105     04B0  1C03               	skipc
  2106     04B1  2CB3               	goto	u3141
  2107     04B2  2CB4               	goto	u3140
  2108     04B3                     u3141:
  2109     04B3  2DE3               	goto	l2955
  2110     04B4                     u3140:
  2111     04B4                     l2881:
  2112                           
  2113                           ;BLACK_BOX.c: 156:     {;BLACK_BOX.c: 157:         clcd_print("# TIME     EV SP", (0x80 
      +                          + 0));
  2114     04B4  3080               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2115     04B5  00F4               	movwf	clcd_print@str
  2116     04B6  3080               	movlw	128
  2117     04B7  00F5               	movwf	clcd_print@str+1
  2118     04B8  3080               	movlw	128
  2119     04B9  00F6               	movwf	clcd_print@addr
  2120     04BA  120A  158A  216B  120A  118A  	fcall	_clcd_print
  2121     04BF                     l2883:
  2122                           
  2123                           ;BLACK_BOX.c: 160:         {;BLACK_BOX.c: 162:             unsigned char ADDR2 = ((i) * 
      +                          12);
  2124     04BF  300C               	movlw	12
  2125     04C0  00F0               	movwf	___bmul@multiplicand
  2126     04C1  1283               	bcf	3,5	;RP0=0, select bank0
  2127     04C2  1303               	bcf	3,6	;RP1=0, select bank0
  2128     04C3  0833               	movf	view_log@i,w
  2129     04C4  160A  118A  2787  120A  118A  	fcall	___bmul
  2130     04C9  1283               	bcf	3,5	;RP0=0, select bank0
  2131     04CA  1303               	bcf	3,6	;RP1=0, select bank0
  2132     04CB  00B0               	movwf	view_log@ADDR2
  2133     04CC                     l2885:
  2134                           
  2135                           ;BLACK_BOX.c: 163:             ADDR1 = ADDR2;
  2136     04CC  0830               	movf	view_log@ADDR2,w
  2137     04CD  00F9               	movwf	??_view_log
  2138     04CE  01FA               	clrf	??_view_log+1
  2139     04CF  0879               	movf	??_view_log,w
  2140     04D0  00B5               	movwf	view_log@ADDR1
  2141     04D1  087A               	movf	??_view_log+1,w
  2142     04D2  00B6               	movwf	view_log@ADDR1+1
  2143     04D3                     l2887:
  2144                           
  2145                           ;BLACK_BOX.c: 166:             for (int j = 0; j < 8; j++)
  2146     04D3  01B1               	clrf	view_log@j
  2147     04D4  01B2               	clrf	view_log@j+1
  2148     04D5                     l2893:
  2149                           
  2150                           ;BLACK_BOX.c: 167:             {;BLACK_BOX.c: 168:                 time_data[j] = read_e
      +                          xt_eeprom(ADDR1++);
  2151     04D5  1283               	bcf	3,5	;RP0=0, select bank0
  2152     04D6  1303               	bcf	3,6	;RP1=0, select bank0
  2153     04D7  0831               	movf	view_log@j,w
  2154     04D8  3E20               	addlw	(low (view_log@time_data| 0))& (0+255)
  2155     04D9  0084               	movwf	4
  2156     04DA  0835               	movf	view_log@ADDR1,w
  2157     04DB  120A  158A  2140  120A  118A  	fcall	_read_ext_eeprom
  2158     04E0  1383               	bcf	3,7	;select IRP bank0
  2159     04E1  0080               	movwf	0
  2160     04E2                     l2895:
  2161     04E2  3001               	movlw	1
  2162     04E3  1283               	bcf	3,5	;RP0=0, select bank0
  2163     04E4  1303               	bcf	3,6	;RP1=0, select bank0
  2164     04E5  07B5               	addwf	view_log@ADDR1,f
  2165     04E6  1803               	skipnc
  2166     04E7  0AB6               	incf	view_log@ADDR1+1,f
  2167     04E8  3000               	movlw	0
  2168     04E9  07B6               	addwf	view_log@ADDR1+1,f
  2169     04EA                     l2897:
  2170                           
  2171                           ;BLACK_BOX.c: 169:             }
  2172     04EA  3001               	movlw	1
  2173     04EB  07B1               	addwf	view_log@j,f
  2174     04EC  1803               	skipnc
  2175     04ED  0AB2               	incf	view_log@j+1,f
  2176     04EE  3000               	movlw	0
  2177     04EF  07B2               	addwf	view_log@j+1,f
  2178     04F0                     l2899:
  2179     04F0  0832               	movf	view_log@j+1,w
  2180     04F1  3A80               	xorlw	128
  2181     04F2  00FF               	movwf	btemp+1
  2182     04F3  3080               	movlw	128
  2183     04F4  027F               	subwf	btemp+1,w
  2184     04F5  1D03               	skipz
  2185     04F6  2CF9               	goto	u3155
  2186     04F7  3008               	movlw	8
  2187     04F8  0231               	subwf	view_log@j,w
  2188     04F9                     u3155:
  2189     04F9  1C03               	skipc
  2190     04FA  2CFC               	goto	u3151
  2191     04FB  2CFD               	goto	u3150
  2192     04FC                     u3151:
  2193     04FC  2CD5               	goto	l2893
  2194     04FD                     u3150:
  2195     04FD                     l2901:
  2196                           
  2197                           ;BLACK_BOX.c: 170:             time_data[9] = '\0';
  2198     04FD  1283               	bcf	3,5	;RP0=0, select bank0
  2199     04FE  1303               	bcf	3,6	;RP1=0, select bank0
  2200     04FF  01A9               	clrf	view_log@time_data+9
  2201     0500                     l2903:
  2202                           
  2203                           ;BLACK_BOX.c: 173:             event_data[0] = read_ext_eeprom(ADDR1++);
  2204     0500  0835               	movf	view_log@ADDR1,w
  2205     0501  120A  158A  2140  120A  118A  	fcall	_read_ext_eeprom
  2206     0506  1283               	bcf	3,5	;RP0=0, select bank0
  2207     0507  1303               	bcf	3,6	;RP1=0, select bank0
  2208     0508  00AA               	movwf	view_log@event_data
  2209     0509                     l2905:
  2210     0509  3001               	movlw	1
  2211     050A  07B5               	addwf	view_log@ADDR1,f
  2212     050B  1803               	skipnc
  2213     050C  0AB6               	incf	view_log@ADDR1+1,f
  2214     050D  3000               	movlw	0
  2215     050E  07B6               	addwf	view_log@ADDR1+1,f
  2216     050F                     l2907:
  2217                           
  2218                           ;BLACK_BOX.c: 174:             event_data[1] = read_ext_eeprom(ADDR1++);
  2219     050F  0835               	movf	view_log@ADDR1,w
  2220     0510  120A  158A  2140  120A  118A  	fcall	_read_ext_eeprom
  2221     0515  1283               	bcf	3,5	;RP0=0, select bank0
  2222     0516  1303               	bcf	3,6	;RP1=0, select bank0
  2223     0517  00AB               	movwf	view_log@event_data+1
  2224     0518                     l2909:
  2225     0518  3001               	movlw	1
  2226     0519  07B5               	addwf	view_log@ADDR1,f
  2227     051A  1803               	skipnc
  2228     051B  0AB6               	incf	view_log@ADDR1+1,f
  2229     051C  3000               	movlw	0
  2230     051D  07B6               	addwf	view_log@ADDR1+1,f
  2231                           
  2232                           ;BLACK_BOX.c: 175:             event_data[2] = '\0';
  2233     051E  01AC               	clrf	view_log@event_data+2
  2234     051F                     l2911:
  2235                           
  2236                           ;BLACK_BOX.c: 178:             speed_data[0] = read_ext_eeprom(ADDR1++);
  2237     051F  0835               	movf	view_log@ADDR1,w
  2238     0520  120A  158A  2140  120A  118A  	fcall	_read_ext_eeprom
  2239     0525  1283               	bcf	3,5	;RP0=0, select bank0
  2240     0526  1303               	bcf	3,6	;RP1=0, select bank0
  2241     0527  00AD               	movwf	view_log@speed_data
  2242     0528                     l2913:
  2243     0528  3001               	movlw	1
  2244     0529  07B5               	addwf	view_log@ADDR1,f
  2245     052A  1803               	skipnc
  2246     052B  0AB6               	incf	view_log@ADDR1+1,f
  2247     052C  3000               	movlw	0
  2248     052D  07B6               	addwf	view_log@ADDR1+1,f
  2249     052E                     l2915:
  2250                           
  2251                           ;BLACK_BOX.c: 179:             speed_data[1] = read_ext_eeprom(ADDR1++);
  2252     052E  0835               	movf	view_log@ADDR1,w
  2253     052F  120A  158A  2140  120A  118A  	fcall	_read_ext_eeprom
  2254     0534  1283               	bcf	3,5	;RP0=0, select bank0
  2255     0535  1303               	bcf	3,6	;RP1=0, select bank0
  2256     0536  00AE               	movwf	view_log@speed_data+1
  2257     0537                     l2917:
  2258     0537  3001               	movlw	1
  2259     0538  07B5               	addwf	view_log@ADDR1,f
  2260     0539  1803               	skipnc
  2261     053A  0AB6               	incf	view_log@ADDR1+1,f
  2262     053B  3000               	movlw	0
  2263     053C  07B6               	addwf	view_log@ADDR1+1,f
  2264                           
  2265                           ;BLACK_BOX.c: 180:             speed_data[2] = '\0';
  2266     053D  01AF               	clrf	view_log@speed_data+2
  2267     053E                     l2919:
  2268                           
  2269                           ;BLACK_BOX.c: 183:             clcd_putch((i + '0'), (0xC0 + 0));
  2270     053E  30C0               	movlw	192
  2271     053F  00F7               	movwf	clcd_putch@addr
  2272     0540  0833               	movf	view_log@i,w
  2273     0541  3E30               	addlw	48
  2274     0542  160A  118A  2776  120A  118A  	fcall	_clcd_putch
  2275     0547                     l2921:
  2276                           
  2277                           ;BLACK_BOX.c: 184:             clcd_print(time_data, (0xC0 + 2));
  2278     0547  3020               	movlw	(low (view_log@time_data| 0))& (0+255)
  2279     0548  00F4               	movwf	clcd_print@str
  2280     0549  3000               	movlw	0
  2281     054A  00F5               	movwf	clcd_print@str+1
  2282     054B  30C2               	movlw	194
  2283     054C  00F6               	movwf	clcd_print@addr
  2284     054D  120A  158A  216B  120A  118A  	fcall	_clcd_print
  2285     0552                     l2923:
  2286                           
  2287                           ;BLACK_BOX.c: 185:             clcd_print(event_data, (0xC0 + 11));
  2288     0552  302A               	movlw	(low (view_log@event_data| 0))& (0+255)
  2289     0553  00F4               	movwf	clcd_print@str
  2290     0554  3000               	movlw	0
  2291     0555  00F5               	movwf	clcd_print@str+1
  2292     0556  30CB               	movlw	203
  2293     0557  00F6               	movwf	clcd_print@addr
  2294     0558  120A  158A  216B  120A  118A  	fcall	_clcd_print
  2295     055D                     l2925:
  2296                           
  2297                           ;BLACK_BOX.c: 186:             clcd_print(speed_data, (0xC0 + 14));
  2298     055D  302D               	movlw	(low (view_log@speed_data| 0))& (0+255)
  2299     055E  00F4               	movwf	clcd_print@str
  2300     055F  3000               	movlw	0
  2301     0560  00F5               	movwf	clcd_print@str+1
  2302     0561  30CE               	movlw	206
  2303     0562  00F6               	movwf	clcd_print@addr
  2304     0563  120A  158A  216B  120A  118A  	fcall	_clcd_print
  2305     0568                     l2927:
  2306                           
  2307                           ;BLACK_BOX.c: 190:             {;BLACK_BOX.c: 191:                 key = read_digital_ke
      +                          ypad(1);
  2308     0568  3001               	movlw	1
  2309     0569  120A  158A  20EB  120A  118A  	fcall	_read_digital_keypad
  2310     056E  1283               	bcf	3,5	;RP0=0, select bank0
  2311     056F  1303               	bcf	3,6	;RP1=0, select bank0
  2312     0570  00DE               	movwf	_key
  2313     0571                     l2929:
  2314                           
  2315                           ;BLACK_BOX.c: 193:                 if (key == 0x2F)
  2316     0571  302F               	movlw	47
  2317     0572  065E               	xorwf	_key,w
  2318     0573  1D03               	btfss	3,2
  2319     0574  2D76               	goto	u3161
  2320     0575  2D77               	goto	u3160
  2321     0576                     u3161:
  2322     0576  2D85               	goto	l2939
  2323     0577                     u3160:
  2324     0577                     l2931:
  2325                           
  2326                           ;BLACK_BOX.c: 194:                 {;BLACK_BOX.c: 195:                     clcd_write(0x
      +                          01, 0);
  2327     0577  01F0               	clrf	clcd_write@mode
  2328     0578  3001               	movlw	1
  2329     0579  120A  158A  222E  120A  118A  	fcall	_clcd_write
  2330     057E                     l2933:
  2331                           
  2332                           ;BLACK_BOX.c: 196:                     main_flag = MAIN_MENU;
  2333     057E  3001               	movlw	1
  2334     057F  1283               	bcf	3,5	;RP0=0, select bank0
  2335     0580  1303               	bcf	3,6	;RP1=0, select bank0
  2336     0581  00D7               	movwf	_main_flag
  2337     0582  3000               	movlw	0
  2338     0583  00D8               	movwf	_main_flag+1
  2339     0584  2E0E               	goto	l252
  2340     0585                     l2939:
  2341     0585  303E               	movlw	62
  2342     0586  065E               	xorwf	_key,w
  2343     0587  1D03               	btfss	3,2
  2344     0588  2D8A               	goto	u3171
  2345     0589  2D8B               	goto	u3170
  2346     058A                     u3171:
  2347     058A  2DC6               	goto	l2949
  2348     058B                     u3170:
  2349     058B                     l2941:
  2350                           
  2351                           ;BLACK_BOX.c: 200:                 {;BLACK_BOX.c: 202:                     if (i < event
      +                          _count - 1 && i < 9)
  2352     058B  084D               	movf	_event_count,w
  2353     058C  3EFF               	addlw	255
  2354     058D  00F9               	movwf	??_view_log
  2355     058E  084E               	movf	_event_count+1,w
  2356     058F  1803               	skipnc
  2357     0590  3E01               	addlw	1
  2358     0591  3EFF               	addlw	255
  2359     0592  00FA               	movwf	??_view_log+1
  2360     0593  0834               	movf	view_log@i+1,w
  2361     0594  3A80               	xorlw	128
  2362     0595  00FB               	movwf	??_view_log+2
  2363     0596  087A               	movf	??_view_log+1,w
  2364     0597  3A80               	xorlw	128
  2365     0598  027B               	subwf	??_view_log+2,w
  2366     0599  1D03               	skipz
  2367     059A  2D9D               	goto	u3185
  2368     059B  0879               	movf	??_view_log,w
  2369     059C  0233               	subwf	view_log@i,w
  2370     059D                     u3185:
  2371     059D  1803               	skipnc
  2372     059E  2DA0               	goto	u3181
  2373     059F  2DA1               	goto	u3180
  2374     05A0                     u3181:
  2375     05A0  2DB8               	goto	l255
  2376     05A1                     u3180:
  2377     05A1                     l2943:
  2378     05A1  1283               	bcf	3,5	;RP0=0, select bank0
  2379     05A2  1303               	bcf	3,6	;RP1=0, select bank0
  2380     05A3  0834               	movf	view_log@i+1,w
  2381     05A4  3A80               	xorlw	128
  2382     05A5  00FF               	movwf	btemp+1
  2383     05A6  3080               	movlw	128
  2384     05A7  027F               	subwf	btemp+1,w
  2385     05A8  1D03               	skipz
  2386     05A9  2DAC               	goto	u3195
  2387     05AA  3009               	movlw	9
  2388     05AB  0233               	subwf	view_log@i,w
  2389     05AC                     u3195:
  2390     05AC  1803               	skipnc
  2391     05AD  2DAF               	goto	u3191
  2392     05AE  2DB0               	goto	u3190
  2393     05AF                     u3191:
  2394     05AF  2DB8               	goto	l255
  2395     05B0                     u3190:
  2396     05B0                     l2945:
  2397                           
  2398                           ;BLACK_BOX.c: 203:                     {;BLACK_BOX.c: 205:                         i++;
  2399     05B0  3001               	movlw	1
  2400     05B1  1283               	bcf	3,5	;RP0=0, select bank0
  2401     05B2  1303               	bcf	3,6	;RP1=0, select bank0
  2402     05B3  07B3               	addwf	view_log@i,f
  2403     05B4  1803               	skipnc
  2404     05B5  0AB4               	incf	view_log@i+1,f
  2405     05B6  3000               	movlw	0
  2406     05B7  07B4               	addwf	view_log@i+1,f
  2407     05B8                     l255:	
  2408                           ;BLACK_BOX.c: 207:                     }
  2409                           
  2410                           
  2411                           ;BLACK_BOX.c: 208:                     _delay((unsigned long)((200)*(20000000/4000.0)));
  2412     05B8  3006               	movlw	6
  2413     05B9  00FB               	movwf	??_view_log+2
  2414     05BA  3013               	movlw	19
  2415     05BB  00FA               	movwf	??_view_log+1
  2416     05BC  30AD               	movlw	173
  2417     05BD  00F9               	movwf	??_view_log
  2418     05BE                     u3507:
  2419     05BE  0BF9               	decfsz	??_view_log,f
  2420     05BF  2DBE               	goto	u3507
  2421     05C0  0BFA               	decfsz	??_view_log+1,f
  2422     05C1  2DBE               	goto	u3507
  2423     05C2  0BFB               	decfsz	??_view_log+2,f
  2424     05C3  2DBE               	goto	u3507
  2425     05C4  2DC5               	nop2
  2426                           
  2427                           ;BLACK_BOX.c: 209:                     break;
  2428     05C5  2CBF               	goto	l2883
  2429     05C6                     l2949:
  2430     05C6  303D               	movlw	61
  2431     05C7  065E               	xorwf	_key,w
  2432     05C8  1D03               	btfss	3,2
  2433     05C9  2DCB               	goto	u3201
  2434     05CA  2DCC               	goto	u3200
  2435     05CB                     u3201:
  2436     05CB  2DE2               	goto	l253
  2437     05CC                     u3200:
  2438     05CC                     l2951:
  2439                           
  2440                           ;BLACK_BOX.c: 212:                 {;BLACK_BOX.c: 214:                     if (i > 0)
  2441     05CC  0834               	movf	view_log@i+1,w
  2442     05CD  3A80               	xorlw	128
  2443     05CE  00FF               	movwf	btemp+1
  2444     05CF  3080               	movlw	128
  2445     05D0  027F               	subwf	btemp+1,w
  2446     05D1  1D03               	skipz
  2447     05D2  2DD5               	goto	u3215
  2448     05D3  3001               	movlw	1
  2449     05D4  0233               	subwf	view_log@i,w
  2450     05D5                     u3215:
  2451     05D5  1C03               	skipc
  2452     05D6  2DD8               	goto	u3211
  2453     05D7  2DD9               	goto	u3210
  2454     05D8                     u3211:
  2455     05D8  2DB8               	goto	l255
  2456     05D9                     u3210:
  2457     05D9                     l2953:
  2458                           
  2459                           ;BLACK_BOX.c: 215:                     {;BLACK_BOX.c: 217:                         i--;
  2460     05D9  30FF               	movlw	255
  2461     05DA  1283               	bcf	3,5	;RP0=0, select bank0
  2462     05DB  1303               	bcf	3,6	;RP1=0, select bank0
  2463     05DC  07B3               	addwf	view_log@i,f
  2464     05DD  1803               	skipnc
  2465     05DE  0AB4               	incf	view_log@i+1,f
  2466     05DF  30FF               	movlw	255
  2467     05E0  07B4               	addwf	view_log@i+1,f
  2468     05E1  2DB8               	goto	l255
  2469     05E2                     l253:
  2470     05E2  2D68               	goto	l2927
  2471     05E3                     l2955:
  2472                           
  2473                           ;BLACK_BOX.c: 227:     {;BLACK_BOX.c: 229:         ADDR = 0x00;
  2474     05E3  1283               	bcf	3,5	;RP0=0, select bank0
  2475     05E4  1303               	bcf	3,6	;RP1=0, select bank0
  2476     05E5  01DD               	clrf	_ADDR
  2477                           
  2478                           ;BLACK_BOX.c: 230:         event_count = 0;
  2479     05E6  01CD               	clrf	_event_count
  2480     05E7  01CE               	clrf	_event_count+1
  2481     05E8                     l2957:
  2482                           
  2483                           ;BLACK_BOX.c: 231:         clcd_write(0x01, 0);
  2484     05E8  01F0               	clrf	clcd_write@mode
  2485     05E9  3001               	movlw	1
  2486     05EA  120A  158A  222E  120A  118A  	fcall	_clcd_write
  2487     05EF                     l2959:
  2488                           
  2489                           ;BLACK_BOX.c: 232:         clcd_print("NO_LOGS(EMPTY)", (0x80 + 2));
  2490     05EF  3091               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2491     05F0  00F4               	movwf	clcd_print@str
  2492     05F1  3080               	movlw	128
  2493     05F2  00F5               	movwf	clcd_print@str+1
  2494     05F3  3082               	movlw	130
  2495     05F4  00F6               	movwf	clcd_print@addr
  2496     05F5  120A  158A  216B  120A  118A  	fcall	_clcd_print
  2497     05FA                     l2961:
  2498                           
  2499                           ;BLACK_BOX.c: 233:        _delay((unsigned long)((410000)*(20000000/4000000.0)));
  2500     05FA  300B               	movlw	11
  2501     05FB  00FB               	movwf	??_view_log+2
  2502     05FC  3067               	movlw	103
  2503     05FD  00FA               	movwf	??_view_log+1
  2504     05FE  304D               	movlw	77
  2505     05FF  00F9               	movwf	??_view_log
  2506     0600                     u3517:
  2507     0600  0BF9               	decfsz	??_view_log,f
  2508     0601  2E00               	goto	u3517
  2509     0602  0BFA               	decfsz	??_view_log+1,f
  2510     0603  2E00               	goto	u3517
  2511     0604  0BFB               	decfsz	??_view_log+2,f
  2512     0605  2E00               	goto	u3517
  2513     0606                     l2963:
  2514                           
  2515                           ;BLACK_BOX.c: 234:         clcd_write(0x01, 0);
  2516     0606  01F0               	clrf	clcd_write@mode
  2517     0607  3001               	movlw	1
  2518     0608  120A  158A  222E  120A  118A  	fcall	_clcd_write
  2519     060D  2D7E               	goto	l2933
  2520     060E                     l252:
  2521     060E  0008               	return
  2522     060F                     __end_of_view_log:
  2523                           
  2524                           	psect	text2
  2525     034A                     __ptext2:	
  2526 ;; *************** function _set_time *****************
  2527 ;; Defined at:
  2528 ;;		line 305 in file "BLACK_BOX.c"
  2529 ;; Parameters:    Size  Location     Type
  2530 ;;		None
  2531 ;; Auto vars:     Size  Location     Type
  2532 ;;  second          1   10[BANK0 ] unsigned char 
  2533 ;;  minute          1    9[BANK0 ] unsigned char 
  2534 ;;  hour            1    8[BANK0 ] unsigned char 
  2535 ;;  Clock_regist    3   11[BANK0 ] unsigned char [3]
  2536 ;;  time_flag       1   14[BANK0 ] unsigned char 
  2537 ;;  blink           1    7[BANK0 ] unsigned char 
  2538 ;; Return value:  Size  Location     Type
  2539 ;;                  1    wreg      void 
  2540 ;; Registers used:
  2541 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2542 ;; Tracked objects:
  2543 ;;		On entry : 0/0
  2544 ;;		On exit  : 0/0
  2545 ;;		Unchanged: 0/0
  2546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2547 ;;      Params:         0       0       0       0       0
  2548 ;;      Locals:         0       8       0       0       0
  2549 ;;      Temps:          3       0       0       0       0
  2550 ;;      Totals:         3       8       0       0       0
  2551 ;;Total ram usage:       11 bytes
  2552 ;; Hardware stack levels used: 1
  2553 ;; Hardware stack levels required when called: 4
  2554 ;; This function calls:
  2555 ;;		_bcd_to_binary
  2556 ;;		_binary_to_bcd
  2557 ;;		_clcd_print
  2558 ;;		_clcd_putch
  2559 ;;		_clcd_write
  2560 ;;		_display_time
  2561 ;;		_get_time
  2562 ;;		_read_digital_keypad
  2563 ;;		_write_ds1307
  2564 ;; This function is called by:
  2565 ;;		_main
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568                           
  2569     034A                     _set_time:	
  2570                           ;psect for function _set_time
  2571                           
  2572     034A                     l3059:	
  2573                           ;incstack = 0
  2574                           ; Regs used in _set_time: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2575                           
  2576                           
  2577                           ;BLACK_BOX.c: 307:     unsigned char Clock_register[3];;BLACK_BOX.c: 308:     unsigned c
      +                          har blink = 0;
  2578     034A  1283               	bcf	3,5	;RP0=0, select bank0
  2579     034B  1303               	bcf	3,6	;RP1=0, select bank0
  2580     034C  01A7               	clrf	set_time@blink
  2581                           
  2582                           ;BLACK_BOX.c: 309:     unsigned char time_flag = 0;
  2583     034D  01AE               	clrf	set_time@time_flag
  2584     034E                     l3061:
  2585                           
  2586                           ;BLACK_BOX.c: 312:     get_time(Clock_register);
  2587     034E  302B               	movlw	(low (set_time@Clock_register| 0))& (0+255)
  2588     034F  00F4               	movwf	get_time@clock_register
  2589     0350  120A  158A  2012  120A  118A  	fcall	_get_time
  2590     0355                     l3063:
  2591                           
  2592                           ;BLACK_BOX.c: 313:     clcd_print("HH MM SS", (0x80 + 0));
  2593     0355  30B9               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  2594     0356  00F4               	movwf	clcd_print@str
  2595     0357  3080               	movlw	128
  2596     0358  00F5               	movwf	clcd_print@str+1
  2597     0359  3080               	movlw	128
  2598     035A  00F6               	movwf	clcd_print@addr
  2599     035B  120A  158A  216B  120A  118A  	fcall	_clcd_print
  2600     0360                     l3065:
  2601                           
  2602                           ;BLACK_BOX.c: 314:     display_time(Clock_register);
  2603     0360  302B               	movlw	(low (set_time@Clock_register| 0))& (0+255)
  2604     0361  00F7               	movwf	display_time@clock_register
  2605     0362  120A  158A  2357  120A  118A  	fcall	_display_time
  2606     0367                     l3067:
  2607                           
  2608                           ;BLACK_BOX.c: 317:     {;BLACK_BOX.c: 318:         key = read_digital_keypad(1);
  2609     0367  3001               	movlw	1
  2610     0368  120A  158A  20EB  120A  118A  	fcall	_read_digital_keypad
  2611     036D  1283               	bcf	3,5	;RP0=0, select bank0
  2612     036E  1303               	bcf	3,6	;RP1=0, select bank0
  2613     036F  00DE               	movwf	_key
  2614     0370                     l3069:
  2615                           
  2616                           ;BLACK_BOX.c: 320:         if(key == 0x3D)
  2617     0370  303D               	movlw	61
  2618     0371  065E               	xorwf	_key,w
  2619     0372  1D03               	btfss	3,2
  2620     0373  2B75               	goto	u3271
  2621     0374  2B76               	goto	u3270
  2622     0375                     u3271:
  2623     0375  2B81               	goto	l3077
  2624     0376                     u3270:
  2625     0376                     l3071:
  2626                           
  2627                           ;BLACK_BOX.c: 321:         {;BLACK_BOX.c: 322:             if(time_flag == 2)
  2628     0376  3002               	movlw	2
  2629     0377  062E               	xorwf	set_time@time_flag,w
  2630     0378  1D03               	btfss	3,2
  2631     0379  2B7B               	goto	u3281
  2632     037A  2B7C               	goto	u3280
  2633     037B                     u3281:
  2634     037B  2B7E               	goto	l3075
  2635     037C                     u3280:
  2636     037C                     l3073:
  2637                           
  2638                           ;BLACK_BOX.c: 323:             {;BLACK_BOX.c: 324:                 time_flag = 0;
  2639     037C  01AE               	clrf	set_time@time_flag
  2640                           
  2641                           ;BLACK_BOX.c: 325:             }
  2642     037D  2C33               	goto	l3131
  2643     037E                     l3075:
  2644                           
  2645                           ;BLACK_BOX.c: 327:             {;BLACK_BOX.c: 328:                 time_flag++;
  2646     037E  3001               	movlw	1
  2647     037F  07AE               	addwf	set_time@time_flag,f
  2648     0380  2C33               	goto	l3131
  2649     0381                     l3077:
  2650     0381  303E               	movlw	62
  2651     0382  065E               	xorwf	_key,w
  2652     0383  1D03               	btfss	3,2
  2653     0384  2B86               	goto	u3291
  2654     0385  2B87               	goto	u3290
  2655     0386                     u3291:
  2656     0386  2BF5               	goto	l3117
  2657     0387                     u3290:
  2658     0387                     l3079:
  2659                           
  2660                           ;BLACK_BOX.c: 332:         {;BLACK_BOX.c: 333:             if(time_flag == 0)
  2661     0387  082E               	movf	set_time@time_flag,w
  2662     0388  1D03               	btfss	3,2
  2663     0389  2B8B               	goto	u3301
  2664     038A  2B8C               	goto	u3300
  2665     038B                     u3301:
  2666     038B  2BA9               	goto	l3091
  2667     038C                     u3300:
  2668     038C                     l3081:
  2669                           
  2670                           ;BLACK_BOX.c: 334:             {;BLACK_BOX.c: 335:                 unsigned char hour = 
      +                          bcd_to_binary(Clock_register[0]);
  2671     038C  082B               	movf	set_time@Clock_register,w
  2672     038D  160A  118A  27AD  120A  118A  	fcall	_bcd_to_binary
  2673     0392  1283               	bcf	3,5	;RP0=0, select bank0
  2674     0393  1303               	bcf	3,6	;RP1=0, select bank0
  2675     0394  00A8               	movwf	set_time@hour
  2676     0395                     l3083:
  2677                           
  2678                           ;BLACK_BOX.c: 336:                     if(hour == 23)
  2679     0395  3017               	movlw	23
  2680     0396  0628               	xorwf	set_time@hour,w
  2681     0397  1D03               	btfss	3,2
  2682     0398  2B9A               	goto	u3311
  2683     0399  2B9B               	goto	u3310
  2684     039A                     u3311:
  2685     039A  2B9D               	goto	l3087
  2686     039B                     u3310:
  2687     039B                     l3085:
  2688                           
  2689                           ;BLACK_BOX.c: 337:                     {;BLACK_BOX.c: 338:                        hour =
      +                           0;
  2690     039B  01A8               	clrf	set_time@hour
  2691                           
  2692                           ;BLACK_BOX.c: 339:                     }
  2693     039C  2B9F               	goto	l3089
  2694     039D                     l3087:
  2695                           
  2696                           ;BLACK_BOX.c: 341:                     {;BLACK_BOX.c: 342:                        hour++
      +                          ;
  2697     039D  3001               	movlw	1
  2698     039E  07A8               	addwf	set_time@hour,f
  2699     039F                     l3089:
  2700                           
  2701                           ;BLACK_BOX.c: 344:                 Clock_register[0] = binary_to_bcd(hour);
  2702     039F  0828               	movf	set_time@hour,w
  2703     03A0  120A  158A  2264  120A  118A  	fcall	_binary_to_bcd
  2704     03A5  1283               	bcf	3,5	;RP0=0, select bank0
  2705     03A6  1303               	bcf	3,6	;RP1=0, select bank0
  2706     03A7  00AB               	movwf	set_time@Clock_register
  2707                           
  2708                           ;BLACK_BOX.c: 345:             }
  2709     03A8  2BED               	goto	l3115
  2710     03A9                     l3091:
  2711     03A9  032E               	decf	set_time@time_flag,w
  2712     03AA  1D03               	btfss	3,2
  2713     03AB  2BAD               	goto	u3321
  2714     03AC  2BAE               	goto	u3320
  2715     03AD                     u3321:
  2716     03AD  2BCB               	goto	l3103
  2717     03AE                     u3320:
  2718     03AE                     l3093:
  2719                           
  2720                           ;BLACK_BOX.c: 347:             {;BLACK_BOX.c: 348:                    unsigned char minu
      +                          te = bcd_to_binary(Clock_register[1]);
  2721     03AE  082C               	movf	set_time@Clock_register+1,w
  2722     03AF  160A  118A  27AD  120A  118A  	fcall	_bcd_to_binary
  2723     03B4  1283               	bcf	3,5	;RP0=0, select bank0
  2724     03B5  1303               	bcf	3,6	;RP1=0, select bank0
  2725     03B6  00A9               	movwf	set_time@minute
  2726     03B7                     l3095:
  2727                           
  2728                           ;BLACK_BOX.c: 349:                     if(minute == 59)
  2729     03B7  303B               	movlw	59
  2730     03B8  0629               	xorwf	set_time@minute,w
  2731     03B9  1D03               	btfss	3,2
  2732     03BA  2BBC               	goto	u3331
  2733     03BB  2BBD               	goto	u3330
  2734     03BC                     u3331:
  2735     03BC  2BBF               	goto	l3099
  2736     03BD                     u3330:
  2737     03BD                     l3097:
  2738                           
  2739                           ;BLACK_BOX.c: 350:                     {;BLACK_BOX.c: 351:                        minute
      +                           = 0;
  2740     03BD  01A9               	clrf	set_time@minute
  2741                           
  2742                           ;BLACK_BOX.c: 352:                     }
  2743     03BE  2BC1               	goto	l3101
  2744     03BF                     l3099:
  2745                           
  2746                           ;BLACK_BOX.c: 354:                     {;BLACK_BOX.c: 355:                        minute
      +                          ++;
  2747     03BF  3001               	movlw	1
  2748     03C0  07A9               	addwf	set_time@minute,f
  2749     03C1                     l3101:
  2750                           
  2751                           ;BLACK_BOX.c: 357:                 Clock_register[1] = binary_to_bcd(minute);
  2752     03C1  0829               	movf	set_time@minute,w
  2753     03C2  120A  158A  2264  120A  118A  	fcall	_binary_to_bcd
  2754     03C7  1283               	bcf	3,5	;RP0=0, select bank0
  2755     03C8  1303               	bcf	3,6	;RP1=0, select bank0
  2756     03C9  00AC               	movwf	set_time@Clock_register+1
  2757                           
  2758                           ;BLACK_BOX.c: 358:             }
  2759     03CA  2BED               	goto	l3115
  2760     03CB                     l3103:
  2761     03CB  3002               	movlw	2
  2762     03CC  062E               	xorwf	set_time@time_flag,w
  2763     03CD  1D03               	btfss	3,2
  2764     03CE  2BD0               	goto	u3341
  2765     03CF  2BD1               	goto	u3340
  2766     03D0                     u3341:
  2767     03D0  2BED               	goto	l3115
  2768     03D1                     u3340:
  2769     03D1                     l3105:
  2770                           
  2771                           ;BLACK_BOX.c: 360:             {;BLACK_BOX.c: 361:                 unsigned char second 
      +                          = bcd_to_binary(Clock_register[2]);
  2772     03D1  082D               	movf	set_time@Clock_register+2,w
  2773     03D2  160A  118A  27AD  120A  118A  	fcall	_bcd_to_binary
  2774     03D7  1283               	bcf	3,5	;RP0=0, select bank0
  2775     03D8  1303               	bcf	3,6	;RP1=0, select bank0
  2776     03D9  00AA               	movwf	set_time@second
  2777     03DA                     l3107:
  2778                           
  2779                           ;BLACK_BOX.c: 362:                     if(second == 59)
  2780     03DA  303B               	movlw	59
  2781     03DB  062A               	xorwf	set_time@second,w
  2782     03DC  1D03               	btfss	3,2
  2783     03DD  2BDF               	goto	u3351
  2784     03DE  2BE0               	goto	u3350
  2785     03DF                     u3351:
  2786     03DF  2BE2               	goto	l3111
  2787     03E0                     u3350:
  2788     03E0                     l3109:
  2789                           
  2790                           ;BLACK_BOX.c: 363:                     {;BLACK_BOX.c: 364:                        second
      +                           = 0;
  2791     03E0  01AA               	clrf	set_time@second
  2792                           
  2793                           ;BLACK_BOX.c: 365:                     }
  2794     03E1  2BE4               	goto	l3113
  2795     03E2                     l3111:
  2796                           
  2797                           ;BLACK_BOX.c: 367:                     {;BLACK_BOX.c: 368:                       second+
      +                          +;
  2798     03E2  3001               	movlw	1
  2799     03E3  07AA               	addwf	set_time@second,f
  2800     03E4                     l3113:
  2801                           
  2802                           ;BLACK_BOX.c: 370:                 Clock_register[2] = binary_to_bcd(second);
  2803     03E4  082A               	movf	set_time@second,w
  2804     03E5  120A  158A  2264  120A  118A  	fcall	_binary_to_bcd
  2805     03EA  1283               	bcf	3,5	;RP0=0, select bank0
  2806     03EB  1303               	bcf	3,6	;RP1=0, select bank0
  2807     03EC  00AD               	movwf	set_time@Clock_register+2
  2808     03ED                     l3115:
  2809                           
  2810                           ;BLACK_BOX.c: 372:             display_time(Clock_register);
  2811     03ED  302B               	movlw	(low (set_time@Clock_register| 0))& (0+255)
  2812     03EE  00F7               	movwf	display_time@clock_register
  2813     03EF  120A  158A  2357  120A  118A  	fcall	_display_time
  2814                           
  2815                           ;BLACK_BOX.c: 374:         }
  2816     03F4  2C33               	goto	l3131
  2817     03F5                     l3117:
  2818     03F5  302F               	movlw	47
  2819     03F6  065E               	xorwf	_key,w
  2820     03F7  1D03               	btfss	3,2
  2821     03F8  2BFA               	goto	u3361
  2822     03F9  2BFB               	goto	u3360
  2823     03FA                     u3361:
  2824     03FA  2C09               	goto	l3125
  2825     03FB                     u3360:
  2826     03FB                     l3119:
  2827                           
  2828                           ;BLACK_BOX.c: 376:         {;BLACK_BOX.c: 377:             clcd_write(0x01, 0);
  2829     03FB  01F0               	clrf	clcd_write@mode
  2830     03FC  3001               	movlw	1
  2831     03FD  120A  158A  222E  120A  118A  	fcall	_clcd_write
  2832     0402                     l3121:
  2833                           
  2834                           ;BLACK_BOX.c: 378:             main_flag = MAIN_MENU;
  2835     0402  3001               	movlw	1
  2836     0403  1283               	bcf	3,5	;RP0=0, select bank0
  2837     0404  1303               	bcf	3,6	;RP1=0, select bank0
  2838     0405  00D7               	movwf	_main_flag
  2839     0406  3000               	movlw	0
  2840     0407  00D8               	movwf	_main_flag+1
  2841                           
  2842                           ;BLACK_BOX.c: 379:             break;
  2843     0408  2C9D               	goto	l310
  2844     0409                     l3125:
  2845     0409  3037               	movlw	55
  2846     040A  065E               	xorwf	_key,w
  2847     040B  1D03               	btfss	3,2
  2848     040C  2C0E               	goto	u3371
  2849     040D  2C0F               	goto	u3370
  2850     040E                     u3371:
  2851     040E  2C33               	goto	l3131
  2852     040F                     u3370:
  2853     040F                     l3127:
  2854                           
  2855                           ;BLACK_BOX.c: 382:         {;BLACK_BOX.c: 383:             write_ds1307(0x02, Clock_regi
      +                          ster[0]);
  2856     040F  082B               	movf	set_time@Clock_register,w
  2857     0410  00F1               	movwf	write_ds1307@data
  2858     0411  3002               	movlw	2
  2859     0412  160A  118A  27C3  120A  118A  	fcall	_write_ds1307
  2860                           
  2861                           ;BLACK_BOX.c: 384:             write_ds1307(0x01, Clock_register[1]);
  2862     0417  1283               	bcf	3,5	;RP0=0, select bank0
  2863     0418  1303               	bcf	3,6	;RP1=0, select bank0
  2864     0419  082C               	movf	set_time@Clock_register+1,w
  2865     041A  00F1               	movwf	write_ds1307@data
  2866     041B  3001               	movlw	1
  2867     041C  160A  118A  27C3  120A  118A  	fcall	_write_ds1307
  2868                           
  2869                           ;BLACK_BOX.c: 385:             write_ds1307(0x00, Clock_register[2]);
  2870     0421  1283               	bcf	3,5	;RP0=0, select bank0
  2871     0422  1303               	bcf	3,6	;RP1=0, select bank0
  2872     0423  082D               	movf	set_time@Clock_register+2,w
  2873     0424  00F1               	movwf	write_ds1307@data
  2874     0425  3000               	movlw	0
  2875     0426  160A  118A  27C3  120A  118A  	fcall	_write_ds1307
  2876                           
  2877                           ;BLACK_BOX.c: 386:             clcd_write(0x01, 0);
  2878     042B  01F0               	clrf	clcd_write@mode
  2879     042C  3001               	movlw	1
  2880     042D  120A  158A  222E  120A  118A  	fcall	_clcd_write
  2881     0432  2C02               	goto	l3121
  2882     0433                     l3131:
  2883                           
  2884                           ;BLACK_BOX.c: 391:         if(blink)
  2885     0433  1283               	bcf	3,5	;RP0=0, select bank0
  2886     0434  1303               	bcf	3,6	;RP1=0, select bank0
  2887     0435  0827               	movf	set_time@blink,w
  2888     0436  1903               	btfsc	3,2
  2889     0437  2C39               	goto	u3381
  2890     0438  2C3A               	goto	u3380
  2891     0439                     u3381:
  2892     0439  2C7E               	goto	l3145
  2893     043A                     u3380:
  2894     043A                     l3133:
  2895                           
  2896                           ;BLACK_BOX.c: 392:         {;BLACK_BOX.c: 393:            if(time_flag == 0)
  2897     043A  082E               	movf	set_time@time_flag,w
  2898     043B  1D03               	btfss	3,2
  2899     043C  2C3E               	goto	u3391
  2900     043D  2C3F               	goto	u3390
  2901     043E                     u3391:
  2902     043E  2C50               	goto	l3137
  2903     043F                     u3390:
  2904     043F                     l3135:
  2905                           
  2906                           ;BLACK_BOX.c: 394:            {;BLACK_BOX.c: 395:                clcd_putch(' ', (0xC0 +
      +                           0));
  2907     043F  30C0               	movlw	192
  2908     0440  00F7               	movwf	clcd_putch@addr
  2909     0441  3020               	movlw	32
  2910     0442  160A  118A  2776  120A  118A  	fcall	_clcd_putch
  2911                           
  2912                           ;BLACK_BOX.c: 396:                clcd_putch(' ', (0xC0 + 1));
  2913     0447  30C1               	movlw	193
  2914     0448  00F7               	movwf	clcd_putch@addr
  2915     0449  3020               	movlw	32
  2916     044A  160A  118A  2776  120A  118A  	fcall	_clcd_putch
  2917                           
  2918                           ;BLACK_BOX.c: 398:            }
  2919     044F  2C85               	goto	l3147
  2920     0450                     l3137:
  2921     0450  032E               	decf	set_time@time_flag,w
  2922     0451  1D03               	btfss	3,2
  2923     0452  2C54               	goto	u3401
  2924     0453  2C55               	goto	u3400
  2925     0454                     u3401:
  2926     0454  2C66               	goto	l3141
  2927     0455                     u3400:
  2928     0455                     l3139:
  2929                           
  2930                           ;BLACK_BOX.c: 400:            {;BLACK_BOX.c: 401:                clcd_putch(' ', (0xC0 +
      +                           3));
  2931     0455  30C3               	movlw	195
  2932     0456  00F7               	movwf	clcd_putch@addr
  2933     0457  3020               	movlw	32
  2934     0458  160A  118A  2776  120A  118A  	fcall	_clcd_putch
  2935                           
  2936                           ;BLACK_BOX.c: 402:                clcd_putch(' ', (0xC0 + 4));
  2937     045D  30C4               	movlw	196
  2938     045E  00F7               	movwf	clcd_putch@addr
  2939     045F  3020               	movlw	32
  2940     0460  160A  118A  2776  120A  118A  	fcall	_clcd_putch
  2941                           
  2942                           ;BLACK_BOX.c: 403:            }
  2943     0465  2C85               	goto	l3147
  2944     0466                     l3141:
  2945     0466  3002               	movlw	2
  2946     0467  062E               	xorwf	set_time@time_flag,w
  2947     0468  1D03               	btfss	3,2
  2948     0469  2C6B               	goto	u3411
  2949     046A  2C6C               	goto	u3410
  2950     046B                     u3411:
  2951     046B  2C7D               	goto	l304
  2952     046C                     u3410:
  2953     046C                     l3143:
  2954                           
  2955                           ;BLACK_BOX.c: 405:            {;BLACK_BOX.c: 406:                clcd_putch(' ', (0xC0 +
      +                           6));
  2956     046C  30C6               	movlw	198
  2957     046D  00F7               	movwf	clcd_putch@addr
  2958     046E  3020               	movlw	32
  2959     046F  160A  118A  2776  120A  118A  	fcall	_clcd_putch
  2960                           
  2961                           ;BLACK_BOX.c: 407:                clcd_putch(' ', (0xC0 + 7));
  2962     0474  30C7               	movlw	199
  2963     0475  00F7               	movwf	clcd_putch@addr
  2964     0476  3020               	movlw	32
  2965     0477  160A  118A  2776  120A  118A  	fcall	_clcd_putch
  2966     047C  2C85               	goto	l3147
  2967     047D                     l304:
  2968                           
  2969                           ;BLACK_BOX.c: 409:         }
  2970     047D  2C85               	goto	l3147
  2971     047E                     l3145:
  2972                           
  2973                           ;BLACK_BOX.c: 411:         {;BLACK_BOX.c: 412:             display_time(Clock_register);
  2974     047E  302B               	movlw	(low (set_time@Clock_register| 0))& (0+255)
  2975     047F  00F7               	movwf	display_time@clock_register
  2976     0480  120A  158A  2357  120A  118A  	fcall	_display_time
  2977     0485                     l3147:
  2978                           
  2979                           ;BLACK_BOX.c: 414:         blink = !blink;
  2980     0485  1283               	bcf	3,5	;RP0=0, select bank0
  2981     0486  1303               	bcf	3,6	;RP1=0, select bank0
  2982     0487  0827               	movf	set_time@blink,w
  2983     0488  1903               	btfsc	3,2
  2984     0489  2C8B               	goto	u3421
  2985     048A  2C8D               	goto	u3420
  2986     048B                     u3421:
  2987     048B  3001               	movlw	1
  2988     048C  2C8E               	goto	u3430
  2989     048D                     u3420:
  2990     048D  3000               	movlw	0
  2991     048E                     u3430:
  2992     048E  00A7               	movwf	set_time@blink
  2993     048F                     l3149:
  2994                           
  2995                           ;BLACK_BOX.c: 415:         _delay((unsigned long)((500)*(20000000/4000.0)));
  2996     048F  300D               	movlw	13
  2997     0490  00FB               	movwf	??_set_time+2
  2998     0491  30AF               	movlw	175
  2999     0492  00FA               	movwf	??_set_time+1
  3000     0493  30B6               	movlw	182
  3001     0494  00F9               	movwf	??_set_time
  3002     0495                     u3527:
  3003     0495  0BF9               	decfsz	??_set_time,f
  3004     0496  2C95               	goto	u3527
  3005     0497  0BFA               	decfsz	??_set_time+1,f
  3006     0498  2C95               	goto	u3527
  3007     0499  0BFB               	decfsz	??_set_time+2,f
  3008     049A  2C95               	goto	u3527
  3009     049B  0000               	nop
  3010     049C  2B67               	goto	l3067
  3011     049D                     l310:
  3012     049D  0008               	return
  3013     049E                     __end_of_set_time:
  3014                           
  3015                           	psect	text3
  3016     08EB                     __ptext3:	
  3017 ;; *************** function _read_digital_keypad *****************
  3018 ;; Defined at:
  3019 ;;		line 11 in file "digital_keypad_1.c"
  3020 ;; Parameters:    Size  Location     Type
  3021 ;;  mode            1    wreg     unsigned char 
  3022 ;; Auto vars:     Size  Location     Type
  3023 ;;  mode            1    1[COMMON] unsigned char 
  3024 ;; Return value:  Size  Location     Type
  3025 ;;                  1    wreg      unsigned char 
  3026 ;; Registers used:
  3027 ;;		wreg, status,2, status,0
  3028 ;; Tracked objects:
  3029 ;;		On entry : 0/0
  3030 ;;		On exit  : 0/0
  3031 ;;		Unchanged: 0/0
  3032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3033 ;;      Params:         0       0       0       0       0
  3034 ;;      Locals:         1       0       0       0       0
  3035 ;;      Temps:          1       0       0       0       0
  3036 ;;      Totals:         2       0       0       0       0
  3037 ;;Total ram usage:        2 bytes
  3038 ;; Hardware stack levels used: 1
  3039 ;; This function calls:
  3040 ;;		Nothing
  3041 ;; This function is called by:
  3042 ;;		_view_log
  3043 ;;		_set_time
  3044 ;;		_main
  3045 ;; This function uses a non-reentrant model
  3046 ;;
  3047                           
  3048     08EB                     _read_digital_keypad:	
  3049                           ;psect for function _read_digital_keypad
  3050                           
  3051                           
  3052                           ;incstack = 0
  3053                           ; Regs used in _read_digital_keypad: [wreg+status,2+status,0]
  3054                           ;read_digital_keypad@mode stored from wreg
  3055     08EB  00F1               	movwf	read_digital_keypad@mode
  3056     08EC                     l2437:
  3057                           
  3058                           ;digital_keypad_1.c: 11: unsigned char read_digital_keypad(unsigned char mode);digital_k
      +                          eypad_1.c: 12: {;digital_keypad_1.c: 13:     static unsigned char once = 1;;digital_keyp
      +                          ad_1.c: 15:     if (mode == 0)
  3059     08EC  0871               	movf	read_digital_keypad@mode,w
  3060     08ED  1D03               	btfss	3,2
  3061     08EE  28F0               	goto	u2281
  3062     08EF  28F1               	goto	u2280
  3063     08F0                     u2281:
  3064     08F0  28F6               	goto	l2445
  3065     08F1                     u2280:
  3066     08F1                     l2439:
  3067                           
  3068                           ;digital_keypad_1.c: 16:     {;digital_keypad_1.c: 17:         return PORTB & 0x3F;
  3069     08F1  1283               	bcf	3,5	;RP0=0, select bank0
  3070     08F2  1303               	bcf	3,6	;RP1=0, select bank0
  3071     08F3  0806               	movf	6,w	;volatile
  3072     08F4  393F               	andlw	63
  3073     08F5  2914               	goto	l45
  3074     08F6                     l2445:
  3075                           
  3076                           ;digital_keypad_1.c: 20:     {;digital_keypad_1.c: 21:         if (((PORTB & 0x3F) != 0x
      +                          3F) && once)
  3077     08F6  303F               	movlw	63
  3078     08F7  1283               	bcf	3,5	;RP0=0, select bank0
  3079     08F8  1303               	bcf	3,6	;RP1=0, select bank0
  3080     08F9  0506               	andwf	6,w	;volatile
  3081     08FA  00F0               	movwf	??_read_digital_keypad
  3082     08FB  303F               	movlw	63
  3083     08FC  0670               	xorwf	??_read_digital_keypad,w
  3084     08FD  1903               	btfsc	3,2
  3085     08FE  2900               	goto	u2291
  3086     08FF  2901               	goto	u2290
  3087     0900                     u2291:
  3088     0900  2908               	goto	l2457
  3089     0901                     u2290:
  3090     0901                     l2447:
  3091     0901  086F               	movf	read_digital_keypad@once,w
  3092     0902  1903               	btfsc	3,2
  3093     0903  2905               	goto	u2301
  3094     0904  2906               	goto	u2300
  3095     0905                     u2301:
  3096     0905  2908               	goto	l2457
  3097     0906                     u2300:
  3098     0906                     l2449:
  3099                           
  3100                           ;digital_keypad_1.c: 22:         {;digital_keypad_1.c: 23:             once = 0;
  3101     0906  01EF               	clrf	read_digital_keypad@once
  3102     0907  28F1               	goto	l2439
  3103     0908                     l2457:
  3104     0908  303F               	movlw	63
  3105     0909  0506               	andwf	6,w	;volatile
  3106     090A  00F0               	movwf	??_read_digital_keypad
  3107     090B  303F               	movlw	63
  3108     090C  0670               	xorwf	??_read_digital_keypad,w
  3109     090D  1D03               	btfss	3,2
  3110     090E  2910               	goto	u2311
  3111     090F  2911               	goto	u2310
  3112     0910                     u2311:
  3113     0910  2913               	goto	l2461
  3114     0911                     u2310:
  3115     0911                     l2459:
  3116                           
  3117                           ;digital_keypad_1.c: 28:         {;digital_keypad_1.c: 29:             once = 1;
  3118     0911  3001               	movlw	1
  3119     0912  00EF               	movwf	read_digital_keypad@once
  3120     0913                     l2461:
  3121                           
  3122                           ;digital_keypad_1.c: 33:     return 0x3F;
  3123     0913  303F               	movlw	63
  3124     0914                     l45:
  3125     0914  0008               	return
  3126     0915                     __end_of_read_digital_keypad:
  3127                           
  3128                           	psect	text4
  3129     0A64                     __ptext4:	
  3130 ;; *************** function _binary_to_bcd *****************
  3131 ;; Defined at:
  3132 ;;		line 424 in file "BLACK_BOX.c"
  3133 ;; Parameters:    Size  Location     Type
  3134 ;;  binary          1    wreg     unsigned char 
  3135 ;; Auto vars:     Size  Location     Type
  3136 ;;  binary          1    8[COMMON] unsigned char 
  3137 ;; Return value:  Size  Location     Type
  3138 ;;                  1    wreg      unsigned char 
  3139 ;; Registers used:
  3140 ;;		wreg, status,2, status,0, pclath, cstack
  3141 ;; Tracked objects:
  3142 ;;		On entry : 0/0
  3143 ;;		On exit  : 0/0
  3144 ;;		Unchanged: 0/0
  3145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3146 ;;      Params:         0       0       0       0       0
  3147 ;;      Locals:         1       0       0       0       0
  3148 ;;      Temps:          0       7       0       0       0
  3149 ;;      Totals:         1       7       0       0       0
  3150 ;;Total ram usage:        8 bytes
  3151 ;; Hardware stack levels used: 1
  3152 ;; Hardware stack levels required when called: 1
  3153 ;; This function calls:
  3154 ;;		___awdiv
  3155 ;;		___awmod
  3156 ;; This function is called by:
  3157 ;;		_set_time
  3158 ;; This function uses a non-reentrant model
  3159 ;;
  3160                           
  3161     0A64                     _binary_to_bcd:	
  3162                           ;psect for function _binary_to_bcd
  3163                           
  3164                           
  3165                           ;incstack = 0
  3166                           ; Regs used in _binary_to_bcd: [wreg+status,2+status,0+pclath+cstack]
  3167                           ;binary_to_bcd@binary stored from wreg
  3168     0A64  00F8               	movwf	binary_to_bcd@binary
  3169     0A65                     l2549:
  3170                           
  3171                           ;BLACK_BOX.c: 424: unsigned char binary_to_bcd(unsigned char binary);BLACK_BOX.c: 425: {
      +                          ;BLACK_BOX.c: 426:     return((binary/10) << 4) | (binary % 10);
  3172     0A65  300A               	movlw	10
  3173     0A66  00F0               	movwf	___awmod@divisor
  3174     0A67  3000               	movlw	0
  3175     0A68  00F1               	movwf	___awmod@divisor+1
  3176     0A69  0878               	movf	binary_to_bcd@binary,w
  3177     0A6A  1283               	bcf	3,5	;RP0=0, select bank0
  3178     0A6B  1303               	bcf	3,6	;RP1=0, select bank0
  3179     0A6C  00A0               	movwf	??_binary_to_bcd
  3180     0A6D  01A1               	clrf	??_binary_to_bcd+1
  3181     0A6E  0820               	movf	??_binary_to_bcd,w
  3182     0A6F  00F2               	movwf	___awmod@dividend
  3183     0A70  0821               	movf	??_binary_to_bcd+1,w
  3184     0A71  00F3               	movwf	___awmod@dividend+1
  3185     0A72  120A  158A  23A9  120A  158A  	fcall	___awmod
  3186     0A77  0870               	movf	?___awmod,w
  3187     0A78  1283               	bcf	3,5	;RP0=0, select bank0
  3188     0A79  1303               	bcf	3,6	;RP1=0, select bank0
  3189     0A7A  00A2               	movwf	??_binary_to_bcd+2
  3190     0A7B  0871               	movf	?___awmod+1,w
  3191     0A7C  00A3               	movwf	??_binary_to_bcd+3
  3192     0A7D  300A               	movlw	10
  3193     0A7E  00F0               	movwf	___awdiv@divisor
  3194     0A7F  3000               	movlw	0
  3195     0A80  00F1               	movwf	___awdiv@divisor+1
  3196     0A81  0878               	movf	binary_to_bcd@binary,w
  3197     0A82  00A4               	movwf	??_binary_to_bcd+4
  3198     0A83  01A5               	clrf	??_binary_to_bcd+5
  3199     0A84  0824               	movf	??_binary_to_bcd+4,w
  3200     0A85  00F2               	movwf	___awdiv@dividend
  3201     0A86  0825               	movf	??_binary_to_bcd+5,w
  3202     0A87  00F3               	movwf	___awdiv@dividend+1
  3203     0A88  120A  158A  24C1  120A  158A  	fcall	___awdiv
  3204     0A8D  0870               	movf	?___awdiv,w
  3205     0A8E  1283               	bcf	3,5	;RP0=0, select bank0
  3206     0A8F  1303               	bcf	3,6	;RP1=0, select bank0
  3207     0A90  00A6               	movwf	??_binary_to_bcd+6
  3208     0A91  3003               	movlw	3
  3209     0A92                     u2425:
  3210     0A92  1003               	clrc
  3211     0A93  0DA6               	rlf	??_binary_to_bcd+6,f
  3212     0A94  3EFF               	addlw	-1
  3213     0A95  1D03               	skipz
  3214     0A96  2A92               	goto	u2425
  3215     0A97  1003               	clrc
  3216     0A98  0D26               	rlf	??_binary_to_bcd+6,w
  3217     0A99  0422               	iorwf	??_binary_to_bcd+2,w
  3218     0A9A                     l316:
  3219     0A9A  0008               	return
  3220     0A9B                     __end_of_binary_to_bcd:
  3221                           
  3222                           	psect	text5
  3223     0BA9                     __ptext5:	
  3224 ;; *************** function ___awmod *****************
  3225 ;; Defined at:
  3226 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  3227 ;; Parameters:    Size  Location     Type
  3228 ;;  divisor         2    0[COMMON] int 
  3229 ;;  dividend        2    2[COMMON] int 
  3230 ;; Auto vars:     Size  Location     Type
  3231 ;;  sign            1    5[COMMON] unsigned char 
  3232 ;;  counter         1    4[COMMON] unsigned char 
  3233 ;; Return value:  Size  Location     Type
  3234 ;;                  2    0[COMMON] int 
  3235 ;; Registers used:
  3236 ;;		wreg, status,2, status,0
  3237 ;; Tracked objects:
  3238 ;;		On entry : 0/0
  3239 ;;		On exit  : 0/0
  3240 ;;		Unchanged: 0/0
  3241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3242 ;;      Params:         4       0       0       0       0
  3243 ;;      Locals:         2       0       0       0       0
  3244 ;;      Temps:          0       0       0       0       0
  3245 ;;      Totals:         6       0       0       0       0
  3246 ;;Total ram usage:        6 bytes
  3247 ;; Hardware stack levels used: 1
  3248 ;; This function calls:
  3249 ;;		Nothing
  3250 ;; This function is called by:
  3251 ;;		_binary_to_bcd
  3252 ;; This function uses a non-reentrant model
  3253 ;;
  3254                           
  3255     0BA9                     ___awmod:	
  3256                           ;psect for function ___awmod
  3257                           
  3258     0BA9                     l2339:	
  3259                           ;incstack = 0
  3260                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3261                           
  3262     0BA9  01F5               	clrf	___awmod@sign
  3263     0BAA                     l2341:
  3264     0BAA  1FF3               	btfss	___awmod@dividend+1,7
  3265     0BAB  2BAD               	goto	u2061
  3266     0BAC  2BAE               	goto	u2060
  3267     0BAD                     u2061:
  3268     0BAD  2BB5               	goto	l2347
  3269     0BAE                     u2060:
  3270     0BAE                     l2343:
  3271     0BAE  09F2               	comf	___awmod@dividend,f
  3272     0BAF  09F3               	comf	___awmod@dividend+1,f
  3273     0BB0  0AF2               	incf	___awmod@dividend,f
  3274     0BB1  1903               	skipnz
  3275     0BB2  0AF3               	incf	___awmod@dividend+1,f
  3276     0BB3                     l2345:
  3277     0BB3  3001               	movlw	1
  3278     0BB4  00F5               	movwf	___awmod@sign
  3279     0BB5                     l2347:
  3280     0BB5  1FF1               	btfss	___awmod@divisor+1,7
  3281     0BB6  2BB8               	goto	u2071
  3282     0BB7  2BB9               	goto	u2070
  3283     0BB8                     u2071:
  3284     0BB8  2BBE               	goto	l2351
  3285     0BB9                     u2070:
  3286     0BB9                     l2349:
  3287     0BB9  09F0               	comf	___awmod@divisor,f
  3288     0BBA  09F1               	comf	___awmod@divisor+1,f
  3289     0BBB  0AF0               	incf	___awmod@divisor,f
  3290     0BBC  1903               	skipnz
  3291     0BBD  0AF1               	incf	___awmod@divisor+1,f
  3292     0BBE                     l2351:
  3293     0BBE  0870               	movf	___awmod@divisor,w
  3294     0BBF  0471               	iorwf	___awmod@divisor+1,w
  3295     0BC0  1903               	btfsc	3,2
  3296     0BC1  2BC3               	goto	u2081
  3297     0BC2  2BC4               	goto	u2080
  3298     0BC3                     u2081:
  3299     0BC3  2BF1               	goto	l2369
  3300     0BC4                     u2080:
  3301     0BC4                     l2353:
  3302     0BC4  3001               	movlw	1
  3303     0BC5  00F4               	movwf	___awmod@counter
  3304     0BC6  2BD0               	goto	l2359
  3305     0BC7                     l2355:
  3306     0BC7  3001               	movlw	1
  3307     0BC8                     u2095:
  3308     0BC8  1003               	clrc
  3309     0BC9  0DF0               	rlf	___awmod@divisor,f
  3310     0BCA  0DF1               	rlf	___awmod@divisor+1,f
  3311     0BCB  3EFF               	addlw	-1
  3312     0BCC  1D03               	skipz
  3313     0BCD  2BC8               	goto	u2095
  3314     0BCE                     l2357:
  3315     0BCE  3001               	movlw	1
  3316     0BCF  07F4               	addwf	___awmod@counter,f
  3317     0BD0                     l2359:
  3318     0BD0  1FF1               	btfss	___awmod@divisor+1,7
  3319     0BD1  2BD3               	goto	u2101
  3320     0BD2  2BD4               	goto	u2100
  3321     0BD3                     u2101:
  3322     0BD3  2BC7               	goto	l2355
  3323     0BD4                     u2100:
  3324     0BD4                     l2361:
  3325     0BD4  0871               	movf	___awmod@divisor+1,w
  3326     0BD5  0273               	subwf	___awmod@dividend+1,w
  3327     0BD6  1D03               	skipz
  3328     0BD7  2BDA               	goto	u2115
  3329     0BD8  0870               	movf	___awmod@divisor,w
  3330     0BD9  0272               	subwf	___awmod@dividend,w
  3331     0BDA                     u2115:
  3332     0BDA  1C03               	skipc
  3333     0BDB  2BDD               	goto	u2111
  3334     0BDC  2BDE               	goto	u2110
  3335     0BDD                     u2111:
  3336     0BDD  2BE4               	goto	l2365
  3337     0BDE                     u2110:
  3338     0BDE                     l2363:
  3339     0BDE  0870               	movf	___awmod@divisor,w
  3340     0BDF  02F2               	subwf	___awmod@dividend,f
  3341     0BE0  0871               	movf	___awmod@divisor+1,w
  3342     0BE1  1C03               	skipc
  3343     0BE2  03F3               	decf	___awmod@dividend+1,f
  3344     0BE3  02F3               	subwf	___awmod@dividend+1,f
  3345     0BE4                     l2365:
  3346     0BE4  3001               	movlw	1
  3347     0BE5                     u2125:
  3348     0BE5  1003               	clrc
  3349     0BE6  0CF1               	rrf	___awmod@divisor+1,f
  3350     0BE7  0CF0               	rrf	___awmod@divisor,f
  3351     0BE8  3EFF               	addlw	-1
  3352     0BE9  1D03               	skipz
  3353     0BEA  2BE5               	goto	u2125
  3354     0BEB                     l2367:
  3355     0BEB  3001               	movlw	1
  3356     0BEC  02F4               	subwf	___awmod@counter,f
  3357     0BED  1D03               	btfss	3,2
  3358     0BEE  2BF0               	goto	u2131
  3359     0BEF  2BF1               	goto	u2130
  3360     0BF0                     u2131:
  3361     0BF0  2BD4               	goto	l2361
  3362     0BF1                     u2130:
  3363     0BF1                     l2369:
  3364     0BF1  0875               	movf	___awmod@sign,w
  3365     0BF2  1903               	btfsc	3,2
  3366     0BF3  2BF5               	goto	u2141
  3367     0BF4  2BF6               	goto	u2140
  3368     0BF5                     u2141:
  3369     0BF5  2BFB               	goto	l2373
  3370     0BF6                     u2140:
  3371     0BF6                     l2371:
  3372     0BF6  09F2               	comf	___awmod@dividend,f
  3373     0BF7  09F3               	comf	___awmod@dividend+1,f
  3374     0BF8  0AF2               	incf	___awmod@dividend,f
  3375     0BF9  1903               	skipnz
  3376     0BFA  0AF3               	incf	___awmod@dividend+1,f
  3377     0BFB                     l2373:
  3378     0BFB  0873               	movf	___awmod@dividend+1,w
  3379     0BFC  00F1               	movwf	?___awmod+1
  3380     0BFD  0872               	movf	___awmod@dividend,w
  3381     0BFE  00F0               	movwf	?___awmod
  3382     0BFF                     l751:
  3383     0BFF  0008               	return
  3384     0C00                     __end_of___awmod:
  3385                           
  3386                           	psect	text6
  3387     0CC1                     __ptext6:	
  3388 ;; *************** function ___awdiv *****************
  3389 ;; Defined at:
  3390 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
  3391 ;; Parameters:    Size  Location     Type
  3392 ;;  divisor         2    0[COMMON] int 
  3393 ;;  dividend        2    2[COMMON] int 
  3394 ;; Auto vars:     Size  Location     Type
  3395 ;;  quotient        2    6[COMMON] int 
  3396 ;;  sign            1    5[COMMON] unsigned char 
  3397 ;;  counter         1    4[COMMON] unsigned char 
  3398 ;; Return value:  Size  Location     Type
  3399 ;;                  2    0[COMMON] int 
  3400 ;; Registers used:
  3401 ;;		wreg, status,2, status,0
  3402 ;; Tracked objects:
  3403 ;;		On entry : 0/0
  3404 ;;		On exit  : 0/0
  3405 ;;		Unchanged: 0/0
  3406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3407 ;;      Params:         4       0       0       0       0
  3408 ;;      Locals:         4       0       0       0       0
  3409 ;;      Temps:          0       0       0       0       0
  3410 ;;      Totals:         8       0       0       0       0
  3411 ;;Total ram usage:        8 bytes
  3412 ;; Hardware stack levels used: 1
  3413 ;; This function calls:
  3414 ;;		Nothing
  3415 ;; This function is called by:
  3416 ;;		_binary_to_bcd
  3417 ;; This function uses a non-reentrant model
  3418 ;;
  3419                           
  3420     0CC1                     ___awdiv:	
  3421                           ;psect for function ___awdiv
  3422                           
  3423     0CC1                     l2295:	
  3424                           ;incstack = 0
  3425                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3426                           
  3427     0CC1  01F5               	clrf	___awdiv@sign
  3428     0CC2                     l2297:
  3429     0CC2  1FF1               	btfss	___awdiv@divisor+1,7
  3430     0CC3  2CC5               	goto	u1961
  3431     0CC4  2CC6               	goto	u1960
  3432     0CC5                     u1961:
  3433     0CC5  2CCD               	goto	l2303
  3434     0CC6                     u1960:
  3435     0CC6                     l2299:
  3436     0CC6  09F0               	comf	___awdiv@divisor,f
  3437     0CC7  09F1               	comf	___awdiv@divisor+1,f
  3438     0CC8  0AF0               	incf	___awdiv@divisor,f
  3439     0CC9  1903               	skipnz
  3440     0CCA  0AF1               	incf	___awdiv@divisor+1,f
  3441     0CCB                     l2301:
  3442     0CCB  3001               	movlw	1
  3443     0CCC  00F5               	movwf	___awdiv@sign
  3444     0CCD                     l2303:
  3445     0CCD  1FF3               	btfss	___awdiv@dividend+1,7
  3446     0CCE  2CD0               	goto	u1971
  3447     0CCF  2CD1               	goto	u1970
  3448     0CD0                     u1971:
  3449     0CD0  2CD8               	goto	l2309
  3450     0CD1                     u1970:
  3451     0CD1                     l2305:
  3452     0CD1  09F2               	comf	___awdiv@dividend,f
  3453     0CD2  09F3               	comf	___awdiv@dividend+1,f
  3454     0CD3  0AF2               	incf	___awdiv@dividend,f
  3455     0CD4  1903               	skipnz
  3456     0CD5  0AF3               	incf	___awdiv@dividend+1,f
  3457     0CD6                     l2307:
  3458     0CD6  3001               	movlw	1
  3459     0CD7  06F5               	xorwf	___awdiv@sign,f
  3460     0CD8                     l2309:
  3461     0CD8  01F6               	clrf	___awdiv@quotient
  3462     0CD9  01F7               	clrf	___awdiv@quotient+1
  3463     0CDA                     l2311:
  3464     0CDA  0870               	movf	___awdiv@divisor,w
  3465     0CDB  0471               	iorwf	___awdiv@divisor+1,w
  3466     0CDC  1903               	btfsc	3,2
  3467     0CDD  2CDF               	goto	u1981
  3468     0CDE  2CE0               	goto	u1980
  3469     0CDF                     u1981:
  3470     0CDF  2D15               	goto	l2331
  3471     0CE0                     u1980:
  3472     0CE0                     l2313:
  3473     0CE0  3001               	movlw	1
  3474     0CE1  00F4               	movwf	___awdiv@counter
  3475     0CE2  2CEC               	goto	l2319
  3476     0CE3                     l2315:
  3477     0CE3  3001               	movlw	1
  3478     0CE4                     u1995:
  3479     0CE4  1003               	clrc
  3480     0CE5  0DF0               	rlf	___awdiv@divisor,f
  3481     0CE6  0DF1               	rlf	___awdiv@divisor+1,f
  3482     0CE7  3EFF               	addlw	-1
  3483     0CE8  1D03               	skipz
  3484     0CE9  2CE4               	goto	u1995
  3485     0CEA                     l2317:
  3486     0CEA  3001               	movlw	1
  3487     0CEB  07F4               	addwf	___awdiv@counter,f
  3488     0CEC                     l2319:
  3489     0CEC  1FF1               	btfss	___awdiv@divisor+1,7
  3490     0CED  2CEF               	goto	u2001
  3491     0CEE  2CF0               	goto	u2000
  3492     0CEF                     u2001:
  3493     0CEF  2CE3               	goto	l2315
  3494     0CF0                     u2000:
  3495     0CF0                     l2321:
  3496     0CF0  3001               	movlw	1
  3497     0CF1                     u2015:
  3498     0CF1  1003               	clrc
  3499     0CF2  0DF6               	rlf	___awdiv@quotient,f
  3500     0CF3  0DF7               	rlf	___awdiv@quotient+1,f
  3501     0CF4  3EFF               	addlw	-1
  3502     0CF5  1D03               	skipz
  3503     0CF6  2CF1               	goto	u2015
  3504     0CF7  0871               	movf	___awdiv@divisor+1,w
  3505     0CF8  0273               	subwf	___awdiv@dividend+1,w
  3506     0CF9  1D03               	skipz
  3507     0CFA  2CFD               	goto	u2025
  3508     0CFB  0870               	movf	___awdiv@divisor,w
  3509     0CFC  0272               	subwf	___awdiv@dividend,w
  3510     0CFD                     u2025:
  3511     0CFD  1C03               	skipc
  3512     0CFE  2D00               	goto	u2021
  3513     0CFF  2D01               	goto	u2020
  3514     0D00                     u2021:
  3515     0D00  2D08               	goto	l2327
  3516     0D01                     u2020:
  3517     0D01                     l2323:
  3518     0D01  0870               	movf	___awdiv@divisor,w
  3519     0D02  02F2               	subwf	___awdiv@dividend,f
  3520     0D03  0871               	movf	___awdiv@divisor+1,w
  3521     0D04  1C03               	skipc
  3522     0D05  03F3               	decf	___awdiv@dividend+1,f
  3523     0D06  02F3               	subwf	___awdiv@dividend+1,f
  3524     0D07                     l2325:
  3525     0D07  1476               	bsf	___awdiv@quotient,0
  3526     0D08                     l2327:
  3527     0D08  3001               	movlw	1
  3528     0D09                     u2035:
  3529     0D09  1003               	clrc
  3530     0D0A  0CF1               	rrf	___awdiv@divisor+1,f
  3531     0D0B  0CF0               	rrf	___awdiv@divisor,f
  3532     0D0C  3EFF               	addlw	-1
  3533     0D0D  1D03               	skipz
  3534     0D0E  2D09               	goto	u2035
  3535     0D0F                     l2329:
  3536     0D0F  3001               	movlw	1
  3537     0D10  02F4               	subwf	___awdiv@counter,f
  3538     0D11  1D03               	btfss	3,2
  3539     0D12  2D14               	goto	u2041
  3540     0D13  2D15               	goto	u2040
  3541     0D14                     u2041:
  3542     0D14  2CF0               	goto	l2321
  3543     0D15                     u2040:
  3544     0D15                     l2331:
  3545     0D15  0875               	movf	___awdiv@sign,w
  3546     0D16  1903               	btfsc	3,2
  3547     0D17  2D19               	goto	u2051
  3548     0D18  2D1A               	goto	u2050
  3549     0D19                     u2051:
  3550     0D19  2D1F               	goto	l2335
  3551     0D1A                     u2050:
  3552     0D1A                     l2333:
  3553     0D1A  09F6               	comf	___awdiv@quotient,f
  3554     0D1B  09F7               	comf	___awdiv@quotient+1,f
  3555     0D1C  0AF6               	incf	___awdiv@quotient,f
  3556     0D1D  1903               	skipnz
  3557     0D1E  0AF7               	incf	___awdiv@quotient+1,f
  3558     0D1F                     l2335:
  3559     0D1F  0877               	movf	___awdiv@quotient+1,w
  3560     0D20  00F1               	movwf	?___awdiv+1
  3561     0D21  0876               	movf	___awdiv@quotient,w
  3562     0D22  00F0               	movwf	?___awdiv
  3563     0D23                     l738:
  3564     0D23  0008               	return
  3565     0D24                     __end_of___awdiv:
  3566                           
  3567                           	psect	text7
  3568     17AD                     __ptext7:	
  3569 ;; *************** function _bcd_to_binary *****************
  3570 ;; Defined at:
  3571 ;;		line 419 in file "BLACK_BOX.c"
  3572 ;; Parameters:    Size  Location     Type
  3573 ;;  BCD             1    wreg     unsigned char 
  3574 ;; Auto vars:     Size  Location     Type
  3575 ;;  BCD             1    5[COMMON] unsigned char 
  3576 ;; Return value:  Size  Location     Type
  3577 ;;                  1    wreg      unsigned char 
  3578 ;; Registers used:
  3579 ;;		wreg, status,2, status,0, pclath, cstack
  3580 ;; Tracked objects:
  3581 ;;		On entry : 0/0
  3582 ;;		On exit  : 0/0
  3583 ;;		Unchanged: 0/0
  3584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3585 ;;      Params:         0       0       0       0       0
  3586 ;;      Locals:         1       0       0       0       0
  3587 ;;      Temps:          2       0       0       0       0
  3588 ;;      Totals:         3       0       0       0       0
  3589 ;;Total ram usage:        3 bytes
  3590 ;; Hardware stack levels used: 1
  3591 ;; Hardware stack levels required when called: 1
  3592 ;; This function calls:
  3593 ;;		___bmul
  3594 ;; This function is called by:
  3595 ;;		_set_time
  3596 ;; This function uses a non-reentrant model
  3597 ;;
  3598                           
  3599     17AD                     _bcd_to_binary:	
  3600                           ;psect for function _bcd_to_binary
  3601                           
  3602                           
  3603                           ;incstack = 0
  3604                           ; Regs used in _bcd_to_binary: [wreg+status,2+status,0+pclath+cstack]
  3605                           ;bcd_to_binary@BCD stored from wreg
  3606     17AD  00F5               	movwf	bcd_to_binary@BCD
  3607     17AE                     l2545:
  3608                           
  3609                           ;BLACK_BOX.c: 419: unsigned char bcd_to_binary(unsigned char BCD);BLACK_BOX.c: 420: {;BL
      +                          ACK_BOX.c: 421:     return((BCD >> 4)* 10) + (BCD & 0x0F);
  3610     17AE  300F               	movlw	15
  3611     17AF  0575               	andwf	bcd_to_binary@BCD,w
  3612     17B0  00F3               	movwf	??_bcd_to_binary
  3613     17B1  300A               	movlw	10
  3614     17B2  00F0               	movwf	___bmul@multiplicand
  3615     17B3  0875               	movf	bcd_to_binary@BCD,w
  3616     17B4  00F4               	movwf	??_bcd_to_binary+1
  3617     17B5  3004               	movlw	4
  3618     17B6                     u2415:
  3619     17B6  1003               	clrc
  3620     17B7  0CF4               	rrf	??_bcd_to_binary+1,f
  3621     17B8  3EFF               	addlw	-1
  3622     17B9  1D03               	skipz
  3623     17BA  2FB6               	goto	u2415
  3624     17BB  0874               	movf	??_bcd_to_binary+1,w
  3625     17BC  160A  118A  2787  160A  118A  	fcall	___bmul
  3626     17C1  0773               	addwf	??_bcd_to_binary,w
  3627     17C2                     l313:
  3628     17C2  0008               	return
  3629     17C3                     __end_of_bcd_to_binary:
  3630                           
  3631                           	psect	text8
  3632     0EA5                     __ptext8:	
  3633 ;; *************** function _main_menu *****************
  3634 ;; Defined at:
  3635 ;;		line 115 in file "BLACK_BOX.c"
  3636 ;; Parameters:    Size  Location     Type
  3637 ;;		None
  3638 ;; Auto vars:     Size  Location     Type
  3639 ;;		None
  3640 ;; Return value:  Size  Location     Type
  3641 ;;                  1    wreg      void 
  3642 ;; Registers used:
  3643 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3644 ;; Tracked objects:
  3645 ;;		On entry : 0/0
  3646 ;;		On exit  : 0/0
  3647 ;;		Unchanged: 0/0
  3648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3649 ;;      Params:         0       0       0       0       0
  3650 ;;      Locals:         0       0       0       0       0
  3651 ;;      Temps:          2       0       0       0       0
  3652 ;;      Totals:         2       0       0       0       0
  3653 ;;Total ram usage:        2 bytes
  3654 ;; Hardware stack levels used: 1
  3655 ;; Hardware stack levels required when called: 2
  3656 ;; This function calls:
  3657 ;;		_clcd_print
  3658 ;;		_clcd_putch
  3659 ;;		_clcd_write
  3660 ;; This function is called by:
  3661 ;;		_main
  3662 ;; This function uses a non-reentrant model
  3663 ;;
  3664                           
  3665     0EA5                     _main_menu:	
  3666                           ;psect for function _main_menu
  3667                           
  3668     0EA5                     l2837:	
  3669                           ;incstack = 0
  3670                           ; Regs used in _main_menu: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3671                           
  3672                           
  3673                           ;BLACK_BOX.c: 118:     clcd_putch('*', (0x80 + 1));
  3674     0EA5  3081               	movlw	129
  3675     0EA6  00F7               	movwf	clcd_putch@addr
  3676     0EA7  302A               	movlw	42
  3677     0EA8  160A  118A  2776  120A  158A  	fcall	_clcd_putch
  3678     0EAD                     l2839:
  3679                           
  3680                           ;BLACK_BOX.c: 119:     if(main_index < 3 && key == 0x3E)
  3681     0EAD  1283               	bcf	3,5	;RP0=0, select bank0
  3682     0EAE  1303               	bcf	3,6	;RP1=0, select bank0
  3683     0EAF  0854               	movf	_main_index+1,w
  3684     0EB0  3A80               	xorlw	128
  3685     0EB1  00FF               	movwf	btemp+1
  3686     0EB2  3080               	movlw	128
  3687     0EB3  027F               	subwf	btemp+1,w
  3688     0EB4  1D03               	skipz
  3689     0EB5  2EB8               	goto	u3075
  3690     0EB6  3003               	movlw	3
  3691     0EB7  0253               	subwf	_main_index,w
  3692     0EB8                     u3075:
  3693     0EB8  1803               	skipnc
  3694     0EB9  2EBB               	goto	u3071
  3695     0EBA  2EBC               	goto	u3070
  3696     0EBB                     u3071:
  3697     0EBB  2ED4               	goto	l2849
  3698     0EBC                     u3070:
  3699     0EBC                     l2841:
  3700     0EBC  303E               	movlw	62
  3701     0EBD  1283               	bcf	3,5	;RP0=0, select bank0
  3702     0EBE  1303               	bcf	3,6	;RP1=0, select bank0
  3703     0EBF  065E               	xorwf	_key,w
  3704     0EC0  1D03               	btfss	3,2
  3705     0EC1  2EC3               	goto	u3081
  3706     0EC2  2EC4               	goto	u3080
  3707     0EC3                     u3081:
  3708     0EC3  2ED4               	goto	l2849
  3709     0EC4                     u3080:
  3710     0EC4                     l2843:
  3711                           
  3712                           ;BLACK_BOX.c: 120:     {;BLACK_BOX.c: 121:          menu_count++;
  3713     0EC4  3001               	movlw	1
  3714     0EC5  07EE               	addwf	_menu_count,f
  3715     0EC6                     l2845:
  3716                           
  3717                           ;BLACK_BOX.c: 122:          main_index++;
  3718     0EC6  3001               	movlw	1
  3719     0EC7  07D3               	addwf	_main_index,f
  3720     0EC8  1803               	skipnc
  3721     0EC9  0AD4               	incf	_main_index+1,f
  3722     0ECA  3000               	movlw	0
  3723     0ECB  07D4               	addwf	_main_index+1,f
  3724     0ECC                     l2847:
  3725                           
  3726                           ;BLACK_BOX.c: 123:          clcd_write(0x01, 0);
  3727     0ECC  01F0               	clrf	clcd_write@mode
  3728     0ECD  3001               	movlw	1
  3729     0ECE  120A  158A  222E  120A  158A  	fcall	_clcd_write
  3730                           
  3731                           ;BLACK_BOX.c: 124:     }
  3732     0ED3  2F4B               	goto	l243
  3733     0ED4                     l2849:
  3734     0ED4  1283               	bcf	3,5	;RP0=0, select bank0
  3735     0ED5  1303               	bcf	3,6	;RP1=0, select bank0
  3736     0ED6  0854               	movf	_main_index+1,w
  3737     0ED7  3A80               	xorlw	128
  3738     0ED8  00FF               	movwf	btemp+1
  3739     0ED9  3080               	movlw	128
  3740     0EDA  027F               	subwf	btemp+1,w
  3741     0EDB  1D03               	skipz
  3742     0EDC  2EDF               	goto	u3095
  3743     0EDD  3001               	movlw	1
  3744     0EDE  0253               	subwf	_main_index,w
  3745     0EDF                     u3095:
  3746     0EDF  1C03               	skipc
  3747     0EE0  2EE2               	goto	u3091
  3748     0EE1  2EE3               	goto	u3090
  3749     0EE2                     u3091:
  3750     0EE2  2EFB               	goto	l2859
  3751     0EE3                     u3090:
  3752     0EE3                     l2851:
  3753     0EE3  303D               	movlw	61
  3754     0EE4  1283               	bcf	3,5	;RP0=0, select bank0
  3755     0EE5  1303               	bcf	3,6	;RP1=0, select bank0
  3756     0EE6  065E               	xorwf	_key,w
  3757     0EE7  1D03               	btfss	3,2
  3758     0EE8  2EEA               	goto	u3101
  3759     0EE9  2EEB               	goto	u3100
  3760     0EEA                     u3101:
  3761     0EEA  2EFB               	goto	l2859
  3762     0EEB                     u3100:
  3763     0EEB                     l2853:
  3764                           
  3765                           ;BLACK_BOX.c: 126:     {;BLACK_BOX.c: 127:          menu_count--;
  3766     0EEB  3001               	movlw	1
  3767     0EEC  02EE               	subwf	_menu_count,f
  3768     0EED                     l2855:
  3769                           
  3770                           ;BLACK_BOX.c: 128:          main_index--;
  3771     0EED  30FF               	movlw	255
  3772     0EEE  07D3               	addwf	_main_index,f
  3773     0EEF  1803               	skipnc
  3774     0EF0  0AD4               	incf	_main_index+1,f
  3775     0EF1  30FF               	movlw	255
  3776     0EF2  07D4               	addwf	_main_index+1,f
  3777     0EF3                     l2857:
  3778                           
  3779                           ;BLACK_BOX.c: 129:          clcd_write(0x01, 0);
  3780     0EF3  01F0               	clrf	clcd_write@mode
  3781     0EF4  3001               	movlw	1
  3782     0EF5  120A  158A  222E  120A  158A  	fcall	_clcd_write
  3783                           
  3784                           ;BLACK_BOX.c: 130:     }
  3785     0EFA  2F4B               	goto	l243
  3786     0EFB                     l2859:
  3787     0EFB  3037               	movlw	55
  3788     0EFC  1283               	bcf	3,5	;RP0=0, select bank0
  3789     0EFD  1303               	bcf	3,6	;RP1=0, select bank0
  3790     0EFE  065E               	xorwf	_key,w
  3791     0EFF  1D03               	btfss	3,2
  3792     0F00  2F02               	goto	u3111
  3793     0F01  2F03               	goto	u3110
  3794     0F02                     u3111:
  3795     0F02  2F14               	goto	l2865
  3796     0F03                     u3110:
  3797     0F03                     l2861:
  3798                           
  3799                           ;BLACK_BOX.c: 132:     {;BLACK_BOX.c: 133:         clcd_write(0x01, 0);
  3800     0F03  01F0               	clrf	clcd_write@mode
  3801     0F04  3001               	movlw	1
  3802     0F05  120A  158A  222E  120A  158A  	fcall	_clcd_write
  3803     0F0A                     l2863:
  3804                           
  3805                           ;BLACK_BOX.c: 134:         main_flag = menu_count;
  3806     0F0A  1283               	bcf	3,5	;RP0=0, select bank0
  3807     0F0B  1303               	bcf	3,6	;RP1=0, select bank0
  3808     0F0C  086E               	movf	_menu_count,w
  3809     0F0D  00F9               	movwf	??_main_menu
  3810     0F0E  01FA               	clrf	??_main_menu+1
  3811     0F0F  0879               	movf	??_main_menu,w
  3812     0F10  00D7               	movwf	_main_flag
  3813     0F11  087A               	movf	??_main_menu+1,w
  3814     0F12  00D8               	movwf	_main_flag+1
  3815                           
  3816                           ;BLACK_BOX.c: 136:     }
  3817     0F13  2F4B               	goto	l243
  3818     0F14                     l2865:
  3819     0F14  302F               	movlw	47
  3820     0F15  065E               	xorwf	_key,w
  3821     0F16  1D03               	btfss	3,2
  3822     0F17  2F19               	goto	u3121
  3823     0F18  2F1A               	goto	u3120
  3824     0F19                     u3121:
  3825     0F19  2F27               	goto	l2873
  3826     0F1A                     u3120:
  3827     0F1A                     l2867:
  3828                           
  3829                           ;BLACK_BOX.c: 138:     {;BLACK_BOX.c: 139:         clcd_write(0x01, 0);
  3830     0F1A  01F0               	clrf	clcd_write@mode
  3831     0F1B  3001               	movlw	1
  3832     0F1C  120A  158A  222E  120A  158A  	fcall	_clcd_write
  3833     0F21                     l2869:
  3834                           
  3835                           ;BLACK_BOX.c: 140:         clear_flag = 0;
  3836     0F21  1283               	bcf	3,5	;RP0=0, select bank0
  3837     0F22  1303               	bcf	3,6	;RP1=0, select bank0
  3838     0F23  01DC               	clrf	_clear_flag
  3839     0F24                     l2871:
  3840                           
  3841                           ;BLACK_BOX.c: 141:         main_flag = DASH_BOARD;
  3842     0F24  01D7               	clrf	_main_flag
  3843     0F25  01D8               	clrf	_main_flag+1
  3844                           
  3845                           ;BLACK_BOX.c: 142:     }
  3846     0F26  2F4B               	goto	l243
  3847     0F27                     l2873:
  3848                           
  3849                           ;BLACK_BOX.c: 144:     {;BLACK_BOX.c: 145:         clcd_print(Main_menu[main_index], (0x
      +                          80 + 3));
  3850     0F27  0853               	movf	_main_index,w
  3851     0F28  3E69               	addlw	(low (_Main_menu| 0))& (0+255)
  3852     0F29  0084               	movwf	4
  3853     0F2A  1383               	bcf	3,7	;select IRP bank0
  3854     0F2B  0800               	movf	0,w
  3855     0F2C  00F4               	movwf	clcd_print@str
  3856     0F2D  3000               	movlw	0
  3857     0F2E  1D03               	btfss	3,2
  3858     0F2F  3080               	movlw	128
  3859     0F30  00F5               	movwf	clcd_print@str+1
  3860     0F31  3083               	movlw	131
  3861     0F32  00F6               	movwf	clcd_print@addr
  3862     0F33  120A  158A  216B  120A  158A  	fcall	_clcd_print
  3863                           
  3864                           ;BLACK_BOX.c: 146:         clcd_print(Main_menu[main_index+1], (0xC0 + 3));
  3865     0F38  1283               	bcf	3,5	;RP0=0, select bank0
  3866     0F39  1303               	bcf	3,6	;RP1=0, select bank0
  3867     0F3A  0853               	movf	_main_index,w
  3868     0F3B  3E6A               	addlw	(low ((_Main_menu| 0+1)))& (0+255)
  3869     0F3C  0084               	movwf	4
  3870     0F3D  1383               	bcf	3,7	;select IRP bank0
  3871     0F3E  0800               	movf	0,w
  3872     0F3F  00F4               	movwf	clcd_print@str
  3873     0F40  3000               	movlw	0
  3874     0F41  1D03               	btfss	3,2
  3875     0F42  3080               	movlw	128
  3876     0F43  00F5               	movwf	clcd_print@str+1
  3877     0F44  30C3               	movlw	195
  3878     0F45  00F6               	movwf	clcd_print@addr
  3879     0F46  120A  158A  216B  120A  158A  	fcall	_clcd_print
  3880     0F4B                     l243:
  3881     0F4B  0008               	return
  3882     0F4C                     __end_of_main_menu:
  3883                           
  3884                           	psect	text9
  3885     0B15                     __ptext9:	
  3886 ;; *************** function _init_config *****************
  3887 ;; Defined at:
  3888 ;;		line 15 in file "main.c"
  3889 ;; Parameters:    Size  Location     Type
  3890 ;;		None
  3891 ;; Auto vars:     Size  Location     Type
  3892 ;;		None
  3893 ;; Return value:  Size  Location     Type
  3894 ;;                  1    wreg      void 
  3895 ;; Registers used:
  3896 ;;		wreg, status,2, status,0, pclath, cstack
  3897 ;; Tracked objects:
  3898 ;;		On entry : 0/0
  3899 ;;		On exit  : 0/0
  3900 ;;		Unchanged: 0/0
  3901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3902 ;;      Params:         0       0       0       0       0
  3903 ;;      Locals:         0       0       0       0       0
  3904 ;;      Temps:          0       0       0       0       0
  3905 ;;      Totals:         0       0       0       0       0
  3906 ;;Total ram usage:        0 bytes
  3907 ;; Hardware stack levels used: 1
  3908 ;; Hardware stack levels required when called: 4
  3909 ;; This function calls:
  3910 ;;		_init_adc
  3911 ;;		_init_clcd
  3912 ;;		_init_digital_keypad
  3913 ;;		_init_ds1307
  3914 ;;		_init_i2c
  3915 ;;		_init_i2c1
  3916 ;;		_init_uart
  3917 ;; This function is called by:
  3918 ;;		_main
  3919 ;; This function uses a non-reentrant model
  3920 ;;
  3921                           
  3922     0B15                     _init_config:	
  3923                           ;psect for function _init_config
  3924                           
  3925     0B15                     l3151:	
  3926                           ;incstack = 0
  3927                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
  3928                           
  3929                           
  3930                           ;main.c: 17: 
  3931     0B15  3000               	movlw	0
  3932     0B16  1283               	bcf	3,5	;RP0=0, select bank0
  3933     0B17  1303               	bcf	3,6	;RP1=0, select bank0
  3934     0B18  00A3               	movwf	init_i2c@baud+3
  3935     0B19  3001               	movlw	1
  3936     0B1A  00A2               	movwf	init_i2c@baud+2
  3937     0B1B  3086               	movlw	134
  3938     0B1C  00A1               	movwf	init_i2c@baud+1
  3939     0B1D  30A0               	movlw	160
  3940     0B1E  00A0               	movwf	init_i2c@baud
  3941     0B1F  120A  158A  21CA  120A  158A  	fcall	_init_i2c
  3942                           
  3943                           ;main.c: 18:       key = read_digital_keypad(1);
  3944     0B24  120A  158A  2000  120A  158A  	fcall	_init_ds1307
  3945                           
  3946                           ;main.c: 19: 
  3947     0B29  160A  118A  2751  120A  158A  	fcall	_init_clcd
  3948                           
  3949                           ;main.c: 20:       if(main_flag == DASH_BOARD)
  3950     0B2E  3000               	movlw	0
  3951     0B2F  1283               	bcf	3,5	;RP0=0, select bank0
  3952     0B30  1303               	bcf	3,6	;RP1=0, select bank0
  3953     0B31  00A3               	movwf	init_i2c1@baud+3
  3954     0B32  3001               	movlw	1
  3955     0B33  00A2               	movwf	init_i2c1@baud+2
  3956     0B34  3086               	movlw	134
  3957     0B35  00A1               	movwf	init_i2c1@baud+1
  3958     0B36  30A0               	movlw	160
  3959     0B37  00A0               	movwf	init_i2c1@baud
  3960     0B38  120A  158A  21FC  120A  158A  	fcall	_init_i2c1
  3961                           
  3962                           ;main.c: 21:       {
  3963     0B3D  3000               	movlw	0
  3964     0B3E  1283               	bcf	3,5	;RP0=0, select bank0
  3965     0B3F  1303               	bcf	3,6	;RP1=0, select bank0
  3966     0B40  00A3               	movwf	init_uart@baud+3
  3967     0B41  3000               	movlw	0
  3968     0B42  00A2               	movwf	init_uart@baud+2
  3969     0B43  3025               	movlw	37
  3970     0B44  00A1               	movwf	init_uart@baud+1
  3971     0B45  3080               	movlw	128
  3972     0B46  00A0               	movwf	init_uart@baud
  3973     0B47  120A  158A  219A  120A  158A  	fcall	_init_uart
  3974                           
  3975                           ;main.c: 22:           Dash_board();
  3976     0B4C  160A  118A  26DE  120A  158A  	fcall	_init_digital_keypad
  3977     0B51                     l3153:
  3978                           
  3979                           ;main.c: 24:       else if(main_flag == MAIN_MENU)
  3980     0B51  160A  118A  26E4  120A  158A  	fcall	_init_adc
  3981     0B56                     l377:
  3982     0B56  0008               	return
  3983     0B57                     __end_of_init_config:
  3984                           
  3985                           	psect	text10
  3986     099A                     __ptext10:	
  3987 ;; *************** function _init_uart *****************
  3988 ;; Defined at:
  3989 ;;		line 4 in file "uart.c"
  3990 ;; Parameters:    Size  Location     Type
  3991 ;;  baud            4    0[BANK0 ] unsigned long 
  3992 ;; Auto vars:     Size  Location     Type
  3993 ;;		None
  3994 ;; Return value:  Size  Location     Type
  3995 ;;                  1    wreg      void 
  3996 ;; Registers used:
  3997 ;;		wreg, status,2, status,0, pclath, cstack
  3998 ;; Tracked objects:
  3999 ;;		On entry : 0/0
  4000 ;;		On exit  : 0/0
  4001 ;;		Unchanged: 0/0
  4002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4003 ;;      Params:         0       4       0       0       0
  4004 ;;      Locals:         0       0       0       0       0
  4005 ;;      Temps:          0       4       0       0       0
  4006 ;;      Totals:         0       8       0       0       0
  4007 ;;Total ram usage:        8 bytes
  4008 ;; Hardware stack levels used: 1
  4009 ;; Hardware stack levels required when called: 1
  4010 ;; This function calls:
  4011 ;;		___lldiv
  4012 ;; This function is called by:
  4013 ;;		_init_config
  4014 ;; This function uses a non-reentrant model
  4015 ;;
  4016                           
  4017     099A                     _init_uart:	
  4018                           ;psect for function _init_uart
  4019                           
  4020     099A                     l2559:	
  4021                           ;incstack = 0
  4022                           ; Regs used in _init_uart: [wreg+status,2+status,0+pclath+cstack]
  4023                           
  4024                           
  4025                           ;uart.c: 4: void init_uart(unsigned long baud);uart.c: 5: {;uart.c: 7:     SPEN = 1;
  4026     099A  1283               	bcf	3,5	;RP0=0, select bank0
  4027     099B  1303               	bcf	3,6	;RP1=0, select bank0
  4028     099C  1798               	bsf	24,7	;volatile
  4029                           
  4030                           ;uart.c: 10:     CREN = 1;
  4031     099D  1618               	bsf	24,4	;volatile
  4032     099E                     l2561:
  4033                           
  4034                           ;uart.c: 13:     SPBRG = (20000000 / (16 * baud)) - 1;
  4035     099E  0820               	movf	init_uart@baud,w
  4036     099F  00A4               	movwf	??_init_uart
  4037     09A0  0821               	movf	init_uart@baud+1,w
  4038     09A1  00A5               	movwf	??_init_uart+1
  4039     09A2  0822               	movf	init_uart@baud+2,w
  4040     09A3  00A6               	movwf	??_init_uart+2
  4041     09A4  0823               	movf	init_uart@baud+3,w
  4042     09A5  00A7               	movwf	??_init_uart+3
  4043     09A6  3004               	movlw	4
  4044     09A7                     u2445:
  4045     09A7  1003               	clrc
  4046     09A8  0DA4               	rlf	??_init_uart,f
  4047     09A9  0DA5               	rlf	??_init_uart+1,f
  4048     09AA  0DA6               	rlf	??_init_uart+2,f
  4049     09AB  0DA7               	rlf	??_init_uart+3,f
  4050     09AC                     u2440:
  4051     09AC  3EFF               	addlw	-1
  4052     09AD  1D03               	skipz
  4053     09AE  29A7               	goto	u2445
  4054     09AF  0827               	movf	??_init_uart+3,w
  4055     09B0  00F3               	movwf	___lldiv@divisor+3
  4056     09B1  0826               	movf	??_init_uart+2,w
  4057     09B2  00F2               	movwf	___lldiv@divisor+2
  4058     09B3  0825               	movf	??_init_uart+1,w
  4059     09B4  00F1               	movwf	___lldiv@divisor+1
  4060     09B5  0824               	movf	??_init_uart,w
  4061     09B6  00F0               	movwf	___lldiv@divisor
  4062     09B7  3001               	movlw	1
  4063     09B8  00F7               	movwf	___lldiv@dividend+3
  4064     09B9  3031               	movlw	49
  4065     09BA  00F6               	movwf	___lldiv@dividend+2
  4066     09BB  302D               	movlw	45
  4067     09BC  00F5               	movwf	___lldiv@dividend+1
  4068     09BD  3000               	movlw	0
  4069     09BE  00F4               	movwf	___lldiv@dividend
  4070     09BF  120A  158A  2524  120A  158A  	fcall	___lldiv
  4071     09C4  0870               	movf	?___lldiv,w
  4072     09C5  3EFF               	addlw	255
  4073     09C6  1683               	bsf	3,5	;RP0=1, select bank1
  4074     09C7  1303               	bcf	3,6	;RP1=0, select bank1
  4075     09C8  0099               	movwf	25	;volatile
  4076     09C9                     l431:
  4077     09C9  0008               	return
  4078     09CA                     __end_of_init_uart:
  4079                           
  4080                           	psect	text11
  4081     09FC                     __ptext11:	
  4082 ;; *************** function _init_i2c1 *****************
  4083 ;; Defined at:
  4084 ;;		line 4 in file "i2c2.c"
  4085 ;; Parameters:    Size  Location     Type
  4086 ;;  baud            4    0[BANK0 ] unsigned long 
  4087 ;; Auto vars:     Size  Location     Type
  4088 ;;		None
  4089 ;; Return value:  Size  Location     Type
  4090 ;;                  1    wreg      void 
  4091 ;; Registers used:
  4092 ;;		wreg, status,2, status,0, pclath, cstack
  4093 ;; Tracked objects:
  4094 ;;		On entry : 0/0
  4095 ;;		On exit  : 0/0
  4096 ;;		Unchanged: 0/0
  4097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4098 ;;      Params:         0       4       0       0       0
  4099 ;;      Locals:         0       0       0       0       0
  4100 ;;      Temps:          0       4       0       0       0
  4101 ;;      Totals:         0       8       0       0       0
  4102 ;;Total ram usage:        8 bytes
  4103 ;; Hardware stack levels used: 1
  4104 ;; Hardware stack levels required when called: 1
  4105 ;; This function calls:
  4106 ;;		___lldiv
  4107 ;; This function is called by:
  4108 ;;		_init_config
  4109 ;; This function uses a non-reentrant model
  4110 ;;
  4111                           
  4112     09FC                     _init_i2c1:	
  4113                           ;psect for function _init_i2c1
  4114                           
  4115     09FC                     l2553:	
  4116                           ;incstack = 0
  4117                           ; Regs used in _init_i2c1: [wreg+status,2+status,0+pclath+cstack]
  4118                           
  4119                           
  4120                           ;i2c2.c: 4: void init_i2c1(unsigned long baud);i2c2.c: 5: {;i2c2.c: 7:     SSPM3 = 1;
  4121     09FC  1283               	bcf	3,5	;RP0=0, select bank0
  4122     09FD  1303               	bcf	3,6	;RP1=0, select bank0
  4123     09FE  1594               	bsf	20,3	;volatile
  4124     09FF                     l2555:
  4125                           
  4126                           ;i2c2.c: 10:     SSPADD = (unsigned char)(20000000 / (4 * baud)) - 1;
  4127     09FF  0820               	movf	init_i2c1@baud,w
  4128     0A00  00A4               	movwf	??_init_i2c1
  4129     0A01  0821               	movf	init_i2c1@baud+1,w
  4130     0A02  00A5               	movwf	??_init_i2c1+1
  4131     0A03  0822               	movf	init_i2c1@baud+2,w
  4132     0A04  00A6               	movwf	??_init_i2c1+2
  4133     0A05  0823               	movf	init_i2c1@baud+3,w
  4134     0A06  00A7               	movwf	??_init_i2c1+3
  4135     0A07  3002               	movlw	2
  4136     0A08                     u2435:
  4137     0A08  1003               	clrc
  4138     0A09  0DA4               	rlf	??_init_i2c1,f
  4139     0A0A  0DA5               	rlf	??_init_i2c1+1,f
  4140     0A0B  0DA6               	rlf	??_init_i2c1+2,f
  4141     0A0C  0DA7               	rlf	??_init_i2c1+3,f
  4142     0A0D                     u2430:
  4143     0A0D  3EFF               	addlw	-1
  4144     0A0E  1D03               	skipz
  4145     0A0F  2A08               	goto	u2435
  4146     0A10  0827               	movf	??_init_i2c1+3,w
  4147     0A11  00F3               	movwf	___lldiv@divisor+3
  4148     0A12  0826               	movf	??_init_i2c1+2,w
  4149     0A13  00F2               	movwf	___lldiv@divisor+2
  4150     0A14  0825               	movf	??_init_i2c1+1,w
  4151     0A15  00F1               	movwf	___lldiv@divisor+1
  4152     0A16  0824               	movf	??_init_i2c1,w
  4153     0A17  00F0               	movwf	___lldiv@divisor
  4154     0A18  3001               	movlw	1
  4155     0A19  00F7               	movwf	___lldiv@dividend+3
  4156     0A1A  3031               	movlw	49
  4157     0A1B  00F6               	movwf	___lldiv@dividend+2
  4158     0A1C  302D               	movlw	45
  4159     0A1D  00F5               	movwf	___lldiv@dividend+1
  4160     0A1E  3000               	movlw	0
  4161     0A1F  00F4               	movwf	___lldiv@dividend
  4162     0A20  120A  158A  2524  120A  158A  	fcall	___lldiv
  4163     0A25  0870               	movf	?___lldiv,w
  4164     0A26  3EFF               	addlw	255
  4165     0A27  1683               	bsf	3,5	;RP0=1, select bank1
  4166     0A28  1303               	bcf	3,6	;RP1=0, select bank1
  4167     0A29  0093               	movwf	19	;volatile
  4168     0A2A                     l2557:
  4169                           
  4170                           ;i2c2.c: 13:     SSPEN = 1;
  4171     0A2A  1283               	bcf	3,5	;RP0=0, select bank0
  4172     0A2B  1303               	bcf	3,6	;RP1=0, select bank0
  4173     0A2C  1694               	bsf	20,5	;volatile
  4174     0A2D                     l476:
  4175     0A2D  0008               	return
  4176     0A2E                     __end_of_init_i2c1:
  4177                           
  4178                           	psect	text12
  4179     09CA                     __ptext12:	
  4180 ;; *************** function _init_i2c *****************
  4181 ;; Defined at:
  4182 ;;		line 4 in file "i2c.c"
  4183 ;; Parameters:    Size  Location     Type
  4184 ;;  baud            4    0[BANK0 ] unsigned long 
  4185 ;; Auto vars:     Size  Location     Type
  4186 ;;		None
  4187 ;; Return value:  Size  Location     Type
  4188 ;;                  1    wreg      void 
  4189 ;; Registers used:
  4190 ;;		wreg, status,2, status,0, pclath, cstack
  4191 ;; Tracked objects:
  4192 ;;		On entry : 0/0
  4193 ;;		On exit  : 0/0
  4194 ;;		Unchanged: 0/0
  4195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4196 ;;      Params:         0       4       0       0       0
  4197 ;;      Locals:         0       0       0       0       0
  4198 ;;      Temps:          0       4       0       0       0
  4199 ;;      Totals:         0       8       0       0       0
  4200 ;;Total ram usage:        8 bytes
  4201 ;; Hardware stack levels used: 1
  4202 ;; Hardware stack levels required when called: 1
  4203 ;; This function calls:
  4204 ;;		___lldiv
  4205 ;; This function is called by:
  4206 ;;		_init_config
  4207 ;; This function uses a non-reentrant model
  4208 ;;
  4209                           
  4210     09CA                     _init_i2c:	
  4211                           ;psect for function _init_i2c
  4212                           
  4213     09CA                     l2475:	
  4214                           ;incstack = 0
  4215                           ; Regs used in _init_i2c: [wreg+status,2+status,0+pclath+cstack]
  4216                           
  4217                           
  4218                           ;i2c.c: 4: void init_i2c(unsigned long baud);i2c.c: 5: {;i2c.c: 7:     SSPM3 = 1;
  4219     09CA  1283               	bcf	3,5	;RP0=0, select bank0
  4220     09CB  1303               	bcf	3,6	;RP1=0, select bank0
  4221     09CC  1594               	bsf	20,3	;volatile
  4222     09CD                     l2477:
  4223                           
  4224                           ;i2c.c: 10:     SSPADD = (unsigned char)(20000000 / (4 * baud)) - 1;
  4225     09CD  0820               	movf	init_i2c@baud,w
  4226     09CE  00A4               	movwf	??_init_i2c
  4227     09CF  0821               	movf	init_i2c@baud+1,w
  4228     09D0  00A5               	movwf	??_init_i2c+1
  4229     09D1  0822               	movf	init_i2c@baud+2,w
  4230     09D2  00A6               	movwf	??_init_i2c+2
  4231     09D3  0823               	movf	init_i2c@baud+3,w
  4232     09D4  00A7               	movwf	??_init_i2c+3
  4233     09D5  3002               	movlw	2
  4234     09D6                     u2345:
  4235     09D6  1003               	clrc
  4236     09D7  0DA4               	rlf	??_init_i2c,f
  4237     09D8  0DA5               	rlf	??_init_i2c+1,f
  4238     09D9  0DA6               	rlf	??_init_i2c+2,f
  4239     09DA  0DA7               	rlf	??_init_i2c+3,f
  4240     09DB                     u2340:
  4241     09DB  3EFF               	addlw	-1
  4242     09DC  1D03               	skipz
  4243     09DD  29D6               	goto	u2345
  4244     09DE  0827               	movf	??_init_i2c+3,w
  4245     09DF  00F3               	movwf	___lldiv@divisor+3
  4246     09E0  0826               	movf	??_init_i2c+2,w
  4247     09E1  00F2               	movwf	___lldiv@divisor+2
  4248     09E2  0825               	movf	??_init_i2c+1,w
  4249     09E3  00F1               	movwf	___lldiv@divisor+1
  4250     09E4  0824               	movf	??_init_i2c,w
  4251     09E5  00F0               	movwf	___lldiv@divisor
  4252     09E6  3001               	movlw	1
  4253     09E7  00F7               	movwf	___lldiv@dividend+3
  4254     09E8  3031               	movlw	49
  4255     09E9  00F6               	movwf	___lldiv@dividend+2
  4256     09EA  302D               	movlw	45
  4257     09EB  00F5               	movwf	___lldiv@dividend+1
  4258     09EC  3000               	movlw	0
  4259     09ED  00F4               	movwf	___lldiv@dividend
  4260     09EE  120A  158A  2524  120A  158A  	fcall	___lldiv
  4261     09F3  0870               	movf	?___lldiv,w
  4262     09F4  3EFF               	addlw	255
  4263     09F5  1683               	bsf	3,5	;RP0=1, select bank1
  4264     09F6  1303               	bcf	3,6	;RP1=0, select bank1
  4265     09F7  0093               	movwf	19	;volatile
  4266     09F8                     l2479:
  4267                           
  4268                           ;i2c.c: 13:     SSPEN = 1;
  4269     09F8  1283               	bcf	3,5	;RP0=0, select bank0
  4270     09F9  1303               	bcf	3,6	;RP1=0, select bank0
  4271     09FA  1694               	bsf	20,5	;volatile
  4272     09FB                     l99:
  4273     09FB  0008               	return
  4274     09FC                     __end_of_init_i2c:
  4275                           
  4276                           	psect	text13
  4277     0D24                     __ptext13:	
  4278 ;; *************** function ___lldiv *****************
  4279 ;; Defined at:
  4280 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__lldiv.c"
  4281 ;; Parameters:    Size  Location     Type
  4282 ;;  divisor         4    0[COMMON] unsigned long 
  4283 ;;  dividend        4    4[COMMON] unsigned long 
  4284 ;; Auto vars:     Size  Location     Type
  4285 ;;  quotient        4    9[COMMON] unsigned long 
  4286 ;;  counter         1   13[COMMON] unsigned char 
  4287 ;; Return value:  Size  Location     Type
  4288 ;;                  4    0[COMMON] unsigned long 
  4289 ;; Registers used:
  4290 ;;		wreg, status,2, status,0
  4291 ;; Tracked objects:
  4292 ;;		On entry : 0/0
  4293 ;;		On exit  : 0/0
  4294 ;;		Unchanged: 0/0
  4295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4296 ;;      Params:         8       0       0       0       0
  4297 ;;      Locals:         5       0       0       0       0
  4298 ;;      Temps:          1       0       0       0       0
  4299 ;;      Totals:        14       0       0       0       0
  4300 ;;Total ram usage:       14 bytes
  4301 ;; Hardware stack levels used: 1
  4302 ;; This function calls:
  4303 ;;		Nothing
  4304 ;; This function is called by:
  4305 ;;		_init_i2c
  4306 ;;		_init_uart
  4307 ;;		_init_i2c1
  4308 ;; This function uses a non-reentrant model
  4309 ;;
  4310                           
  4311     0D24                     ___lldiv:	
  4312                           ;psect for function ___lldiv
  4313                           
  4314     0D24                     l2271:	
  4315                           ;incstack = 0
  4316                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4317                           
  4318     0D24  3000               	movlw	0
  4319     0D25  00FC               	movwf	___lldiv@quotient+3
  4320     0D26  3000               	movlw	0
  4321     0D27  00FB               	movwf	___lldiv@quotient+2
  4322     0D28  3000               	movlw	0
  4323     0D29  00FA               	movwf	___lldiv@quotient+1
  4324     0D2A  3000               	movlw	0
  4325     0D2B  00F9               	movwf	___lldiv@quotient
  4326     0D2C  0873               	movf	___lldiv@divisor+3,w
  4327     0D2D  0472               	iorwf	___lldiv@divisor+2,w
  4328     0D2E  0471               	iorwf	___lldiv@divisor+1,w
  4329     0D2F  0470               	iorwf	___lldiv@divisor,w
  4330     0D30  1903               	skipnz
  4331     0D31  2D33               	goto	u1891
  4332     0D32  2D34               	goto	u1890
  4333     0D33                     u1891:
  4334     0D33  2D7F               	goto	l2291
  4335     0D34                     u1890:
  4336     0D34                     l2273:
  4337     0D34  3001               	movlw	1
  4338     0D35  00FD               	movwf	___lldiv@counter
  4339     0D36  2D42               	goto	l2277
  4340     0D37                     l2275:
  4341     0D37  3001               	movlw	1
  4342     0D38  00F8               	movwf	??___lldiv
  4343     0D39                     u1905:
  4344     0D39  1003               	clrc
  4345     0D3A  0DF0               	rlf	___lldiv@divisor,f
  4346     0D3B  0DF1               	rlf	___lldiv@divisor+1,f
  4347     0D3C  0DF2               	rlf	___lldiv@divisor+2,f
  4348     0D3D  0DF3               	rlf	___lldiv@divisor+3,f
  4349     0D3E  0BF8               	decfsz	??___lldiv,f
  4350     0D3F  2D39               	goto	u1905
  4351     0D40  3001               	movlw	1
  4352     0D41  07FD               	addwf	___lldiv@counter,f
  4353     0D42                     l2277:
  4354     0D42  1FF3               	btfss	___lldiv@divisor+3,7
  4355     0D43  2D45               	goto	u1911
  4356     0D44  2D46               	goto	u1910
  4357     0D45                     u1911:
  4358     0D45  2D37               	goto	l2275
  4359     0D46                     u1910:
  4360     0D46                     l2279:
  4361     0D46  3001               	movlw	1
  4362     0D47  00F8               	movwf	??___lldiv
  4363     0D48                     u1925:
  4364     0D48  1003               	clrc
  4365     0D49  0DF9               	rlf	___lldiv@quotient,f
  4366     0D4A  0DFA               	rlf	___lldiv@quotient+1,f
  4367     0D4B  0DFB               	rlf	___lldiv@quotient+2,f
  4368     0D4C  0DFC               	rlf	___lldiv@quotient+3,f
  4369     0D4D  0BF8               	decfsz	??___lldiv,f
  4370     0D4E  2D48               	goto	u1925
  4371     0D4F                     l2281:
  4372     0D4F  0873               	movf	___lldiv@divisor+3,w
  4373     0D50  0277               	subwf	___lldiv@dividend+3,w
  4374     0D51  1D03               	skipz
  4375     0D52  2D5D               	goto	u1935
  4376     0D53  0872               	movf	___lldiv@divisor+2,w
  4377     0D54  0276               	subwf	___lldiv@dividend+2,w
  4378     0D55  1D03               	skipz
  4379     0D56  2D5D               	goto	u1935
  4380     0D57  0871               	movf	___lldiv@divisor+1,w
  4381     0D58  0275               	subwf	___lldiv@dividend+1,w
  4382     0D59  1D03               	skipz
  4383     0D5A  2D5D               	goto	u1935
  4384     0D5B  0870               	movf	___lldiv@divisor,w
  4385     0D5C  0274               	subwf	___lldiv@dividend,w
  4386     0D5D                     u1935:
  4387     0D5D  1C03               	skipc
  4388     0D5E  2D60               	goto	u1931
  4389     0D5F  2D61               	goto	u1930
  4390     0D60                     u1931:
  4391     0D60  2D70               	goto	l2287
  4392     0D61                     u1930:
  4393     0D61                     l2283:
  4394     0D61  0870               	movf	___lldiv@divisor,w
  4395     0D62  02F4               	subwf	___lldiv@dividend,f
  4396     0D63  0871               	movf	___lldiv@divisor+1,w
  4397     0D64  1C03               	skipc
  4398     0D65  0F71               	incfsz	___lldiv@divisor+1,w
  4399     0D66  02F5               	subwf	___lldiv@dividend+1,f
  4400     0D67  0872               	movf	___lldiv@divisor+2,w
  4401     0D68  1C03               	skipc
  4402     0D69  0F72               	incfsz	___lldiv@divisor+2,w
  4403     0D6A  02F6               	subwf	___lldiv@dividend+2,f
  4404     0D6B  0873               	movf	___lldiv@divisor+3,w
  4405     0D6C  1C03               	skipc
  4406     0D6D  0F73               	incfsz	___lldiv@divisor+3,w
  4407     0D6E  02F7               	subwf	___lldiv@dividend+3,f
  4408     0D6F                     l2285:
  4409     0D6F  1479               	bsf	___lldiv@quotient,0
  4410     0D70                     l2287:
  4411     0D70  3001               	movlw	1
  4412     0D71                     u1945:
  4413     0D71  1003               	clrc
  4414     0D72  0CF3               	rrf	___lldiv@divisor+3,f
  4415     0D73  0CF2               	rrf	___lldiv@divisor+2,f
  4416     0D74  0CF1               	rrf	___lldiv@divisor+1,f
  4417     0D75  0CF0               	rrf	___lldiv@divisor,f
  4418     0D76  3EFF               	addlw	-1
  4419     0D77  1D03               	skipz
  4420     0D78  2D71               	goto	u1945
  4421     0D79                     l2289:
  4422     0D79  3001               	movlw	1
  4423     0D7A  02FD               	subwf	___lldiv@counter,f
  4424     0D7B  1D03               	btfss	3,2
  4425     0D7C  2D7E               	goto	u1951
  4426     0D7D  2D7F               	goto	u1950
  4427     0D7E                     u1951:
  4428     0D7E  2D46               	goto	l2279
  4429     0D7F                     u1950:
  4430     0D7F                     l2291:
  4431     0D7F  087C               	movf	___lldiv@quotient+3,w
  4432     0D80  00F3               	movwf	?___lldiv+3
  4433     0D81  087B               	movf	___lldiv@quotient+2,w
  4434     0D82  00F2               	movwf	?___lldiv+2
  4435     0D83  087A               	movf	___lldiv@quotient+1,w
  4436     0D84  00F1               	movwf	?___lldiv+1
  4437     0D85  0879               	movf	___lldiv@quotient,w
  4438     0D86  00F0               	movwf	?___lldiv
  4439     0D87                     l621:
  4440     0D87  0008               	return
  4441     0D88                     __end_of___lldiv:
  4442                           
  4443                           	psect	text14
  4444     0800                     __ptext14:	
  4445 ;; *************** function _init_ds1307 *****************
  4446 ;; Defined at:
  4447 ;;		line 6 in file "ds1307.c"
  4448 ;; Parameters:    Size  Location     Type
  4449 ;;		None
  4450 ;; Auto vars:     Size  Location     Type
  4451 ;;  dummy           1    4[COMMON] unsigned char 
  4452 ;; Return value:  Size  Location     Type
  4453 ;;                  1    wreg      void 
  4454 ;; Registers used:
  4455 ;;		wreg, status,2, status,0, pclath, cstack
  4456 ;; Tracked objects:
  4457 ;;		On entry : 0/0
  4458 ;;		On exit  : 0/0
  4459 ;;		Unchanged: 0/0
  4460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4461 ;;      Params:         0       0       0       0       0
  4462 ;;      Locals:         1       0       0       0       0
  4463 ;;      Temps:          0       0       0       0       0
  4464 ;;      Totals:         1       0       0       0       0
  4465 ;;Total ram usage:        1 bytes
  4466 ;; Hardware stack levels used: 1
  4467 ;; Hardware stack levels required when called: 3
  4468 ;; This function calls:
  4469 ;;		_read_ds1307
  4470 ;;		_write_ds1307
  4471 ;; This function is called by:
  4472 ;;		_init_config
  4473 ;; This function uses a non-reentrant model
  4474 ;;
  4475                           
  4476     0800                     _init_ds1307:	
  4477                           ;psect for function _init_ds1307
  4478                           
  4479     0800                     l2481:	
  4480                           ;incstack = 0
  4481                           ; Regs used in _init_ds1307: [wreg+status,2+status,0+pclath+cstack]
  4482                           
  4483                           
  4484                           ;ds1307.c: 8:     unsigned char dummy;;ds1307.c: 10:     dummy = read_ds1307(0x00);
  4485     0800  3000               	movlw	0
  4486     0801  120A  158A  2115  120A  158A  	fcall	_read_ds1307
  4487     0806  00F4               	movwf	init_ds1307@dummy
  4488     0807                     l2483:
  4489                           
  4490                           ;ds1307.c: 11:     dummy = dummy & 0x7F;
  4491     0807  307F               	movlw	127
  4492     0808  05F4               	andwf	init_ds1307@dummy,f
  4493     0809                     l2485:
  4494                           
  4495                           ;ds1307.c: 12:     write_ds1307(0x00, dummy);
  4496     0809  0874               	movf	init_ds1307@dummy,w
  4497     080A  00F1               	movwf	write_ds1307@data
  4498     080B  3000               	movlw	0
  4499     080C  160A  118A  27C3  120A  158A  	fcall	_write_ds1307
  4500     0811                     l139:
  4501     0811  0008               	return
  4502     0812                     __end_of_init_ds1307:
  4503                           
  4504                           	psect	text15
  4505     17C3                     __ptext15:	
  4506 ;; *************** function _write_ds1307 *****************
  4507 ;; Defined at:
  4508 ;;		line 30 in file "ds1307.c"
  4509 ;; Parameters:    Size  Location     Type
  4510 ;;  addr            1    wreg     unsigned char 
  4511 ;;  data            1    1[COMMON] unsigned char 
  4512 ;; Auto vars:     Size  Location     Type
  4513 ;;  addr            1    2[COMMON] unsigned char 
  4514 ;; Return value:  Size  Location     Type
  4515 ;;                  1    wreg      void 
  4516 ;; Registers used:
  4517 ;;		wreg, status,2, status,0, pclath, cstack
  4518 ;; Tracked objects:
  4519 ;;		On entry : 0/0
  4520 ;;		On exit  : 0/0
  4521 ;;		Unchanged: 0/0
  4522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4523 ;;      Params:         1       0       0       0       0
  4524 ;;      Locals:         1       0       0       0       0
  4525 ;;      Temps:          0       0       0       0       0
  4526 ;;      Totals:         2       0       0       0       0
  4527 ;;Total ram usage:        2 bytes
  4528 ;; Hardware stack levels used: 1
  4529 ;; Hardware stack levels required when called: 2
  4530 ;; This function calls:
  4531 ;;		_i2c_start
  4532 ;;		_i2c_stop
  4533 ;;		_i2c_write
  4534 ;; This function is called by:
  4535 ;;		_init_ds1307
  4536 ;;		_set_time
  4537 ;; This function uses a non-reentrant model
  4538 ;;
  4539                           
  4540     17C3                     _write_ds1307:	
  4541                           ;psect for function _write_ds1307
  4542                           
  4543                           
  4544                           ;incstack = 0
  4545                           ; Regs used in _write_ds1307: [wreg+status,2+status,0+pclath+cstack]
  4546                           ;write_ds1307@addr stored from wreg
  4547     17C3  00F2               	movwf	write_ds1307@addr
  4548     17C4                     l2231:
  4549                           
  4550                           ;ds1307.c: 30: void write_ds1307(unsigned char addr, unsigned char data);ds1307.c: 31: {
      +                          ;ds1307.c: 32:     i2c_start();
  4551     17C4  160A  118A  2703  160A  118A  	fcall	_i2c_start
  4552                           
  4553                           ;ds1307.c: 33:     i2c_write(0b11010000);
  4554     17C9  30D0               	movlw	208
  4555     17CA  160A  118A  2730  160A  118A  	fcall	_i2c_write
  4556                           
  4557                           ;ds1307.c: 34:     i2c_write(addr);
  4558     17CF  0872               	movf	write_ds1307@addr,w
  4559     17D0  160A  118A  2730  160A  118A  	fcall	_i2c_write
  4560                           
  4561                           ;ds1307.c: 35:     i2c_write(data);
  4562     17D5  0871               	movf	write_ds1307@data,w
  4563     17D6  160A  118A  2730  160A  118A  	fcall	_i2c_write
  4564                           
  4565                           ;ds1307.c: 36:     i2c_stop();
  4566     17DB  160A  118A  270C  160A  118A  	fcall	_i2c_stop
  4567     17E0                     l145:
  4568     17E0  0008               	return
  4569     17E1                     __end_of_write_ds1307:
  4570                           
  4571                           	psect	text16
  4572     16DE                     __ptext16:	
  4573 ;; *************** function _init_digital_keypad *****************
  4574 ;; Defined at:
  4575 ;;		line 5 in file "digital_keypad_1.c"
  4576 ;; Parameters:    Size  Location     Type
  4577 ;;		None
  4578 ;; Auto vars:     Size  Location     Type
  4579 ;;		None
  4580 ;; Return value:  Size  Location     Type
  4581 ;;                  1    wreg      void 
  4582 ;; Registers used:
  4583 ;;		wreg, status,2
  4584 ;; Tracked objects:
  4585 ;;		On entry : 0/0
  4586 ;;		On exit  : 0/0
  4587 ;;		Unchanged: 0/0
  4588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4589 ;;      Params:         0       0       0       0       0
  4590 ;;      Locals:         0       0       0       0       0
  4591 ;;      Temps:          0       0       0       0       0
  4592 ;;      Totals:         0       0       0       0       0
  4593 ;;Total ram usage:        0 bytes
  4594 ;; Hardware stack levels used: 1
  4595 ;; This function calls:
  4596 ;;		Nothing
  4597 ;; This function is called by:
  4598 ;;		_init_config
  4599 ;; This function uses a non-reentrant model
  4600 ;;
  4601                           
  4602     16DE                     _init_digital_keypad:	
  4603                           ;psect for function _init_digital_keypad
  4604                           
  4605     16DE                     l2435:	
  4606                           ;incstack = 0
  4607                           ; Regs used in _init_digital_keypad: [wreg+status,2]
  4608                           
  4609                           
  4610                           ;digital_keypad_1.c: 8:     TRISB = TRISB | 0x3F;
  4611     16DE  1683               	bsf	3,5	;RP0=1, select bank1
  4612     16DF  1303               	bcf	3,6	;RP1=0, select bank1
  4613     16E0  0806               	movf	6,w	;volatile
  4614     16E1  383F               	iorlw	63
  4615     16E2  0086               	movwf	6	;volatile
  4616     16E3                     l39:
  4617     16E3  0008               	return
  4618     16E4                     __end_of_init_digital_keypad:
  4619                           
  4620                           	psect	text17
  4621     1751                     __ptext17:	
  4622 ;; *************** function _init_clcd *****************
  4623 ;; Defined at:
  4624 ;;		line 44 in file "clcd.c"
  4625 ;; Parameters:    Size  Location     Type
  4626 ;;		None
  4627 ;; Auto vars:     Size  Location     Type
  4628 ;;		None
  4629 ;; Return value:  Size  Location     Type
  4630 ;;                  1    wreg      void 
  4631 ;; Registers used:
  4632 ;;		wreg, status,2, status,0, pclath, cstack
  4633 ;; Tracked objects:
  4634 ;;		On entry : 0/0
  4635 ;;		On exit  : 0/0
  4636 ;;		Unchanged: 0/0
  4637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4638 ;;      Params:         0       0       0       0       0
  4639 ;;      Locals:         0       0       0       0       0
  4640 ;;      Temps:          0       0       0       0       0
  4641 ;;      Totals:         0       0       0       0       0
  4642 ;;Total ram usage:        0 bytes
  4643 ;; Hardware stack levels used: 1
  4644 ;; Hardware stack levels required when called: 2
  4645 ;; This function calls:
  4646 ;;		_init_display_controller
  4647 ;; This function is called by:
  4648 ;;		_init_config
  4649 ;; This function uses a non-reentrant model
  4650 ;;
  4651                           
  4652     1751                     _init_clcd:	
  4653                           ;psect for function _init_clcd
  4654                           
  4655     1751                     l2425:	
  4656                           ;incstack = 0
  4657                           ; Regs used in _init_clcd: [wreg+status,2+status,0+pclath+cstack]
  4658                           
  4659                           
  4660                           ;clcd.c: 47:     TRISD = 0x00;
  4661     1751  1683               	bsf	3,5	;RP0=1, select bank1
  4662     1752  1303               	bcf	3,6	;RP1=0, select bank1
  4663     1753  0188               	clrf	8	;volatile
  4664     1754                     l2427:
  4665                           
  4666                           ;clcd.c: 50:     TRISE2 = 0;
  4667     1754  1109               	bcf	9,2	;volatile
  4668     1755                     l2429:
  4669                           
  4670                           ;clcd.c: 51:     TRISE1 = 0;
  4671     1755  1089               	bcf	9,1	;volatile
  4672     1756                     l2431:
  4673                           
  4674                           ;clcd.c: 53:     init_display_controller();
  4675     1756  120A  158A  245E  160A  118A  	fcall	_init_display_controller
  4676     175B                     l23:
  4677     175B  0008               	return
  4678     175C                     __end_of_init_clcd:
  4679                           
  4680                           	psect	text18
  4681     0C5E                     __ptext18:	
  4682 ;; *************** function _init_display_controller *****************
  4683 ;; Defined at:
  4684 ;;		line 21 in file "clcd.c"
  4685 ;; Parameters:    Size  Location     Type
  4686 ;;		None
  4687 ;; Auto vars:     Size  Location     Type
  4688 ;;		None
  4689 ;; Return value:  Size  Location     Type
  4690 ;;                  1    wreg      void 
  4691 ;; Registers used:
  4692 ;;		wreg, status,2, status,0, pclath, cstack
  4693 ;; Tracked objects:
  4694 ;;		On entry : 0/0
  4695 ;;		On exit  : 0/0
  4696 ;;		Unchanged: 0/0
  4697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4698 ;;      Params:         0       0       0       0       0
  4699 ;;      Locals:         0       0       0       0       0
  4700 ;;      Temps:          2       0       0       0       0
  4701 ;;      Totals:         2       0       0       0       0
  4702 ;;Total ram usage:        2 bytes
  4703 ;; Hardware stack levels used: 1
  4704 ;; Hardware stack levels required when called: 1
  4705 ;; This function calls:
  4706 ;;		_clcd_write
  4707 ;; This function is called by:
  4708 ;;		_init_clcd
  4709 ;; This function uses a non-reentrant model
  4710 ;;
  4711                           
  4712     0C5E                     _init_display_controller:	
  4713                           ;psect for function _init_display_controller
  4714                           
  4715     0C5E                     l2193:	
  4716                           ;incstack = 0
  4717                           ; Regs used in _init_display_controller: [wreg+status,2+status,0+pclath+cstack]
  4718                           
  4719                           
  4720                           ;clcd.c: 24:     _delay((unsigned long)((30)*(20000000/4000.0)));
  4721     0C5E  30C3               	movlw	195
  4722     0C5F  00F5               	movwf	??_init_display_controller+1
  4723     0C60  30CD               	movlw	205
  4724     0C61  00F4               	movwf	??_init_display_controller
  4725     0C62                     u3537:
  4726     0C62  0BF4               	decfsz	??_init_display_controller,f
  4727     0C63  2C62               	goto	u3537
  4728     0C64  0BF5               	decfsz	??_init_display_controller+1,f
  4729     0C65  2C62               	goto	u3537
  4730     0C66                     l2195:
  4731                           
  4732                           ;clcd.c: 27:     clcd_write(0x33, 0);
  4733     0C66  01F0               	clrf	clcd_write@mode
  4734     0C67  3033               	movlw	51
  4735     0C68  120A  158A  222E  120A  158A  	fcall	_clcd_write
  4736     0C6D                     l2197:
  4737                           
  4738                           ;clcd.c: 28:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  4739     0C6D  301B               	movlw	27
  4740     0C6E  00F5               	movwf	??_init_display_controller+1
  4741     0C6F  309E               	movlw	158
  4742     0C70  00F4               	movwf	??_init_display_controller
  4743     0C71                     u3547:
  4744     0C71  0BF4               	decfsz	??_init_display_controller,f
  4745     0C72  2C71               	goto	u3547
  4746     0C73  0BF5               	decfsz	??_init_display_controller+1,f
  4747     0C74  2C71               	goto	u3547
  4748     0C75  0000               	nop
  4749                           
  4750                           ;clcd.c: 29:     clcd_write(0x33, 0);
  4751     0C76  01F0               	clrf	clcd_write@mode
  4752     0C77  3033               	movlw	51
  4753     0C78  120A  158A  222E  120A  158A  	fcall	_clcd_write
  4754     0C7D                     l2199:
  4755                           
  4756                           ;clcd.c: 30:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4757     0C7D  30A6               	movlw	166
  4758     0C7E  00F4               	movwf	??_init_display_controller
  4759     0C7F                     u3557:
  4760     0C7F  0BF4               	decfsz	??_init_display_controller,f
  4761     0C80  2C7F               	goto	u3557
  4762     0C81  0000               	nop
  4763     0C82                     l2201:
  4764                           
  4765                           ;clcd.c: 31:     clcd_write(0x33, 0);
  4766     0C82  01F0               	clrf	clcd_write@mode
  4767     0C83  3033               	movlw	51
  4768     0C84  120A  158A  222E  120A  158A  	fcall	_clcd_write
  4769     0C89                     l2203:
  4770                           
  4771                           ;clcd.c: 32:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  4772     0C89  2C8A               	nop2	;2 cycle nop
  4773     0C8A  2C8B               	nop2	;2 cycle nop
  4774     0C8B  0000               	nop
  4775     0C8C                     l2205:
  4776                           
  4777                           ;clcd.c: 34:     clcd_write(0x02, 0);
  4778     0C8C  01F0               	clrf	clcd_write@mode
  4779     0C8D  3002               	movlw	2
  4780     0C8E  120A  158A  222E  120A  158A  	fcall	_clcd_write
  4781     0C93                     l2207:
  4782                           
  4783                           ;clcd.c: 35:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4784     0C93  30A6               	movlw	166
  4785     0C94  00F4               	movwf	??_init_display_controller
  4786     0C95                     u3567:
  4787     0C95  0BF4               	decfsz	??_init_display_controller,f
  4788     0C96  2C95               	goto	u3567
  4789     0C97  0000               	nop
  4790                           
  4791                           ;clcd.c: 36:     clcd_write(0x28, 0);
  4792     0C98  01F0               	clrf	clcd_write@mode
  4793     0C99  3028               	movlw	40
  4794     0C9A  120A  158A  222E  120A  158A  	fcall	_clcd_write
  4795     0C9F                     l2209:
  4796                           
  4797                           ;clcd.c: 37:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4798     0C9F  30A6               	movlw	166
  4799     0CA0  00F4               	movwf	??_init_display_controller
  4800     0CA1                     u3577:
  4801     0CA1  0BF4               	decfsz	??_init_display_controller,f
  4802     0CA2  2CA1               	goto	u3577
  4803     0CA3  0000               	nop
  4804     0CA4                     l2211:
  4805                           
  4806                           ;clcd.c: 38:     clcd_write(0x01, 0);
  4807     0CA4  01F0               	clrf	clcd_write@mode
  4808     0CA5  3001               	movlw	1
  4809     0CA6  120A  158A  222E  120A  158A  	fcall	_clcd_write
  4810                           
  4811                           ;clcd.c: 39:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  4812     0CAB  3004               	movlw	4
  4813     0CAC  00F5               	movwf	??_init_display_controller+1
  4814     0CAD  303D               	movlw	61
  4815     0CAE  00F4               	movwf	??_init_display_controller
  4816     0CAF                     u3587:
  4817     0CAF  0BF4               	decfsz	??_init_display_controller,f
  4818     0CB0  2CAF               	goto	u3587
  4819     0CB1  0BF5               	decfsz	??_init_display_controller+1,f
  4820     0CB2  2CAF               	goto	u3587
  4821     0CB3  2CB4               	nop2
  4822     0CB4                     l2213:
  4823                           
  4824                           ;clcd.c: 40:     clcd_write(0x0C, 0);
  4825     0CB4  01F0               	clrf	clcd_write@mode
  4826     0CB5  300C               	movlw	12
  4827     0CB6  120A  158A  222E  120A  158A  	fcall	_clcd_write
  4828     0CBB                     l2215:
  4829                           
  4830                           ;clcd.c: 41:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4831     0CBB  30A6               	movlw	166
  4832     0CBC  00F4               	movwf	??_init_display_controller
  4833     0CBD                     u3597:
  4834     0CBD  0BF4               	decfsz	??_init_display_controller,f
  4835     0CBE  2CBD               	goto	u3597
  4836     0CBF  0000               	nop
  4837     0CC0                     l20:
  4838     0CC0  0008               	return
  4839     0CC1                     __end_of_init_display_controller:
  4840                           
  4841                           	psect	text19
  4842     16E4                     __ptext19:	
  4843 ;; *************** function _init_adc *****************
  4844 ;; Defined at:
  4845 ;;		line 3 in file "adc.c"
  4846 ;; Parameters:    Size  Location     Type
  4847 ;;		None
  4848 ;; Auto vars:     Size  Location     Type
  4849 ;;		None
  4850 ;; Return value:  Size  Location     Type
  4851 ;;                  1    wreg      void 
  4852 ;; Registers used:
  4853 ;;		None
  4854 ;; Tracked objects:
  4855 ;;		On entry : 0/0
  4856 ;;		On exit  : 0/0
  4857 ;;		Unchanged: 0/0
  4858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4859 ;;      Params:         0       0       0       0       0
  4860 ;;      Locals:         0       0       0       0       0
  4861 ;;      Temps:          0       0       0       0       0
  4862 ;;      Totals:         0       0       0       0       0
  4863 ;;Total ram usage:        0 bytes
  4864 ;; Hardware stack levels used: 1
  4865 ;; This function calls:
  4866 ;;		Nothing
  4867 ;; This function is called by:
  4868 ;;		_init_config
  4869 ;; This function uses a non-reentrant model
  4870 ;;
  4871                           
  4872     16E4                     _init_adc:	
  4873                           ;psect for function _init_adc
  4874                           
  4875     16E4                     l2465:	
  4876                           ;incstack = 0
  4877                           ; Regs used in _init_adc: []
  4878                           
  4879                           
  4880                           ;adc.c: 6:     ADFM = 1;
  4881     16E4  1683               	bsf	3,5	;RP0=1, select bank1
  4882     16E5  1303               	bcf	3,6	;RP1=0, select bank1
  4883     16E6  179F               	bsf	31,7	;volatile
  4884                           
  4885                           ;adc.c: 9:     ADON = 1;
  4886     16E7  1283               	bcf	3,5	;RP0=0, select bank0
  4887     16E8  1303               	bcf	3,6	;RP1=0, select bank0
  4888     16E9  141F               	bsf	31,0	;volatile
  4889     16EA                     l66:
  4890     16EA  0008               	return
  4891     16EB                     __end_of_init_adc:
  4892                           
  4893                           	psect	text20
  4894     08C1                     __ptext20:	
  4895 ;; *************** function _clear_log *****************
  4896 ;; Defined at:
  4897 ;;		line 296 in file "BLACK_BOX.c"
  4898 ;; Parameters:    Size  Location     Type
  4899 ;;		None
  4900 ;; Auto vars:     Size  Location     Type
  4901 ;;		None
  4902 ;; Return value:  Size  Location     Type
  4903 ;;                  1    wreg      void 
  4904 ;; Registers used:
  4905 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4906 ;; Tracked objects:
  4907 ;;		On entry : 0/0
  4908 ;;		On exit  : 0/0
  4909 ;;		Unchanged: 0/0
  4910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4911 ;;      Params:         0       0       0       0       0
  4912 ;;      Locals:         0       0       0       0       0
  4913 ;;      Temps:          3       0       0       0       0
  4914 ;;      Totals:         3       0       0       0       0
  4915 ;;Total ram usage:        3 bytes
  4916 ;; Hardware stack levels used: 1
  4917 ;; Hardware stack levels required when called: 2
  4918 ;; This function calls:
  4919 ;;		_clcd_print
  4920 ;;		_clcd_write
  4921 ;; This function is called by:
  4922 ;;		_main
  4923 ;; This function uses a non-reentrant model
  4924 ;;
  4925                           
  4926     08C1                     _clear_log:	
  4927                           ;psect for function _clear_log
  4928                           
  4929     08C1                     l3047:	
  4930                           ;incstack = 0
  4931                           ; Regs used in _clear_log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4932                           
  4933                           
  4934                           ;BLACK_BOX.c: 298:     clear_flag = 1;
  4935     08C1  3001               	movlw	1
  4936     08C2  1283               	bcf	3,5	;RP0=0, select bank0
  4937     08C3  1303               	bcf	3,6	;RP1=0, select bank0
  4938     08C4  00DC               	movwf	_clear_flag
  4939     08C5                     l3049:
  4940                           
  4941                           ;BLACK_BOX.c: 299:     ADDR = 0x00;
  4942     08C5  01DD               	clrf	_ADDR
  4943     08C6                     l3051:
  4944                           
  4945                           ;BLACK_BOX.c: 300:     clcd_print("CLEARED......", (0xC0 + 2));
  4946     08C6  30A0               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  4947     08C7  00F4               	movwf	clcd_print@str
  4948     08C8  3080               	movlw	128
  4949     08C9  00F5               	movwf	clcd_print@str+1
  4950     08CA  30C2               	movlw	194
  4951     08CB  00F6               	movwf	clcd_print@addr
  4952     08CC  120A  158A  216B  120A  158A  	fcall	_clcd_print
  4953     08D1                     l3053:
  4954                           
  4955                           ;BLACK_BOX.c: 301:     _delay((unsigned long)((410000)*(20000000/4000000.0)));
  4956     08D1  300B               	movlw	11
  4957     08D2  00F9               	movwf	??_clear_log+2
  4958     08D3  3067               	movlw	103
  4959     08D4  00F8               	movwf	??_clear_log+1
  4960     08D5  304D               	movlw	77
  4961     08D6  00F7               	movwf	??_clear_log
  4962     08D7                     u3607:
  4963     08D7  0BF7               	decfsz	??_clear_log,f
  4964     08D8  28D7               	goto	u3607
  4965     08D9  0BF8               	decfsz	??_clear_log+1,f
  4966     08DA  28D7               	goto	u3607
  4967     08DB  0BF9               	decfsz	??_clear_log+2,f
  4968     08DC  28D7               	goto	u3607
  4969     08DD                     l3055:
  4970                           
  4971                           ;BLACK_BOX.c: 302:     clcd_write(0x01, 0);
  4972     08DD  01F0               	clrf	clcd_write@mode
  4973     08DE  3001               	movlw	1
  4974     08DF  120A  158A  222E  120A  158A  	fcall	_clcd_write
  4975     08E4                     l3057:
  4976                           
  4977                           ;BLACK_BOX.c: 303:     main_flag = MAIN_MENU;
  4978     08E4  3001               	movlw	1
  4979     08E5  1283               	bcf	3,5	;RP0=0, select bank0
  4980     08E6  1303               	bcf	3,6	;RP1=0, select bank0
  4981     08E7  00D7               	movwf	_main_flag
  4982     08E8  3000               	movlw	0
  4983     08E9  00D8               	movwf	_main_flag+1
  4984     08EA                     l277:
  4985     08EA  0008               	return
  4986     08EB                     __end_of_clear_log:
  4987                           
  4988                           	psect	text21
  4989     021C                     __ptext21:	
  4990 ;; *************** function _Download_log *****************
  4991 ;; Defined at:
  4992 ;;		line 238 in file "BLACK_BOX.c"
  4993 ;; Parameters:    Size  Location     Type
  4994 ;;		None
  4995 ;; Auto vars:     Size  Location     Type
  4996 ;;  j               2   18[BANK0 ] int 
  4997 ;;  i               2   16[BANK0 ] int 
  4998 ;;  time_data      10    0[BANK0 ] unsigned char [10]
  4999 ;;  speed_data      3   13[BANK0 ] unsigned char [3]
  5000 ;;  event_data      3   10[BANK0 ] unsigned char [3]
  5001 ;;  ADDR1           2   20[BANK0 ] int 
  5002 ;; Return value:  Size  Location     Type
  5003 ;;                  1    wreg      void 
  5004 ;; Registers used:
  5005 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5006 ;; Tracked objects:
  5007 ;;		On entry : 0/0
  5008 ;;		On exit  : 0/0
  5009 ;;		Unchanged: 0/0
  5010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5011 ;;      Params:         0       0       0       0       0
  5012 ;;      Locals:         0      22       0       0       0
  5013 ;;      Temps:          3       0       0       0       0
  5014 ;;      Totals:         3      22       0       0       0
  5015 ;;Total ram usage:       25 bytes
  5016 ;; Hardware stack levels used: 1
  5017 ;; Hardware stack levels required when called: 3
  5018 ;; This function calls:
  5019 ;;		_clcd_print
  5020 ;;		_clcd_write
  5021 ;;		_puts
  5022 ;;		_read_ext_eeprom
  5023 ;; This function is called by:
  5024 ;;		_main
  5025 ;; This function uses a non-reentrant model
  5026 ;;
  5027                           
  5028     021C                     _Download_log:	
  5029                           ;psect for function _Download_log
  5030                           
  5031     021C                     l2967:	
  5032                           ;incstack = 0
  5033                           ; Regs used in _Download_log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5034                           
  5035                           
  5036                           ;BLACK_BOX.c: 240:     int ADDR1 = 0x00;
  5037     021C  1283               	bcf	3,5	;RP0=0, select bank0
  5038     021D  1303               	bcf	3,6	;RP1=0, select bank0
  5039     021E  01B4               	clrf	Download_log@ADDR1
  5040     021F  01B5               	clrf	Download_log@ADDR1+1
  5041     0220                     l2969:
  5042                           
  5043                           ;BLACK_BOX.c: 241:     unsigned char time_data[10], event_data[3], speed_data[3];;BLACK_
      +                          BOX.c: 243:     if (clear_flag == 0 && event_count > 0)
  5044     0220  085C               	movf	_clear_flag,w
  5045     0221  1D03               	btfss	3,2
  5046     0222  2A24               	goto	u3221
  5047     0223  2A25               	goto	u3220
  5048     0224                     u3221:
  5049     0224  2B16               	goto	l3033
  5050     0225                     u3220:
  5051     0225                     l2971:
  5052     0225  084E               	movf	_event_count+1,w
  5053     0226  3A80               	xorlw	128
  5054     0227  00FF               	movwf	btemp+1
  5055     0228  3080               	movlw	128
  5056     0229  027F               	subwf	btemp+1,w
  5057     022A  1D03               	skipz
  5058     022B  2A2E               	goto	u3235
  5059     022C  3001               	movlw	1
  5060     022D  024D               	subwf	_event_count,w
  5061     022E                     u3235:
  5062     022E  1C03               	skipc
  5063     022F  2A31               	goto	u3231
  5064     0230  2A32               	goto	u3230
  5065     0231                     u3231:
  5066     0231  2B16               	goto	l3033
  5067     0232                     u3230:
  5068     0232                     l2973:
  5069                           
  5070                           ;BLACK_BOX.c: 244:     {;BLACK_BOX.c: 245:         puts("TIME      EVENT  SPEED\r\n");
  5071     0232  3001               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  5072     0233  00F1               	movwf	puts@s
  5073     0234  3080               	movlw	128
  5074     0235  00F2               	movwf	puts@s+1
  5075     0236  120A  158A  2074  120A  118A  	fcall	_puts
  5076     023B                     l2975:
  5077                           
  5078                           ;BLACK_BOX.c: 247:         for (int i = 0; i < event_count; i++)
  5079     023B  1283               	bcf	3,5	;RP0=0, select bank0
  5080     023C  1303               	bcf	3,6	;RP1=0, select bank0
  5081     023D  01B0               	clrf	Download_log@i
  5082     023E  01B1               	clrf	Download_log@i+1
  5083     023F  2AFC               	goto	l3029
  5084     0240                     l2977:
  5085                           
  5086                           ;BLACK_BOX.c: 248:         {;BLACK_BOX.c: 249:             if(ADDR1 == 120)
  5087     0240  3078               	movlw	120
  5088     0241  1283               	bcf	3,5	;RP0=0, select bank0
  5089     0242  1303               	bcf	3,6	;RP1=0, select bank0
  5090     0243  0634               	xorwf	Download_log@ADDR1,w
  5091     0244  0435               	iorwf	Download_log@ADDR1+1,w
  5092     0245  1D03               	btfss	3,2
  5093     0246  2A48               	goto	u3241
  5094     0247  2A49               	goto	u3240
  5095     0248                     u3241:
  5096     0248  2A4F               	goto	l2983
  5097     0249                     u3240:
  5098     0249                     l2979:
  5099                           
  5100                           ;BLACK_BOX.c: 250:             {;BLACK_BOX.c: 251:                 ADDR1 = 0;
  5101     0249  01B4               	clrf	Download_log@ADDR1
  5102     024A  01B5               	clrf	Download_log@ADDR1+1
  5103     024B                     l2981:
  5104                           
  5105                           ;BLACK_BOX.c: 252:                 event_count = 10;
  5106     024B  300A               	movlw	10
  5107     024C  00CD               	movwf	_event_count
  5108     024D  3000               	movlw	0
  5109     024E  00CE               	movwf	_event_count+1
  5110     024F                     l2983:
  5111                           
  5112                           ;BLACK_BOX.c: 255:             for (int j = 0; j < 8; j++)
  5113     024F  01B2               	clrf	Download_log@j
  5114     0250  01B3               	clrf	Download_log@j+1
  5115     0251                     l2989:
  5116                           
  5117                           ;BLACK_BOX.c: 256:             {;BLACK_BOX.c: 257:                 time_data[j] = read_e
      +                          xt_eeprom(ADDR1++);
  5118     0251  1283               	bcf	3,5	;RP0=0, select bank0
  5119     0252  1303               	bcf	3,6	;RP1=0, select bank0
  5120     0253  0832               	movf	Download_log@j,w
  5121     0254  3E20               	addlw	(low (Download_log@time_data| 0))& (0+255)
  5122     0255  0084               	movwf	4
  5123     0256  0834               	movf	Download_log@ADDR1,w
  5124     0257  120A  158A  2140  120A  118A  	fcall	_read_ext_eeprom
  5125     025C  1383               	bcf	3,7	;select IRP bank0
  5126     025D  0080               	movwf	0
  5127     025E                     l2991:
  5128     025E  3001               	movlw	1
  5129     025F  1283               	bcf	3,5	;RP0=0, select bank0
  5130     0260  1303               	bcf	3,6	;RP1=0, select bank0
  5131     0261  07B4               	addwf	Download_log@ADDR1,f
  5132     0262  1803               	skipnc
  5133     0263  0AB5               	incf	Download_log@ADDR1+1,f
  5134     0264  3000               	movlw	0
  5135     0265  07B5               	addwf	Download_log@ADDR1+1,f
  5136     0266                     l2993:
  5137                           
  5138                           ;BLACK_BOX.c: 259:             }
  5139     0266  3001               	movlw	1
  5140     0267  07B2               	addwf	Download_log@j,f
  5141     0268  1803               	skipnc
  5142     0269  0AB3               	incf	Download_log@j+1,f
  5143     026A  3000               	movlw	0
  5144     026B  07B3               	addwf	Download_log@j+1,f
  5145     026C                     l2995:
  5146     026C  0833               	movf	Download_log@j+1,w
  5147     026D  3A80               	xorlw	128
  5148     026E  00FF               	movwf	btemp+1
  5149     026F  3080               	movlw	128
  5150     0270  027F               	subwf	btemp+1,w
  5151     0271  1D03               	skipz
  5152     0272  2A75               	goto	u3255
  5153     0273  3008               	movlw	8
  5154     0274  0232               	subwf	Download_log@j,w
  5155     0275                     u3255:
  5156     0275  1C03               	skipc
  5157     0276  2A78               	goto	u3251
  5158     0277  2A79               	goto	u3250
  5159     0278                     u3251:
  5160     0278  2A51               	goto	l2989
  5161     0279                     u3250:
  5162     0279                     l2997:
  5163                           
  5164                           ;BLACK_BOX.c: 260:             time_data[9] = '\0';
  5165     0279  1283               	bcf	3,5	;RP0=0, select bank0
  5166     027A  1303               	bcf	3,6	;RP1=0, select bank0
  5167     027B  01A9               	clrf	Download_log@time_data+9
  5168     027C                     l2999:
  5169                           
  5170                           ;BLACK_BOX.c: 261:             puts(time_data);
  5171     027C  3020               	movlw	(low (Download_log@time_data| 0))& (0+255)
  5172     027D  00F1               	movwf	puts@s
  5173     027E  3000               	movlw	0
  5174     027F  00F2               	movwf	puts@s+1
  5175     0280  120A  158A  2074  120A  118A  	fcall	_puts
  5176     0285                     l3001:
  5177                           
  5178                           ;BLACK_BOX.c: 262:             puts("  ");
  5179     0285  3028               	movlw	(low (((STR_5+14)-__stringbase)| (0+32768)))& (0+255)
  5180     0286  00F1               	movwf	puts@s
  5181     0287  3080               	movlw	128
  5182     0288  00F2               	movwf	puts@s+1
  5183     0289  120A  158A  2074  120A  118A  	fcall	_puts
  5184     028E                     l3003:
  5185                           
  5186                           ;BLACK_BOX.c: 265:             event_data[0] = read_ext_eeprom(ADDR1++);
  5187     028E  1283               	bcf	3,5	;RP0=0, select bank0
  5188     028F  1303               	bcf	3,6	;RP1=0, select bank0
  5189     0290  0834               	movf	Download_log@ADDR1,w
  5190     0291  120A  158A  2140  120A  118A  	fcall	_read_ext_eeprom
  5191     0296  1283               	bcf	3,5	;RP0=0, select bank0
  5192     0297  1303               	bcf	3,6	;RP1=0, select bank0
  5193     0298  00AA               	movwf	Download_log@event_data
  5194     0299                     l3005:
  5195     0299  3001               	movlw	1
  5196     029A  07B4               	addwf	Download_log@ADDR1,f
  5197     029B  1803               	skipnc
  5198     029C  0AB5               	incf	Download_log@ADDR1+1,f
  5199     029D  3000               	movlw	0
  5200     029E  07B5               	addwf	Download_log@ADDR1+1,f
  5201     029F                     l3007:
  5202                           
  5203                           ;BLACK_BOX.c: 266:             event_data[1] = read_ext_eeprom(ADDR1++);
  5204     029F  0834               	movf	Download_log@ADDR1,w
  5205     02A0  120A  158A  2140  120A  118A  	fcall	_read_ext_eeprom
  5206     02A5  1283               	bcf	3,5	;RP0=0, select bank0
  5207     02A6  1303               	bcf	3,6	;RP1=0, select bank0
  5208     02A7  00AB               	movwf	Download_log@event_data+1
  5209     02A8                     l3009:
  5210     02A8  3001               	movlw	1
  5211     02A9  07B4               	addwf	Download_log@ADDR1,f
  5212     02AA  1803               	skipnc
  5213     02AB  0AB5               	incf	Download_log@ADDR1+1,f
  5214     02AC  3000               	movlw	0
  5215     02AD  07B5               	addwf	Download_log@ADDR1+1,f
  5216                           
  5217                           ;BLACK_BOX.c: 267:             event_data[2] = '\0';
  5218     02AE  01AC               	clrf	Download_log@event_data+2
  5219     02AF                     l3011:
  5220                           
  5221                           ;BLACK_BOX.c: 268:             puts(event_data);
  5222     02AF  302A               	movlw	(low (Download_log@event_data| 0))& (0+255)
  5223     02B0  00F1               	movwf	puts@s
  5224     02B1  3000               	movlw	0
  5225     02B2  00F2               	movwf	puts@s+1
  5226     02B3  120A  158A  2074  120A  118A  	fcall	_puts
  5227     02B8                     l3013:
  5228                           
  5229                           ;BLACK_BOX.c: 269:             puts("     ");
  5230     02B8  3025               	movlw	(low (((STR_5+11)-__stringbase)| (0+32768)))& (0+255)
  5231     02B9  00F1               	movwf	puts@s
  5232     02BA  3080               	movlw	128
  5233     02BB  00F2               	movwf	puts@s+1
  5234     02BC  120A  158A  2074  120A  118A  	fcall	_puts
  5235     02C1                     l3015:
  5236                           
  5237                           ;BLACK_BOX.c: 272:             speed_data[0] = read_ext_eeprom(ADDR1++);
  5238     02C1  1283               	bcf	3,5	;RP0=0, select bank0
  5239     02C2  1303               	bcf	3,6	;RP1=0, select bank0
  5240     02C3  0834               	movf	Download_log@ADDR1,w
  5241     02C4  120A  158A  2140  120A  118A  	fcall	_read_ext_eeprom
  5242     02C9  1283               	bcf	3,5	;RP0=0, select bank0
  5243     02CA  1303               	bcf	3,6	;RP1=0, select bank0
  5244     02CB  00AD               	movwf	Download_log@speed_data
  5245     02CC                     l3017:
  5246     02CC  3001               	movlw	1
  5247     02CD  07B4               	addwf	Download_log@ADDR1,f
  5248     02CE  1803               	skipnc
  5249     02CF  0AB5               	incf	Download_log@ADDR1+1,f
  5250     02D0  3000               	movlw	0
  5251     02D1  07B5               	addwf	Download_log@ADDR1+1,f
  5252     02D2                     l3019:
  5253                           
  5254                           ;BLACK_BOX.c: 273:             speed_data[1] = read_ext_eeprom(ADDR1++);
  5255     02D2  0834               	movf	Download_log@ADDR1,w
  5256     02D3  120A  158A  2140  120A  118A  	fcall	_read_ext_eeprom
  5257     02D8  1283               	bcf	3,5	;RP0=0, select bank0
  5258     02D9  1303               	bcf	3,6	;RP1=0, select bank0
  5259     02DA  00AE               	movwf	Download_log@speed_data+1
  5260     02DB                     l3021:
  5261     02DB  3001               	movlw	1
  5262     02DC  07B4               	addwf	Download_log@ADDR1,f
  5263     02DD  1803               	skipnc
  5264     02DE  0AB5               	incf	Download_log@ADDR1+1,f
  5265     02DF  3000               	movlw	0
  5266     02E0  07B5               	addwf	Download_log@ADDR1+1,f
  5267                           
  5268                           ;BLACK_BOX.c: 274:             speed_data[2] = '\0';
  5269     02E1  01AF               	clrf	Download_log@speed_data+2
  5270     02E2                     l3023:
  5271                           
  5272                           ;BLACK_BOX.c: 275:             puts(speed_data);
  5273     02E2  302D               	movlw	(low (Download_log@speed_data| 0))& (0+255)
  5274     02E3  00F1               	movwf	puts@s
  5275     02E4  3000               	movlw	0
  5276     02E5  00F2               	movwf	puts@s+1
  5277     02E6  120A  158A  2074  120A  118A  	fcall	_puts
  5278     02EB                     l3025:
  5279                           
  5280                           ;BLACK_BOX.c: 276:             puts("\r\n");
  5281     02EB  3017               	movlw	(low (((STR_9+22)-__stringbase)| (0+32768)))& (0+255)
  5282     02EC  00F1               	movwf	puts@s
  5283     02ED  3080               	movlw	128
  5284     02EE  00F2               	movwf	puts@s+1
  5285     02EF  120A  158A  2074  120A  118A  	fcall	_puts
  5286     02F4                     l3027:
  5287                           
  5288                           ;BLACK_BOX.c: 278:         }
  5289     02F4  3001               	movlw	1
  5290     02F5  1283               	bcf	3,5	;RP0=0, select bank0
  5291     02F6  1303               	bcf	3,6	;RP1=0, select bank0
  5292     02F7  07B0               	addwf	Download_log@i,f
  5293     02F8  1803               	skipnc
  5294     02F9  0AB1               	incf	Download_log@i+1,f
  5295     02FA  3000               	movlw	0
  5296     02FB  07B1               	addwf	Download_log@i+1,f
  5297     02FC                     l3029:
  5298     02FC  0831               	movf	Download_log@i+1,w
  5299     02FD  3A80               	xorlw	128
  5300     02FE  00F7               	movwf	??_Download_log
  5301     02FF  084E               	movf	_event_count+1,w
  5302     0300  3A80               	xorlw	128
  5303     0301  0277               	subwf	??_Download_log,w
  5304     0302  1D03               	skipz
  5305     0303  2B06               	goto	u3265
  5306     0304  084D               	movf	_event_count,w
  5307     0305  0230               	subwf	Download_log@i,w
  5308     0306                     u3265:
  5309     0306  1C03               	skipc
  5310     0307  2B09               	goto	u3261
  5311     0308  2B0A               	goto	u3260
  5312     0309                     u3261:
  5313     0309  2A40               	goto	l2977
  5314     030A                     u3260:
  5315     030A                     l3031:
  5316                           
  5317                           ;BLACK_BOX.c: 280:         clcd_print("DOWNLOADED", (0x80 + 1));
  5318     030A  30AE               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  5319     030B  00F4               	movwf	clcd_print@str
  5320     030C  3080               	movlw	128
  5321     030D  00F5               	movwf	clcd_print@str+1
  5322     030E  3081               	movlw	129
  5323     030F  00F6               	movwf	clcd_print@addr
  5324     0310  120A  158A  216B  120A  118A  	fcall	_clcd_print
  5325                           
  5326                           ;BLACK_BOX.c: 282:     }
  5327     0315  2B30               	goto	l3039
  5328     0316                     l3033:
  5329                           
  5330                           ;BLACK_BOX.c: 286:         event_count = 0;
  5331     0316  1283               	bcf	3,5	;RP0=0, select bank0
  5332     0317  1303               	bcf	3,6	;RP1=0, select bank0
  5333     0318  01CD               	clrf	_event_count
  5334     0319  01CE               	clrf	_event_count+1
  5335     031A                     l3035:
  5336                           
  5337                           ;BLACK_BOX.c: 287:         clcd_print("                ", (0xC0 + 0));
  5338     031A  301A               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  5339     031B  00F4               	movwf	clcd_print@str
  5340     031C  3080               	movlw	128
  5341     031D  00F5               	movwf	clcd_print@str+1
  5342     031E  30C0               	movlw	192
  5343     031F  00F6               	movwf	clcd_print@addr
  5344     0320  120A  158A  216B  120A  118A  	fcall	_clcd_print
  5345     0325                     l3037:
  5346                           
  5347                           ;BLACK_BOX.c: 288:         clcd_print("NO_LOGS(EMPTY)", (0x80 + 2));
  5348     0325  3091               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  5349     0326  00F4               	movwf	clcd_print@str
  5350     0327  3080               	movlw	128
  5351     0328  00F5               	movwf	clcd_print@str+1
  5352     0329  3082               	movlw	130
  5353     032A  00F6               	movwf	clcd_print@addr
  5354     032B  120A  158A  216B  120A  118A  	fcall	_clcd_print
  5355     0330                     l3039:
  5356                           
  5357                           ;BLACK_BOX.c: 291:     _delay((unsigned long)((410000)*(20000000/4000000.0)));
  5358     0330  300B               	movlw	11
  5359     0331  00F9               	movwf	??_Download_log+2
  5360     0332  3067               	movlw	103
  5361     0333  00F8               	movwf	??_Download_log+1
  5362     0334  304D               	movlw	77
  5363     0335  00F7               	movwf	??_Download_log
  5364     0336                     u3617:
  5365     0336  0BF7               	decfsz	??_Download_log,f
  5366     0337  2B36               	goto	u3617
  5367     0338  0BF8               	decfsz	??_Download_log+1,f
  5368     0339  2B36               	goto	u3617
  5369     033A  0BF9               	decfsz	??_Download_log+2,f
  5370     033B  2B36               	goto	u3617
  5371     033C                     l3041:
  5372     033C                     l3043:
  5373                           
  5374                           ;BLACK_BOX.c: 293:     clcd_write(0x01, 0);
  5375     033C  01F0               	clrf	clcd_write@mode
  5376     033D  3001               	movlw	1
  5377     033E  120A  158A  222E  120A  118A  	fcall	_clcd_write
  5378     0343                     l3045:
  5379                           
  5380                           ;BLACK_BOX.c: 294:     main_flag = MAIN_MENU;
  5381     0343  3001               	movlw	1
  5382     0344  1283               	bcf	3,5	;RP0=0, select bank0
  5383     0345  1303               	bcf	3,6	;RP1=0, select bank0
  5384     0346  00D7               	movwf	_main_flag
  5385     0347  3000               	movlw	0
  5386     0348  00D8               	movwf	_main_flag+1
  5387     0349                     l274:
  5388     0349  0008               	return
  5389     034A                     __end_of_Download_log:
  5390                           
  5391                           	psect	text22
  5392     0940                     __ptext22:	
  5393 ;; *************** function _read_ext_eeprom *****************
  5394 ;; Defined at:
  5395 ;;		line 6 in file "external_eeprom.c"
  5396 ;; Parameters:    Size  Location     Type
  5397 ;;  addr            1    wreg     unsigned char 
  5398 ;; Auto vars:     Size  Location     Type
  5399 ;;  addr            1    2[COMMON] unsigned char 
  5400 ;;  data            1    3[COMMON] unsigned char 
  5401 ;; Return value:  Size  Location     Type
  5402 ;;                  1    wreg      unsigned char 
  5403 ;; Registers used:
  5404 ;;		wreg, status,2, status,0, pclath, cstack
  5405 ;; Tracked objects:
  5406 ;;		On entry : 0/0
  5407 ;;		On exit  : 0/0
  5408 ;;		Unchanged: 0/0
  5409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5410 ;;      Params:         0       0       0       0       0
  5411 ;;      Locals:         2       0       0       0       0
  5412 ;;      Temps:          0       0       0       0       0
  5413 ;;      Totals:         2       0       0       0       0
  5414 ;;Total ram usage:        2 bytes
  5415 ;; Hardware stack levels used: 1
  5416 ;; Hardware stack levels required when called: 2
  5417 ;; This function calls:
  5418 ;;		_i2c1_read
  5419 ;;		_i2c1_rep_start
  5420 ;;		_i2c1_start
  5421 ;;		_i2c1_stop
  5422 ;;		_i2c1_write
  5423 ;; This function is called by:
  5424 ;;		_view_log
  5425 ;;		_Download_log
  5426 ;; This function uses a non-reentrant model
  5427 ;;
  5428                           
  5429     0940                     _read_ext_eeprom:	
  5430                           ;psect for function _read_ext_eeprom
  5431                           
  5432                           
  5433                           ;incstack = 0
  5434                           ; Regs used in _read_ext_eeprom: [wreg+status,2+status,0+pclath+cstack]
  5435                           ;read_ext_eeprom@addr stored from wreg
  5436     0940  00F2               	movwf	read_ext_eeprom@addr
  5437     0941                     l2531:
  5438                           
  5439                           ;external_eeprom.c: 6: unsigned char read_ext_eeprom(unsigned char addr);external_eeprom
      +                          .c: 7: {;external_eeprom.c: 8:     unsigned char data;;external_eeprom.c: 10:     i2c1_s
      +                          tart();
  5440     0941  160A  118A  2715  120A  158A  	fcall	_i2c1_start
  5441                           
  5442                           ;external_eeprom.c: 11:     i2c1_write(0b10100000);
  5443     0946  30A0               	movlw	160
  5444     0947  160A  118A  273B  120A  158A  	fcall	_i2c1_write
  5445                           
  5446                           ;external_eeprom.c: 12:     i2c1_write(addr);
  5447     094C  0872               	movf	read_ext_eeprom@addr,w
  5448     094D  160A  118A  273B  120A  158A  	fcall	_i2c1_write
  5449                           
  5450                           ;external_eeprom.c: 13:     i2c1_rep_start();
  5451     0952  160A  118A  2727  120A  158A  	fcall	_i2c1_rep_start
  5452                           
  5453                           ;external_eeprom.c: 14:     i2c1_write(0b10100001);
  5454     0957  30A1               	movlw	161
  5455     0958  160A  118A  273B  120A  158A  	fcall	_i2c1_write
  5456                           
  5457                           ;external_eeprom.c: 15:     data = i2c1_read(0);
  5458     095D  3000               	movlw	0
  5459     095E  120A  158A  2053  120A  158A  	fcall	_i2c1_read
  5460     0963  00F3               	movwf	read_ext_eeprom@data
  5461                           
  5462                           ;external_eeprom.c: 16:     i2c1_stop();
  5463     0964  160A  118A  271E  120A  158A  	fcall	_i2c1_stop
  5464     0969                     l2533:
  5465                           
  5466                           ;external_eeprom.c: 18:     return data;
  5467     0969  0873               	movf	read_ext_eeprom@data,w
  5468     096A                     l411:
  5469     096A  0008               	return
  5470     096B                     __end_of_read_ext_eeprom:
  5471                           
  5472                           	psect	text23
  5473     1727                     __ptext23:	
  5474 ;; *************** function _i2c1_rep_start *****************
  5475 ;; Defined at:
  5476 ;;		line 29 in file "i2c2.c"
  5477 ;; Parameters:    Size  Location     Type
  5478 ;;		None
  5479 ;; Auto vars:     Size  Location     Type
  5480 ;;		None
  5481 ;; Return value:  Size  Location     Type
  5482 ;;                  1    wreg      void 
  5483 ;; Registers used:
  5484 ;;		wreg, status,2, status,0, pclath, cstack
  5485 ;; Tracked objects:
  5486 ;;		On entry : 0/0
  5487 ;;		On exit  : 0/0
  5488 ;;		Unchanged: 0/0
  5489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5490 ;;      Params:         0       0       0       0       0
  5491 ;;      Locals:         0       0       0       0       0
  5492 ;;      Temps:          0       0       0       0       0
  5493 ;;      Totals:         0       0       0       0       0
  5494 ;;Total ram usage:        0 bytes
  5495 ;; Hardware stack levels used: 1
  5496 ;; Hardware stack levels required when called: 1
  5497 ;; This function calls:
  5498 ;;		_i2c1_wait_for_idle
  5499 ;; This function is called by:
  5500 ;;		_read_ext_eeprom
  5501 ;; This function uses a non-reentrant model
  5502 ;;
  5503                           
  5504     1727                     _i2c1_rep_start:	
  5505                           ;psect for function _i2c1_rep_start
  5506                           
  5507     1727                     l2237:	
  5508                           ;incstack = 0
  5509                           ; Regs used in _i2c1_rep_start: [wreg+status,2+status,0+pclath+cstack]
  5510                           
  5511                           
  5512                           ;i2c2.c: 31:     i2c1_wait_for_idle();
  5513     1727  160A  118A  2769  160A  118A  	fcall	_i2c1_wait_for_idle
  5514     172C                     l2239:
  5515                           
  5516                           ;i2c2.c: 32:     SEN = 1;
  5517     172C  1683               	bsf	3,5	;RP0=1, select bank1
  5518     172D  1303               	bcf	3,6	;RP1=0, select bank1
  5519     172E  1411               	bsf	17,0	;volatile
  5520     172F                     l488:
  5521     172F  0008               	return
  5522     1730                     __end_of_i2c1_rep_start:
  5523                           
  5524                           	psect	text24
  5525     0853                     __ptext24:	
  5526 ;; *************** function _i2c1_read *****************
  5527 ;; Defined at:
  5528 ;;		line 42 in file "i2c2.c"
  5529 ;; Parameters:    Size  Location     Type
  5530 ;;  ack             1    wreg     unsigned char 
  5531 ;; Auto vars:     Size  Location     Type
  5532 ;;  ack             1    0[COMMON] unsigned char 
  5533 ;;  data            1    1[COMMON] unsigned char 
  5534 ;; Return value:  Size  Location     Type
  5535 ;;                  1    wreg      unsigned char 
  5536 ;; Registers used:
  5537 ;;		wreg, status,2, status,0, pclath, cstack
  5538 ;; Tracked objects:
  5539 ;;		On entry : 0/0
  5540 ;;		On exit  : 0/0
  5541 ;;		Unchanged: 0/0
  5542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5543 ;;      Params:         0       0       0       0       0
  5544 ;;      Locals:         2       0       0       0       0
  5545 ;;      Temps:          0       0       0       0       0
  5546 ;;      Totals:         2       0       0       0       0
  5547 ;;Total ram usage:        2 bytes
  5548 ;; Hardware stack levels used: 1
  5549 ;; Hardware stack levels required when called: 1
  5550 ;; This function calls:
  5551 ;;		_i2c1_wait_for_idle
  5552 ;; This function is called by:
  5553 ;;		_read_ext_eeprom
  5554 ;; This function uses a non-reentrant model
  5555 ;;
  5556                           
  5557     0853                     _i2c1_read:	
  5558                           ;psect for function _i2c1_read
  5559                           
  5560                           
  5561                           ;incstack = 0
  5562                           ; Regs used in _i2c1_read: [wreg+status,2+status,0+pclath+cstack]
  5563                           ;i2c1_read@ack stored from wreg
  5564     0853  00F0               	movwf	i2c1_read@ack
  5565     0854                     l2241:
  5566                           
  5567                           ;i2c2.c: 42: unsigned char i2c1_read(unsigned char ack);i2c2.c: 43: {;i2c2.c: 44:     un
      +                          signed char data;;i2c2.c: 46:     i2c1_wait_for_idle();
  5568     0854  160A  118A  2769  120A  158A  	fcall	_i2c1_wait_for_idle
  5569     0859                     l2243:
  5570                           
  5571                           ;i2c2.c: 47:     RCEN = 1;
  5572     0859  1683               	bsf	3,5	;RP0=1, select bank1
  5573     085A  1303               	bcf	3,6	;RP1=0, select bank1
  5574     085B  1591               	bsf	17,3	;volatile
  5575                           
  5576                           ;i2c2.c: 49:     i2c1_wait_for_idle();
  5577     085C  160A  118A  2769  120A  158A  	fcall	_i2c1_wait_for_idle
  5578     0861                     l2245:
  5579                           
  5580                           ;i2c2.c: 50:     data = SSPBUF;
  5581     0861  1283               	bcf	3,5	;RP0=0, select bank0
  5582     0862  1303               	bcf	3,6	;RP1=0, select bank0
  5583     0863  0813               	movf	19,w	;volatile
  5584     0864  00F1               	movwf	i2c1_read@data
  5585     0865                     l2247:
  5586                           
  5587                           ;i2c2.c: 52:     if (ack == 1)
  5588     0865  0370               	decf	i2c1_read@ack,w
  5589     0866  1D03               	btfss	3,2
  5590     0867  2869               	goto	u1851
  5591     0868  286A               	goto	u1850
  5592     0869                     u1851:
  5593     0869  286E               	goto	l494
  5594     086A                     u1850:
  5595     086A                     l2249:
  5596                           
  5597                           ;i2c2.c: 53:     {;i2c2.c: 54:         ACKDT = 1;
  5598     086A  1683               	bsf	3,5	;RP0=1, select bank1
  5599     086B  1303               	bcf	3,6	;RP1=0, select bank1
  5600     086C  1691               	bsf	17,5	;volatile
  5601                           
  5602                           ;i2c2.c: 55:     }
  5603     086D  2871               	goto	l495
  5604     086E                     l494:	
  5605                           ;i2c2.c: 56:     else
  5606                           
  5607                           
  5608                           ;i2c2.c: 57:     {;i2c2.c: 58:         ACKDT = 0;
  5609     086E  1683               	bsf	3,5	;RP0=1, select bank1
  5610     086F  1303               	bcf	3,6	;RP1=0, select bank1
  5611     0870  1291               	bcf	17,5	;volatile
  5612     0871                     l495:	
  5613                           ;i2c2.c: 59:     }
  5614                           
  5615                           
  5616                           ;i2c2.c: 61:     ACKEN = 1;
  5617     0871  1611               	bsf	17,4	;volatile
  5618     0872                     l2251:
  5619                           
  5620                           ;i2c2.c: 63:     return data;
  5621     0872  0871               	movf	i2c1_read@data,w
  5622     0873                     l496:
  5623     0873  0008               	return
  5624     0874                     __end_of_i2c1_read:
  5625                           
  5626                           	psect	text25
  5627     0874                     __ptext25:	
  5628 ;; *************** function _puts *****************
  5629 ;; Defined at:
  5630 ;;		line 46 in file "uart.c"
  5631 ;; Parameters:    Size  Location     Type
  5632 ;;  s               2    1[COMMON] PTR const unsigned char 
  5633 ;;		 -> STR_12(3), Download_log@speed_data(3), STR_11(6), Download_log@event_data(3), 
  5634 ;;		 -> STR_10(3), Download_log@time_data(10), STR_9(25), 
  5635 ;; Auto vars:     Size  Location     Type
  5636 ;;		None
  5637 ;; Return value:  Size  Location     Type
  5638 ;;                  1    wreg      void 
  5639 ;; Registers used:
  5640 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5641 ;; Tracked objects:
  5642 ;;		On entry : 0/0
  5643 ;;		On exit  : 0/0
  5644 ;;		Unchanged: 0/0
  5645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5646 ;;      Params:         2       0       0       0       0
  5647 ;;      Locals:         0       0       0       0       0
  5648 ;;      Temps:          0       0       0       0       0
  5649 ;;      Totals:         2       0       0       0       0
  5650 ;;Total ram usage:        2 bytes
  5651 ;; Hardware stack levels used: 1
  5652 ;; Hardware stack levels required when called: 1
  5653 ;; This function calls:
  5654 ;;		_putchar
  5655 ;; This function is called by:
  5656 ;;		_Download_log
  5657 ;; This function uses a non-reentrant model
  5658 ;;
  5659                           
  5660     0874                     _puts:	
  5661                           ;psect for function _puts
  5662                           
  5663     0874                     l2537:	
  5664                           ;incstack = 0
  5665                           ; Regs used in _puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5666                           
  5667                           
  5668                           ;uart.c: 46: void puts(const char *s);uart.c: 47: {;uart.c: 48:     while (*s)
  5669     0874  2889               	goto	l2543
  5670     0875                     l2539:
  5671                           
  5672                           ;uart.c: 49:     {;uart.c: 50:         putchar(*s++);
  5673     0875  0872               	movf	puts@s+1,w
  5674     0876  00FF               	movwf	btemp+1
  5675     0877  0871               	movf	puts@s,w
  5676     0878  0084               	movwf	4
  5677     0879  120A  118A  2003  120A  158A  	fcall	stringtab
  5678     087E  160A  118A  2746  120A  158A  	fcall	_putchar
  5679     0883                     l2541:
  5680     0883  3001               	movlw	1
  5681     0884  07F1               	addwf	puts@s,f
  5682     0885  1803               	skipnc
  5683     0886  0AF2               	incf	puts@s+1,f
  5684     0887  3000               	movlw	0
  5685     0888  07F2               	addwf	puts@s+1,f
  5686     0889                     l2543:
  5687                           
  5688                           ;uart.c: 48:     while (*s)
  5689     0889  0872               	movf	puts@s+1,w
  5690     088A  1283               	bcf	3,5	;RP0=0, select bank0
  5691     088B  1303               	bcf	3,6	;RP1=0, select bank0
  5692     088C  00FF               	movwf	btemp+1
  5693     088D  0871               	movf	puts@s,w
  5694     088E  0084               	movwf	4
  5695     088F  120A  118A  2003  120A  158A  	fcall	stringtab
  5696     0894  3A00               	xorlw	0
  5697     0895  1D03               	skipz
  5698     0896  2898               	goto	u2401
  5699     0897  2899               	goto	u2400
  5700     0898                     u2401:
  5701     0898  2875               	goto	l2539
  5702     0899                     u2400:
  5703     0899                     l449:
  5704     0899  0008               	return
  5705     089A                     __end_of_puts:
  5706                           
  5707                           	psect	text26
  5708     1746                     __ptext26:	
  5709 ;; *************** function _putchar *****************
  5710 ;; Defined at:
  5711 ;;		line 31 in file "uart.c"
  5712 ;; Parameters:    Size  Location     Type
  5713 ;;  data            1    wreg     unsigned char 
  5714 ;; Auto vars:     Size  Location     Type
  5715 ;;  data            1    0[COMMON] unsigned char 
  5716 ;; Return value:  Size  Location     Type
  5717 ;;                  1    wreg      void 
  5718 ;; Registers used:
  5719 ;;		wreg
  5720 ;; Tracked objects:
  5721 ;;		On entry : 0/0
  5722 ;;		On exit  : 0/0
  5723 ;;		Unchanged: 0/0
  5724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5725 ;;      Params:         0       0       0       0       0
  5726 ;;      Locals:         1       0       0       0       0
  5727 ;;      Temps:          0       0       0       0       0
  5728 ;;      Totals:         1       0       0       0       0
  5729 ;;Total ram usage:        1 bytes
  5730 ;; Hardware stack levels used: 1
  5731 ;; This function calls:
  5732 ;;		Nothing
  5733 ;; This function is called by:
  5734 ;;		_puts
  5735 ;; This function uses a non-reentrant model
  5736 ;;
  5737                           
  5738     1746                     _putchar:	
  5739                           ;psect for function _putchar
  5740                           
  5741                           
  5742                           ;incstack = 0
  5743                           ; Regs used in _putchar: [wreg]
  5744                           ;putchar@data stored from wreg
  5745     1746  00F0               	movwf	putchar@data
  5746     1747                     l2255:
  5747                           
  5748                           ;uart.c: 31: void putchar(unsigned char data);uart.c: 32: {;uart.c: 34:     TXREG = data
      +                          ;
  5749     1747  0870               	movf	putchar@data,w
  5750     1748  1283               	bcf	3,5	;RP0=0, select bank0
  5751     1749  1303               	bcf	3,6	;RP1=0, select bank0
  5752     174A  0099               	movwf	25	;volatile
  5753     174B                     l441:	
  5754                           ;uart.c: 40:     } while (TXIF != 1);
  5755                           
  5756     174B  1E0C               	btfss	12,4	;volatile
  5757     174C  2F4E               	goto	u1861
  5758     174D  2F4F               	goto	u1860
  5759     174E                     u1861:
  5760     174E  2F4B               	goto	l441
  5761     174F                     u1860:
  5762     174F                     l442:
  5763                           
  5764                           ;uart.c: 43:     TXIF = 0;
  5765     174F  120C               	bcf	12,4	;volatile
  5766     1750                     l443:
  5767     1750  0008               	return
  5768     1751                     __end_of_putchar:
  5769                           
  5770                           	psect	text27
  5771     00F2                     __ptext27:	
  5772 ;; *************** function _Dash_board *****************
  5773 ;; Defined at:
  5774 ;;		line 55 in file "BLACK_BOX.c"
  5775 ;; Parameters:    Size  Location     Type
  5776 ;;		None
  5777 ;; Auto vars:     Size  Location     Type
  5778 ;;  Clock_regist    3   38[BANK0 ] unsigned char [3]
  5779 ;;  adc_val         2   36[BANK0 ] unsigned short 
  5780 ;; Return value:  Size  Location     Type
  5781 ;;                  1    wreg      void 
  5782 ;; Registers used:
  5783 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5784 ;; Tracked objects:
  5785 ;;		On entry : 0/0
  5786 ;;		On exit  : 0/0
  5787 ;;		Unchanged: 0/0
  5788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5789 ;;      Params:         0       0       0       0       0
  5790 ;;      Locals:         0       5       0       0       0
  5791 ;;      Temps:          0       0       0       0       0
  5792 ;;      Totals:         0       5       0       0       0
  5793 ;;Total ram usage:        5 bytes
  5794 ;; Hardware stack levels used: 1
  5795 ;; Hardware stack levels required when called: 4
  5796 ;; This function calls:
  5797 ;;		___bmul
  5798 ;;		___fldiv
  5799 ;;		___fltol
  5800 ;;		___lwdiv
  5801 ;;		___lwmod
  5802 ;;		___xxtofl
  5803 ;;		_clcd_print
  5804 ;;		_clcd_putch
  5805 ;;		_clcd_write
  5806 ;;		_display_time
  5807 ;;		_get_time
  5808 ;;		_read_adc
  5809 ;;		_store_events
  5810 ;; This function is called by:
  5811 ;;		_main
  5812 ;; This function uses a non-reentrant model
  5813 ;;
  5814                           
  5815     00F2                     _Dash_board:	
  5816                           ;psect for function _Dash_board
  5817                           
  5818     00F2                     l2785:	
  5819                           ;incstack = 0
  5820                           ; Regs used in _Dash_board: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5821                           
  5822                           
  5823                           ;BLACK_BOX.c: 60:     clcd_print("TIME     EV   SP", (0x80 + 0));
  5824     00F2  306F               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  5825     00F3  00F4               	movwf	clcd_print@str
  5826     00F4  3080               	movlw	128
  5827     00F5  00F5               	movwf	clcd_print@str+1
  5828     00F6  3080               	movlw	128
  5829     00F7  00F6               	movwf	clcd_print@addr
  5830     00F8  120A  158A  216B  120A  118A  	fcall	_clcd_print
  5831     00FD                     l2787:
  5832                           
  5833                           ;BLACK_BOX.c: 61:     get_time(Clock_register);
  5834     00FD  3046               	movlw	(low (Dash_board@Clock_register| 0))& (0+255)
  5835     00FE  00F4               	movwf	get_time@clock_register
  5836     00FF  120A  158A  2012  120A  118A  	fcall	_get_time
  5837     0104                     l2789:
  5838                           
  5839                           ;BLACK_BOX.c: 63:     display_time(Clock_register);
  5840     0104  3046               	movlw	(low (Dash_board@Clock_register| 0))& (0+255)
  5841     0105  00F7               	movwf	display_time@clock_register
  5842     0106  120A  158A  2357  120A  118A  	fcall	_display_time
  5843     010B                     l2791:
  5844                           
  5845                           ;BLACK_BOX.c: 65:     if(key == 0x3E)
  5846     010B  303E               	movlw	62
  5847     010C  1283               	bcf	3,5	;RP0=0, select bank0
  5848     010D  1303               	bcf	3,6	;RP1=0, select bank0
  5849     010E  065E               	xorwf	_key,w
  5850     010F  1D03               	btfss	3,2
  5851     0110  2912               	goto	u2981
  5852     0111  2913               	goto	u2980
  5853     0112                     u2981:
  5854     0112  2942               	goto	l2803
  5855     0113                     u2980:
  5856     0113                     l2793:
  5857                           
  5858                           ;BLACK_BOX.c: 66:     {;BLACK_BOX.c: 67:         if(Event_index == 8)
  5859     0113  3008               	movlw	8
  5860     0114  0655               	xorwf	_Event_index,w
  5861     0115  0456               	iorwf	_Event_index+1,w
  5862     0116  1D03               	btfss	3,2
  5863     0117  2919               	goto	u2991
  5864     0118  291A               	goto	u2990
  5865     0119                     u2991:
  5866     0119  291F               	goto	l2797
  5867     011A                     u2990:
  5868     011A                     l2795:
  5869                           
  5870                           ;BLACK_BOX.c: 68:         {;BLACK_BOX.c: 69:             Event_index = 1;
  5871     011A  3001               	movlw	1
  5872     011B  00D5               	movwf	_Event_index
  5873     011C  3000               	movlw	0
  5874     011D  00D6               	movwf	_Event_index+1
  5875                           
  5876                           ;BLACK_BOX.c: 70:         }
  5877     011E  2934               	goto	l220
  5878     011F                     l2797:
  5879     011F  0856               	movf	_Event_index+1,w
  5880     0120  3A80               	xorlw	128
  5881     0121  00FF               	movwf	btemp+1
  5882     0122  3080               	movlw	128
  5883     0123  027F               	subwf	btemp+1,w
  5884     0124  1D03               	skipz
  5885     0125  2928               	goto	u3005
  5886     0126  3007               	movlw	7
  5887     0127  0255               	subwf	_Event_index,w
  5888     0128                     u3005:
  5889     0128  1803               	skipnc
  5890     0129  292B               	goto	u3001
  5891     012A  292C               	goto	u3000
  5892     012B                     u3001:
  5893     012B  2934               	goto	l220
  5894     012C                     u3000:
  5895     012C                     l2799:
  5896                           
  5897                           ;BLACK_BOX.c: 72:         {;BLACK_BOX.c: 73:             Event_index++;
  5898     012C  3001               	movlw	1
  5899     012D  1283               	bcf	3,5	;RP0=0, select bank0
  5900     012E  1303               	bcf	3,6	;RP1=0, select bank0
  5901     012F  07D5               	addwf	_Event_index,f
  5902     0130  1803               	skipnc
  5903     0131  0AD6               	incf	_Event_index+1,f
  5904     0132  3000               	movlw	0
  5905     0133  07D6               	addwf	_Event_index+1,f
  5906     0134                     l220:
  5907                           
  5908                           ;BLACK_BOX.c: 75:             event_count++;
  5909     0134  3001               	movlw	1
  5910     0135  1283               	bcf	3,5	;RP0=0, select bank0
  5911     0136  1303               	bcf	3,6	;RP1=0, select bank0
  5912     0137  07CD               	addwf	_event_count,f
  5913     0138  1803               	skipnc
  5914     0139  0ACE               	incf	_event_count+1,f
  5915     013A  3000               	movlw	0
  5916     013B  07CE               	addwf	_event_count+1,f
  5917     013C                     l2801:
  5918                           
  5919                           ;BLACK_BOX.c: 76:             store_events();
  5920     013C  120A  158A  25FE  120A  118A  	fcall	_store_events
  5921                           
  5922                           ;BLACK_BOX.c: 77:     }
  5923     0141  298B               	goto	l2827
  5924     0142                     l2803:
  5925     0142  303D               	movlw	61
  5926     0143  065E               	xorwf	_key,w
  5927     0144  1D03               	btfss	3,2
  5928     0145  2947               	goto	u3011
  5929     0146  2948               	goto	u3010
  5930     0147                     u3011:
  5931     0147  2966               	goto	l2815
  5932     0148                     u3010:
  5933     0148                     l2805:
  5934                           
  5935                           ;BLACK_BOX.c: 79:     {;BLACK_BOX.c: 80:         if(Event_index == 8)
  5936     0148  3008               	movlw	8
  5937     0149  0655               	xorwf	_Event_index,w
  5938     014A  0456               	iorwf	_Event_index+1,w
  5939     014B  1D03               	btfss	3,2
  5940     014C  294E               	goto	u3021
  5941     014D  294F               	goto	u3020
  5942     014E                     u3021:
  5943     014E  2950               	goto	l2809
  5944     014F                     u3020:
  5945     014F  291A               	goto	l2795
  5946     0150                     l2809:
  5947     0150  0856               	movf	_Event_index+1,w
  5948     0151  3A80               	xorlw	128
  5949     0152  00FF               	movwf	btemp+1
  5950     0153  3080               	movlw	128
  5951     0154  027F               	subwf	btemp+1,w
  5952     0155  1D03               	skipz
  5953     0156  2959               	goto	u3035
  5954     0157  3002               	movlw	2
  5955     0158  0255               	subwf	_Event_index,w
  5956     0159                     u3035:
  5957     0159  1C03               	skipc
  5958     015A  295C               	goto	u3031
  5959     015B  295D               	goto	u3030
  5960     015C                     u3031:
  5961     015C  2934               	goto	l220
  5962     015D                     u3030:
  5963     015D                     l2811:
  5964                           
  5965                           ;BLACK_BOX.c: 85:         {;BLACK_BOX.c: 86:             Event_index--;
  5966     015D  30FF               	movlw	255
  5967     015E  1283               	bcf	3,5	;RP0=0, select bank0
  5968     015F  1303               	bcf	3,6	;RP1=0, select bank0
  5969     0160  07D5               	addwf	_Event_index,f
  5970     0161  1803               	skipnc
  5971     0162  0AD6               	incf	_Event_index+1,f
  5972     0163  30FF               	movlw	255
  5973     0164  07D6               	addwf	_Event_index+1,f
  5974     0165  2934               	goto	l220
  5975     0166                     l2815:
  5976     0166  303B               	movlw	59
  5977     0167  065E               	xorwf	_key,w
  5978     0168  1D03               	btfss	3,2
  5979     0169  296B               	goto	u3041
  5980     016A  296C               	goto	u3040
  5981     016B                     u3041:
  5982     016B  2977               	goto	l2821
  5983     016C                     u3040:
  5984     016C                     l2817:
  5985                           
  5986                           ;BLACK_BOX.c: 92:     {;BLACK_BOX.c: 93:             event_count++;
  5987     016C  3001               	movlw	1
  5988     016D  07CD               	addwf	_event_count,f
  5989     016E  1803               	skipnc
  5990     016F  0ACE               	incf	_event_count+1,f
  5991     0170  3000               	movlw	0
  5992     0171  07CE               	addwf	_event_count+1,f
  5993                           
  5994                           ;BLACK_BOX.c: 94:             Event_index = 8;
  5995     0172  3008               	movlw	8
  5996     0173  00D5               	movwf	_Event_index
  5997     0174  3000               	movlw	0
  5998     0175  00D6               	movwf	_Event_index+1
  5999     0176  293C               	goto	l2801
  6000     0177                     l2821:
  6001     0177  3037               	movlw	55
  6002     0178  065E               	xorwf	_key,w
  6003     0179  1D03               	btfss	3,2
  6004     017A  297C               	goto	u3051
  6005     017B  297D               	goto	u3050
  6006     017C                     u3051:
  6007     017C  298B               	goto	l227
  6008     017D                     u3050:
  6009     017D                     l2823:
  6010                           
  6011                           ;BLACK_BOX.c: 98:     {;BLACK_BOX.c: 99:             clcd_write(0x01, 0);
  6012     017D  01F0               	clrf	clcd_write@mode
  6013     017E  3001               	movlw	1
  6014     017F  120A  158A  222E  120A  118A  	fcall	_clcd_write
  6015     0184                     l2825:
  6016                           
  6017                           ;BLACK_BOX.c: 100:             main_flag = MAIN_MENU;
  6018     0184  3001               	movlw	1
  6019     0185  1283               	bcf	3,5	;RP0=0, select bank0
  6020     0186  1303               	bcf	3,6	;RP1=0, select bank0
  6021     0187  00D7               	movwf	_main_flag
  6022     0188  3000               	movlw	0
  6023     0189  00D8               	movwf	_main_flag+1
  6024     018A  298B               	goto	l2827
  6025     018B                     l227:
  6026     018B                     l2827:
  6027                           
  6028                           ;BLACK_BOX.c: 103:             clcd_print(events[Event_index], (0xC0 + 9));
  6029     018B  3003               	movlw	3
  6030     018C  00F0               	movwf	___bmul@multiplicand
  6031     018D  1283               	bcf	3,5	;RP0=0, select bank0
  6032     018E  1303               	bcf	3,6	;RP1=0, select bank0
  6033     018F  0855               	movf	_Event_index,w
  6034     0190  160A  118A  2787  120A  118A  	fcall	___bmul
  6035     0195  3EA0               	addlw	(low (_events| 0))& (0+255)
  6036     0196  00F4               	movwf	clcd_print@str
  6037     0197  3000               	movlw	0
  6038     0198  00F5               	movwf	clcd_print@str+1
  6039     0199  30C9               	movlw	201
  6040     019A  00F6               	movwf	clcd_print@addr
  6041     019B  120A  158A  216B  120A  118A  	fcall	_clcd_print
  6042     01A0                     l2829:
  6043                           
  6044                           ;BLACK_BOX.c: 107:      adc_val = read_adc(0x00);
  6045     01A0  3000               	movlw	0
  6046     01A1  160A  118A  27E1  120A  118A  	fcall	_read_adc
  6047     01A6  0871               	movf	?_read_adc+1,w
  6048     01A7  1283               	bcf	3,5	;RP0=0, select bank0
  6049     01A8  1303               	bcf	3,6	;RP1=0, select bank0
  6050     01A9  00C5               	movwf	Dash_board@adc_val+1
  6051     01AA  0870               	movf	?_read_adc,w
  6052     01AB  00C4               	movwf	Dash_board@adc_val
  6053     01AC                     l2831:
  6054                           
  6055                           ;BLACK_BOX.c: 108:      speed = (adc_val / 10.33);
  6056     01AC  0844               	movf	Dash_board@adc_val,w
  6057     01AD  00F0               	movwf	___xxtofl@val
  6058     01AE  0845               	movf	Dash_board@adc_val+1,w
  6059     01AF  00F1               	movwf	___xxtofl@val+1
  6060     01B0  01F2               	clrf	___xxtofl@val+2
  6061     01B1  01F3               	clrf	___xxtofl@val+3
  6062     01B2  3000               	movlw	0
  6063     01B3  120A  158A  274C  120A  118A  	fcall	___xxtofl
  6064     01B8  0873               	movf	?___xxtofl+3,w
  6065     01B9  1283               	bcf	3,5	;RP0=0, select bank0
  6066     01BA  1303               	bcf	3,6	;RP1=0, select bank0
  6067     01BB  00A7               	movwf	___fldiv@b+3
  6068     01BC  0872               	movf	?___xxtofl+2,w
  6069     01BD  00A6               	movwf	___fldiv@b+2
  6070     01BE  0871               	movf	?___xxtofl+1,w
  6071     01BF  00A5               	movwf	___fldiv@b+1
  6072     01C0  0870               	movf	?___xxtofl,w
  6073     01C1  00A4               	movwf	___fldiv@b
  6074     01C2  3041               	movlw	65
  6075     01C3  00A3               	movwf	___fldiv@a+3
  6076     01C4  3025               	movlw	37
  6077     01C5  00A2               	movwf	___fldiv@a+2
  6078     01C6  3047               	movlw	71
  6079     01C7  00A1               	movwf	___fldiv@a+1
  6080     01C8  30AE               	movlw	174
  6081     01C9  00A0               	movwf	___fldiv@a
  6082     01CA  120A  118A  260F  120A  118A  	fcall	___fldiv
  6083     01CF  1283               	bcf	3,5	;RP0=0, select bank0
  6084     01D0  1303               	bcf	3,6	;RP1=0, select bank0
  6085     01D1  0823               	movf	?___fldiv+3,w
  6086     01D2  00BD               	movwf	___fltol@f1+3
  6087     01D3  0822               	movf	?___fldiv+2,w
  6088     01D4  00BC               	movwf	___fltol@f1+2
  6089     01D5  0821               	movf	?___fldiv+1,w
  6090     01D6  00BB               	movwf	___fltol@f1+1
  6091     01D7  0820               	movf	?___fldiv,w
  6092     01D8  00BA               	movwf	___fltol@f1
  6093     01D9  120A  158A  2588  120A  118A  	fcall	___fltol
  6094     01DE  1283               	bcf	3,5	;RP0=0, select bank0
  6095     01DF  1303               	bcf	3,6	;RP1=0, select bank0
  6096     01E0  083B               	movf	?___fltol+1,w
  6097     01E1  00D2               	movwf	_speed+1
  6098     01E2  083A               	movf	?___fltol,w
  6099     01E3  00D1               	movwf	_speed
  6100     01E4                     l2833:
  6101                           
  6102                           ;BLACK_BOX.c: 109:      if(speed < 99)
  6103     01E4  3000               	movlw	0
  6104     01E5  0252               	subwf	_speed+1,w
  6105     01E6  3063               	movlw	99
  6106     01E7  1903               	skipnz
  6107     01E8  0251               	subwf	_speed,w
  6108     01E9  1803               	skipnc
  6109     01EA  29EC               	goto	u3061
  6110     01EB  29ED               	goto	u3060
  6111     01EC                     u3061:
  6112     01EC  2A1B               	goto	l232
  6113     01ED                     u3060:
  6114     01ED                     l2835:
  6115                           
  6116                           ;BLACK_BOX.c: 110:      {;BLACK_BOX.c: 111:             clcd_putch(((speed % 10) + 48), 
      +                          (0xC0 + 15));
  6117     01ED  30CF               	movlw	207
  6118     01EE  00F7               	movwf	clcd_putch@addr
  6119     01EF  300A               	movlw	10
  6120     01F0  00F0               	movwf	___lwmod@divisor
  6121     01F1  3000               	movlw	0
  6122     01F2  00F1               	movwf	___lwmod@divisor+1
  6123     01F3  0852               	movf	_speed+1,w
  6124     01F4  00F3               	movwf	___lwmod@dividend+1
  6125     01F5  0851               	movf	_speed,w
  6126     01F6  00F2               	movwf	___lwmod@dividend
  6127     01F7  120A  158A  229B  120A  118A  	fcall	___lwmod
  6128     01FC  0870               	movf	?___lwmod,w
  6129     01FD  3E30               	addlw	48
  6130     01FE  160A  118A  2776  120A  118A  	fcall	_clcd_putch
  6131                           
  6132                           ;BLACK_BOX.c: 112:             clcd_putch(((speed / 10) + 48), (0xC0 + 14));
  6133     0203  30CE               	movlw	206
  6134     0204  00F7               	movwf	clcd_putch@addr
  6135     0205  300A               	movlw	10
  6136     0206  00F0               	movwf	___lwdiv@divisor
  6137     0207  3000               	movlw	0
  6138     0208  00F1               	movwf	___lwdiv@divisor+1
  6139     0209  1283               	bcf	3,5	;RP0=0, select bank0
  6140     020A  1303               	bcf	3,6	;RP1=0, select bank0
  6141     020B  0852               	movf	_speed+1,w
  6142     020C  00F3               	movwf	___lwdiv@dividend+1
  6143     020D  0851               	movf	_speed,w
  6144     020E  00F2               	movwf	___lwdiv@dividend
  6145     020F  120A  158A  22D3  120A  118A  	fcall	___lwdiv
  6146     0214  0870               	movf	?___lwdiv,w
  6147     0215  3E30               	addlw	48
  6148     0216  160A  118A  2776  120A  118A  	fcall	_clcd_putch
  6149     021B                     l232:
  6150     021B  0008               	return
  6151     021C                     __end_of_Dash_board:
  6152                           
  6153                           	psect	text28
  6154     0DFE                     __ptext28:	
  6155 ;; *************** function _store_events *****************
  6156 ;; Defined at:
  6157 ;;		line 36 in file "BLACK_BOX.c"
  6158 ;; Parameters:    Size  Location     Type
  6159 ;;		None
  6160 ;; Auto vars:     Size  Location     Type
  6161 ;;  i               2   11[COMMON] int 
  6162 ;; Return value:  Size  Location     Type
  6163 ;;                  1    wreg      void 
  6164 ;; Registers used:
  6165 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6166 ;; Tracked objects:
  6167 ;;		On entry : 0/0
  6168 ;;		On exit  : 0/0
  6169 ;;		Unchanged: 0/0
  6170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6171 ;;      Params:         0       0       0       0       0
  6172 ;;      Locals:         2       0       0       0       0
  6173 ;;      Temps:          0       0       0       0       0
  6174 ;;      Totals:         2       0       0       0       0
  6175 ;;Total ram usage:        2 bytes
  6176 ;; Hardware stack levels used: 1
  6177 ;; Hardware stack levels required when called: 3
  6178 ;; This function calls:
  6179 ;;		___bmul
  6180 ;;		___lwdiv
  6181 ;;		___lwmod
  6182 ;;		_write_ext_eeprom
  6183 ;; This function is called by:
  6184 ;;		_Dash_board
  6185 ;; This function uses a non-reentrant model
  6186 ;;
  6187                           
  6188     0DFE                     _store_events:	
  6189                           ;psect for function _store_events
  6190                           
  6191     0DFE                     l2499:	
  6192                           ;incstack = 0
  6193                           ; Regs used in _store_events: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6194                           
  6195                           
  6196                           ;BLACK_BOX.c: 38:     if(ADDR == 120)
  6197     0DFE  3078               	movlw	120
  6198     0DFF  1283               	bcf	3,5	;RP0=0, select bank0
  6199     0E00  1303               	bcf	3,6	;RP1=0, select bank0
  6200     0E01  065D               	xorwf	_ADDR,w
  6201     0E02  1D03               	btfss	3,2
  6202     0E03  2E05               	goto	u2381
  6203     0E04  2E06               	goto	u2380
  6204     0E05                     u2381:
  6205     0E05  2E11               	goto	l212
  6206     0E06                     u2380:
  6207     0E06                     l2501:
  6208                           
  6209                           ;BLACK_BOX.c: 39:     {;BLACK_BOX.c: 40:         view++;
  6210     0E06  3001               	movlw	1
  6211     0E07  07CB               	addwf	_view,f
  6212     0E08  1803               	skipnc
  6213     0E09  0ACC               	incf	_view+1,f
  6214     0E0A  3000               	movlw	0
  6215     0E0B  07CC               	addwf	_view+1,f
  6216     0E0C                     l2503:
  6217                           
  6218                           ;BLACK_BOX.c: 41:         ADDR = 0x00;
  6219     0E0C  01DD               	clrf	_ADDR
  6220     0E0D                     l2505:
  6221                           
  6222                           ;BLACK_BOX.c: 42:         event_count = 10;
  6223     0E0D  300A               	movlw	10
  6224     0E0E  00CD               	movwf	_event_count
  6225     0E0F  3000               	movlw	0
  6226     0E10  00CE               	movwf	_event_count+1
  6227     0E11                     l212:	
  6228                           ;BLACK_BOX.c: 43:     }
  6229                           
  6230                           
  6231                           ;BLACK_BOX.c: 44:     for(int i=0; i < 8; i++)
  6232     0E11  01FB               	clrf	store_events@i
  6233     0E12  01FC               	clrf	store_events@i+1
  6234     0E13                     l2511:
  6235                           
  6236                           ;BLACK_BOX.c: 45:     {;BLACK_BOX.c: 46:         write_ext_eeprom(ADDR++, time[i]);
  6237     0E13  087B               	movf	store_events@i,w
  6238     0E14  3E5F               	addlw	(low (_time| 0))& (0+255)
  6239     0E15  0084               	movwf	4
  6240     0E16  1383               	bcf	3,7	;select IRP bank0
  6241     0E17  0800               	movf	0,w
  6242     0E18  00F7               	movwf	write_ext_eeprom@data
  6243     0E19  1283               	bcf	3,5	;RP0=0, select bank0
  6244     0E1A  1303               	bcf	3,6	;RP1=0, select bank0
  6245     0E1B  085D               	movf	_ADDR,w
  6246     0E1C  120A  158A  209A  120A  158A  	fcall	_write_ext_eeprom
  6247     0E21                     l2513:
  6248     0E21  3001               	movlw	1
  6249     0E22  1283               	bcf	3,5	;RP0=0, select bank0
  6250     0E23  1303               	bcf	3,6	;RP1=0, select bank0
  6251     0E24  07DD               	addwf	_ADDR,f
  6252     0E25                     l2515:
  6253                           
  6254                           ;BLACK_BOX.c: 47:     }
  6255     0E25  3001               	movlw	1
  6256     0E26  07FB               	addwf	store_events@i,f
  6257     0E27  1803               	skipnc
  6258     0E28  0AFC               	incf	store_events@i+1,f
  6259     0E29  3000               	movlw	0
  6260     0E2A  07FC               	addwf	store_events@i+1,f
  6261     0E2B                     l2517:
  6262     0E2B  087C               	movf	store_events@i+1,w
  6263     0E2C  3A80               	xorlw	128
  6264     0E2D  00FF               	movwf	btemp+1
  6265     0E2E  3080               	movlw	128
  6266     0E2F  027F               	subwf	btemp+1,w
  6267     0E30  1D03               	skipz
  6268     0E31  2E34               	goto	u2395
  6269     0E32  3008               	movlw	8
  6270     0E33  027B               	subwf	store_events@i,w
  6271     0E34                     u2395:
  6272     0E34  1C03               	skipc
  6273     0E35  2E37               	goto	u2391
  6274     0E36  2E38               	goto	u2390
  6275     0E37                     u2391:
  6276     0E37  2E13               	goto	l2511
  6277     0E38                     u2390:
  6278     0E38                     l2519:
  6279                           
  6280                           ;BLACK_BOX.c: 48:     write_ext_eeprom(ADDR++, events[Event_index][0]);
  6281     0E38  3003               	movlw	3
  6282     0E39  00F0               	movwf	___bmul@multiplicand
  6283     0E3A  1283               	bcf	3,5	;RP0=0, select bank0
  6284     0E3B  1303               	bcf	3,6	;RP1=0, select bank0
  6285     0E3C  0855               	movf	_Event_index,w
  6286     0E3D  160A  118A  2787  120A  158A  	fcall	___bmul
  6287     0E42  3EA0               	addlw	(low (_events| 0))& (0+255)
  6288     0E43  0084               	movwf	4
  6289     0E44  1383               	bcf	3,7	;select IRP bank1
  6290     0E45  0800               	movf	0,w
  6291     0E46  00F7               	movwf	write_ext_eeprom@data
  6292     0E47  1283               	bcf	3,5	;RP0=0, select bank0
  6293     0E48  1303               	bcf	3,6	;RP1=0, select bank0
  6294     0E49  085D               	movf	_ADDR,w
  6295     0E4A  120A  158A  209A  120A  158A  	fcall	_write_ext_eeprom
  6296     0E4F                     l2521:
  6297     0E4F  3001               	movlw	1
  6298     0E50  1283               	bcf	3,5	;RP0=0, select bank0
  6299     0E51  1303               	bcf	3,6	;RP1=0, select bank0
  6300     0E52  07DD               	addwf	_ADDR,f
  6301     0E53                     l2523:
  6302                           
  6303                           ;BLACK_BOX.c: 49:     write_ext_eeprom(ADDR++,events[Event_index][1]);
  6304     0E53  3003               	movlw	3
  6305     0E54  00F0               	movwf	___bmul@multiplicand
  6306     0E55  0855               	movf	_Event_index,w
  6307     0E56  160A  118A  2787  120A  158A  	fcall	___bmul
  6308     0E5B  3EA1               	addlw	(low ((_events| 0+1)))& (0+255)
  6309     0E5C  0084               	movwf	4
  6310     0E5D  1383               	bcf	3,7	;select IRP bank1
  6311     0E5E  0800               	movf	0,w
  6312     0E5F  00F7               	movwf	write_ext_eeprom@data
  6313     0E60  1283               	bcf	3,5	;RP0=0, select bank0
  6314     0E61  1303               	bcf	3,6	;RP1=0, select bank0
  6315     0E62  085D               	movf	_ADDR,w
  6316     0E63  120A  158A  209A  120A  158A  	fcall	_write_ext_eeprom
  6317     0E68  3001               	movlw	1
  6318     0E69  1283               	bcf	3,5	;RP0=0, select bank0
  6319     0E6A  1303               	bcf	3,6	;RP1=0, select bank0
  6320     0E6B  07DD               	addwf	_ADDR,f
  6321     0E6C                     l2525:
  6322                           
  6323                           ;BLACK_BOX.c: 51:     write_ext_eeprom(ADDR++,((speed / 10) + 48));
  6324     0E6C  300A               	movlw	10
  6325     0E6D  00F0               	movwf	___lwdiv@divisor
  6326     0E6E  3000               	movlw	0
  6327     0E6F  00F1               	movwf	___lwdiv@divisor+1
  6328     0E70  0852               	movf	_speed+1,w
  6329     0E71  00F3               	movwf	___lwdiv@dividend+1
  6330     0E72  0851               	movf	_speed,w
  6331     0E73  00F2               	movwf	___lwdiv@dividend
  6332     0E74  120A  158A  22D3  120A  158A  	fcall	___lwdiv
  6333     0E79  0870               	movf	?___lwdiv,w
  6334     0E7A  3E30               	addlw	48
  6335     0E7B  00F7               	movwf	write_ext_eeprom@data
  6336     0E7C  1283               	bcf	3,5	;RP0=0, select bank0
  6337     0E7D  1303               	bcf	3,6	;RP1=0, select bank0
  6338     0E7E  085D               	movf	_ADDR,w
  6339     0E7F  120A  158A  209A  120A  158A  	fcall	_write_ext_eeprom
  6340     0E84                     l2527:
  6341     0E84  3001               	movlw	1
  6342     0E85  1283               	bcf	3,5	;RP0=0, select bank0
  6343     0E86  1303               	bcf	3,6	;RP1=0, select bank0
  6344     0E87  07DD               	addwf	_ADDR,f
  6345                           
  6346                           ;BLACK_BOX.c: 52:     write_ext_eeprom(ADDR++,((speed % 10) + 48));
  6347     0E88  300A               	movlw	10
  6348     0E89  00F0               	movwf	___lwmod@divisor
  6349     0E8A  3000               	movlw	0
  6350     0E8B  00F1               	movwf	___lwmod@divisor+1
  6351     0E8C  0852               	movf	_speed+1,w
  6352     0E8D  00F3               	movwf	___lwmod@dividend+1
  6353     0E8E  0851               	movf	_speed,w
  6354     0E8F  00F2               	movwf	___lwmod@dividend
  6355     0E90  120A  158A  229B  120A  158A  	fcall	___lwmod
  6356     0E95  0870               	movf	?___lwmod,w
  6357     0E96  3E30               	addlw	48
  6358     0E97  00F7               	movwf	write_ext_eeprom@data
  6359     0E98  1283               	bcf	3,5	;RP0=0, select bank0
  6360     0E99  1303               	bcf	3,6	;RP1=0, select bank0
  6361     0E9A  085D               	movf	_ADDR,w
  6362     0E9B  120A  158A  209A  120A  158A  	fcall	_write_ext_eeprom
  6363     0EA0                     l2529:
  6364     0EA0  3001               	movlw	1
  6365     0EA1  1283               	bcf	3,5	;RP0=0, select bank0
  6366     0EA2  1303               	bcf	3,6	;RP1=0, select bank0
  6367     0EA3  07DD               	addwf	_ADDR,f
  6368     0EA4                     l215:
  6369     0EA4  0008               	return
  6370     0EA5                     __end_of_store_events:
  6371                           
  6372                           	psect	text29
  6373     089A                     __ptext29:	
  6374 ;; *************** function _write_ext_eeprom *****************
  6375 ;; Defined at:
  6376 ;;		line 21 in file "external_eeprom.c"
  6377 ;; Parameters:    Size  Location     Type
  6378 ;;  addr            1    wreg     unsigned char 
  6379 ;;  data            1    7[COMMON] unsigned char 
  6380 ;; Auto vars:     Size  Location     Type
  6381 ;;  addr            1   10[COMMON] unsigned char 
  6382 ;; Return value:  Size  Location     Type
  6383 ;;                  1    wreg      void 
  6384 ;; Registers used:
  6385 ;;		wreg, status,2, status,0, pclath, cstack
  6386 ;; Tracked objects:
  6387 ;;		On entry : 0/0
  6388 ;;		On exit  : 0/0
  6389 ;;		Unchanged: 0/0
  6390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6391 ;;      Params:         1       0       0       0       0
  6392 ;;      Locals:         1       0       0       0       0
  6393 ;;      Temps:          2       0       0       0       0
  6394 ;;      Totals:         4       0       0       0       0
  6395 ;;Total ram usage:        4 bytes
  6396 ;; Hardware stack levels used: 1
  6397 ;; Hardware stack levels required when called: 2
  6398 ;; This function calls:
  6399 ;;		_i2c1_start
  6400 ;;		_i2c1_stop
  6401 ;;		_i2c1_write
  6402 ;; This function is called by:
  6403 ;;		_store_events
  6404 ;; This function uses a non-reentrant model
  6405 ;;
  6406                           
  6407     089A                     _write_ext_eeprom:	
  6408                           ;psect for function _write_ext_eeprom
  6409                           
  6410                           
  6411                           ;incstack = 0
  6412                           ; Regs used in _write_ext_eeprom: [wreg+status,2+status,0+pclath+cstack]
  6413                           ;write_ext_eeprom@addr stored from wreg
  6414     089A  00FA               	movwf	write_ext_eeprom@addr
  6415     089B                     l2233:
  6416                           
  6417                           ;external_eeprom.c: 21: void write_ext_eeprom(unsigned char addr, unsigned char data);ex
      +                          ternal_eeprom.c: 22: {;external_eeprom.c: 23:     i2c1_start();
  6418     089B  160A  118A  2715  120A  158A  	fcall	_i2c1_start
  6419                           
  6420                           ;external_eeprom.c: 24:     i2c1_write(0b10100000);
  6421     08A0  30A0               	movlw	160
  6422     08A1  160A  118A  273B  120A  158A  	fcall	_i2c1_write
  6423                           
  6424                           ;external_eeprom.c: 25:     i2c1_write(addr);
  6425     08A6  087A               	movf	write_ext_eeprom@addr,w
  6426     08A7  160A  118A  273B  120A  158A  	fcall	_i2c1_write
  6427                           
  6428                           ;external_eeprom.c: 26:     i2c1_write(data);
  6429     08AC  0877               	movf	write_ext_eeprom@data,w
  6430     08AD  160A  118A  273B  120A  158A  	fcall	_i2c1_write
  6431                           
  6432                           ;external_eeprom.c: 27:     i2c1_stop();
  6433     08B2  160A  118A  271E  120A  158A  	fcall	_i2c1_stop
  6434     08B7                     l2235:
  6435                           
  6436                           ;external_eeprom.c: 28:     _delay((unsigned long)((3000)*(20000000/4000000.0)));
  6437     08B7  3014               	movlw	20
  6438     08B8  00F9               	movwf	??_write_ext_eeprom+1
  6439     08B9  3079               	movlw	121
  6440     08BA  00F8               	movwf	??_write_ext_eeprom
  6441     08BB                     u3627:
  6442     08BB  0BF8               	decfsz	??_write_ext_eeprom,f
  6443     08BC  28BB               	goto	u3627
  6444     08BD  0BF9               	decfsz	??_write_ext_eeprom+1,f
  6445     08BE  28BB               	goto	u3627
  6446     08BF  28C0               	nop2
  6447     08C0                     l414:
  6448     08C0  0008               	return
  6449     08C1                     __end_of_write_ext_eeprom:
  6450                           
  6451                           	psect	text30
  6452     173B                     __ptext30:	
  6453 ;; *************** function _i2c1_write *****************
  6454 ;; Defined at:
  6455 ;;		line 66 in file "i2c2.c"
  6456 ;; Parameters:    Size  Location     Type
  6457 ;;  data            1    wreg     unsigned char 
  6458 ;; Auto vars:     Size  Location     Type
  6459 ;;  data            1    0[COMMON] unsigned char 
  6460 ;; Return value:  Size  Location     Type
  6461 ;;                  2  400[None  ] int 
  6462 ;; Registers used:
  6463 ;;		wreg, status,2, status,0, pclath, cstack
  6464 ;; Tracked objects:
  6465 ;;		On entry : 0/0
  6466 ;;		On exit  : 0/0
  6467 ;;		Unchanged: 0/0
  6468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6469 ;;      Params:         0       0       0       0       0
  6470 ;;      Locals:         1       0       0       0       0
  6471 ;;      Temps:          0       0       0       0       0
  6472 ;;      Totals:         1       0       0       0       0
  6473 ;;Total ram usage:        1 bytes
  6474 ;; Hardware stack levels used: 1
  6475 ;; Hardware stack levels required when called: 1
  6476 ;; This function calls:
  6477 ;;		_i2c1_wait_for_idle
  6478 ;; This function is called by:
  6479 ;;		_read_ext_eeprom
  6480 ;;		_write_ext_eeprom
  6481 ;; This function uses a non-reentrant model
  6482 ;;
  6483                           
  6484     173B                     _i2c1_write:	
  6485                           ;psect for function _i2c1_write
  6486                           
  6487                           
  6488                           ;incstack = 0
  6489                           ; Regs used in _i2c1_write: [wreg+status,2+status,0+pclath+cstack]
  6490                           ;i2c1_write@data stored from wreg
  6491     173B  00F0               	movwf	i2c1_write@data
  6492     173C                     l2181:
  6493                           
  6494                           ;i2c2.c: 66: int i2c1_write(unsigned char data);i2c2.c: 67: {;i2c2.c: 68:     i2c1_wait_
      +                          for_idle();
  6495     173C  160A  118A  2769  160A  118A  	fcall	_i2c1_wait_for_idle
  6496     1741                     l2183:
  6497                           
  6498                           ;i2c2.c: 69:     SSPBUF = data;
  6499     1741  0870               	movf	i2c1_write@data,w
  6500     1742  1283               	bcf	3,5	;RP0=0, select bank0
  6501     1743  1303               	bcf	3,6	;RP1=0, select bank0
  6502     1744  0093               	movwf	19	;volatile
  6503     1745                     l2185:
  6504     1745                     l499:	
  6505                           ;i2c2.c: 71:     return !ACKSTAT;;	Return value of _i2c1_write is never used
  6506                           
  6507     1745  0008               	return
  6508     1746                     __end_of_i2c1_write:
  6509                           
  6510                           	psect	text31
  6511     171E                     __ptext31:	
  6512 ;; *************** function _i2c1_stop *****************
  6513 ;; Defined at:
  6514 ;;		line 36 in file "i2c2.c"
  6515 ;; Parameters:    Size  Location     Type
  6516 ;;		None
  6517 ;; Auto vars:     Size  Location     Type
  6518 ;;		None
  6519 ;; Return value:  Size  Location     Type
  6520 ;;                  1    wreg      void 
  6521 ;; Registers used:
  6522 ;;		wreg, status,2, status,0, pclath, cstack
  6523 ;; Tracked objects:
  6524 ;;		On entry : 0/0
  6525 ;;		On exit  : 0/0
  6526 ;;		Unchanged: 0/0
  6527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6528 ;;      Params:         0       0       0       0       0
  6529 ;;      Locals:         0       0       0       0       0
  6530 ;;      Temps:          0       0       0       0       0
  6531 ;;      Totals:         0       0       0       0       0
  6532 ;;Total ram usage:        0 bytes
  6533 ;; Hardware stack levels used: 1
  6534 ;; Hardware stack levels required when called: 1
  6535 ;; This function calls:
  6536 ;;		_i2c1_wait_for_idle
  6537 ;; This function is called by:
  6538 ;;		_read_ext_eeprom
  6539 ;;		_write_ext_eeprom
  6540 ;; This function uses a non-reentrant model
  6541 ;;
  6542                           
  6543     171E                     _i2c1_stop:	
  6544                           ;psect for function _i2c1_stop
  6545                           
  6546     171E                     l2189:	
  6547                           ;incstack = 0
  6548                           ; Regs used in _i2c1_stop: [wreg+status,2+status,0+pclath+cstack]
  6549                           
  6550                           
  6551                           ;i2c2.c: 38:     i2c1_wait_for_idle();
  6552     171E  160A  118A  2769  160A  118A  	fcall	_i2c1_wait_for_idle
  6553     1723                     l2191:
  6554                           
  6555                           ;i2c2.c: 39:     PEN = 1;
  6556     1723  1683               	bsf	3,5	;RP0=1, select bank1
  6557     1724  1303               	bcf	3,6	;RP1=0, select bank1
  6558     1725  1511               	bsf	17,2	;volatile
  6559     1726                     l491:
  6560     1726  0008               	return
  6561     1727                     __end_of_i2c1_stop:
  6562                           
  6563                           	psect	text32
  6564     1715                     __ptext32:	
  6565 ;; *************** function _i2c1_start *****************
  6566 ;; Defined at:
  6567 ;;		line 23 in file "i2c2.c"
  6568 ;; Parameters:    Size  Location     Type
  6569 ;;		None
  6570 ;; Auto vars:     Size  Location     Type
  6571 ;;		None
  6572 ;; Return value:  Size  Location     Type
  6573 ;;                  1    wreg      void 
  6574 ;; Registers used:
  6575 ;;		wreg, status,2, status,0, pclath, cstack
  6576 ;; Tracked objects:
  6577 ;;		On entry : 0/0
  6578 ;;		On exit  : 0/0
  6579 ;;		Unchanged: 0/0
  6580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6581 ;;      Params:         0       0       0       0       0
  6582 ;;      Locals:         0       0       0       0       0
  6583 ;;      Temps:          0       0       0       0       0
  6584 ;;      Totals:         0       0       0       0       0
  6585 ;;Total ram usage:        0 bytes
  6586 ;; Hardware stack levels used: 1
  6587 ;; Hardware stack levels required when called: 1
  6588 ;; This function calls:
  6589 ;;		_i2c1_wait_for_idle
  6590 ;; This function is called by:
  6591 ;;		_read_ext_eeprom
  6592 ;;		_write_ext_eeprom
  6593 ;; This function uses a non-reentrant model
  6594 ;;
  6595                           
  6596     1715                     _i2c1_start:	
  6597                           ;psect for function _i2c1_start
  6598                           
  6599     1715                     l2177:	
  6600                           ;incstack = 0
  6601                           ; Regs used in _i2c1_start: [wreg+status,2+status,0+pclath+cstack]
  6602                           
  6603                           
  6604                           ;i2c2.c: 25:     i2c1_wait_for_idle();
  6605     1715  160A  118A  2769  160A  118A  	fcall	_i2c1_wait_for_idle
  6606     171A                     l2179:
  6607                           
  6608                           ;i2c2.c: 26:     SEN = 1;
  6609     171A  1683               	bsf	3,5	;RP0=1, select bank1
  6610     171B  1303               	bcf	3,6	;RP1=0, select bank1
  6611     171C  1411               	bsf	17,0	;volatile
  6612     171D                     l485:
  6613     171D  0008               	return
  6614     171E                     __end_of_i2c1_start:
  6615                           
  6616                           	psect	text33
  6617     1769                     __ptext33:	
  6618 ;; *************** function _i2c1_wait_for_idle *****************
  6619 ;; Defined at:
  6620 ;;		line 16 in file "i2c2.c"
  6621 ;; Parameters:    Size  Location     Type
  6622 ;;		None
  6623 ;; Auto vars:     Size  Location     Type
  6624 ;;		None
  6625 ;; Return value:  Size  Location     Type
  6626 ;;                  1    wreg      void 
  6627 ;; Registers used:
  6628 ;;		wreg, status,2
  6629 ;; Tracked objects:
  6630 ;;		On entry : 0/0
  6631 ;;		On exit  : 0/0
  6632 ;;		Unchanged: 0/0
  6633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6634 ;;      Params:         0       0       0       0       0
  6635 ;;      Locals:         0       0       0       0       0
  6636 ;;      Temps:          0       0       0       0       0
  6637 ;;      Totals:         0       0       0       0       0
  6638 ;;Total ram usage:        0 bytes
  6639 ;; Hardware stack levels used: 1
  6640 ;; This function calls:
  6641 ;;		Nothing
  6642 ;; This function is called by:
  6643 ;;		_i2c1_start
  6644 ;;		_i2c1_rep_start
  6645 ;;		_i2c1_stop
  6646 ;;		_i2c1_read
  6647 ;;		_i2c1_write
  6648 ;; This function uses a non-reentrant model
  6649 ;;
  6650                           
  6651     1769                     _i2c1_wait_for_idle:	
  6652                           ;psect for function _i2c1_wait_for_idle
  6653                           
  6654     1769                     l2119:	
  6655                           ;incstack = 0
  6656                           ; Regs used in _i2c1_wait_for_idle: [wreg+status,2]
  6657                           
  6658     1769                     l479:	
  6659                           ;i2c2.c: 19:     while (R_nW || (SSPCON2 & 0x1F));
  6660                           
  6661     1769  1683               	bsf	3,5	;RP0=1, select bank1
  6662     176A  1303               	bcf	3,6	;RP1=0, select bank1
  6663     176B  1914               	btfsc	20,2	;volatile
  6664     176C  2F6E               	goto	u1781
  6665     176D  2F6F               	goto	u1780
  6666     176E                     u1781:
  6667     176E  2F69               	goto	l479
  6668     176F                     u1780:
  6669     176F                     l2121:
  6670     176F  0811               	movf	17,w	;volatile
  6671     1770  391F               	andlw	31
  6672     1771  1D03               	btfss	3,2
  6673     1772  2F74               	goto	u1791
  6674     1773  2F75               	goto	u1790
  6675     1774                     u1791:
  6676     1774  2F69               	goto	l479
  6677     1775                     u1790:
  6678     1775                     l482:
  6679     1775  0008               	return
  6680     1776                     __end_of_i2c1_wait_for_idle:
  6681                           
  6682                           	psect	text34
  6683     0A9B                     __ptext34:	
  6684 ;; *************** function ___lwmod *****************
  6685 ;; Defined at:
  6686 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwmod.c"
  6687 ;; Parameters:    Size  Location     Type
  6688 ;;  divisor         2    0[COMMON] unsigned int 
  6689 ;;  dividend        2    2[COMMON] unsigned int 
  6690 ;; Auto vars:     Size  Location     Type
  6691 ;;  counter         1    4[COMMON] unsigned char 
  6692 ;; Return value:  Size  Location     Type
  6693 ;;                  2    0[COMMON] unsigned int 
  6694 ;; Registers used:
  6695 ;;		wreg, status,2, status,0
  6696 ;; Tracked objects:
  6697 ;;		On entry : 0/0
  6698 ;;		On exit  : 0/0
  6699 ;;		Unchanged: 0/0
  6700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6701 ;;      Params:         4       0       0       0       0
  6702 ;;      Locals:         1       0       0       0       0
  6703 ;;      Temps:          0       0       0       0       0
  6704 ;;      Totals:         5       0       0       0       0
  6705 ;;Total ram usage:        5 bytes
  6706 ;; Hardware stack levels used: 1
  6707 ;; This function calls:
  6708 ;;		Nothing
  6709 ;; This function is called by:
  6710 ;;		_store_events
  6711 ;;		_Dash_board
  6712 ;; This function uses a non-reentrant model
  6713 ;;
  6714                           
  6715     0A9B                     ___lwmod:	
  6716                           ;psect for function ___lwmod
  6717                           
  6718     0A9B                     l2403:	
  6719                           ;incstack = 0
  6720                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6721                           
  6722     0A9B  0870               	movf	___lwmod@divisor,w
  6723     0A9C  0471               	iorwf	___lwmod@divisor+1,w
  6724     0A9D  1903               	btfsc	3,2
  6725     0A9E  2AA0               	goto	u2221
  6726     0A9F  2AA1               	goto	u2220
  6727     0AA0                     u2221:
  6728     0AA0  2ACE               	goto	l2421
  6729     0AA1                     u2220:
  6730     0AA1                     l2405:
  6731     0AA1  3001               	movlw	1
  6732     0AA2  00F4               	movwf	___lwmod@counter
  6733     0AA3  2AAD               	goto	l2411
  6734     0AA4                     l2407:
  6735     0AA4  3001               	movlw	1
  6736     0AA5                     u2235:
  6737     0AA5  1003               	clrc
  6738     0AA6  0DF0               	rlf	___lwmod@divisor,f
  6739     0AA7  0DF1               	rlf	___lwmod@divisor+1,f
  6740     0AA8  3EFF               	addlw	-1
  6741     0AA9  1D03               	skipz
  6742     0AAA  2AA5               	goto	u2235
  6743     0AAB                     l2409:
  6744     0AAB  3001               	movlw	1
  6745     0AAC  07F4               	addwf	___lwmod@counter,f
  6746     0AAD                     l2411:
  6747     0AAD  1FF1               	btfss	___lwmod@divisor+1,7
  6748     0AAE  2AB0               	goto	u2241
  6749     0AAF  2AB1               	goto	u2240
  6750     0AB0                     u2241:
  6751     0AB0  2AA4               	goto	l2407
  6752     0AB1                     u2240:
  6753     0AB1                     l2413:
  6754     0AB1  0871               	movf	___lwmod@divisor+1,w
  6755     0AB2  0273               	subwf	___lwmod@dividend+1,w
  6756     0AB3  1D03               	skipz
  6757     0AB4  2AB7               	goto	u2255
  6758     0AB5  0870               	movf	___lwmod@divisor,w
  6759     0AB6  0272               	subwf	___lwmod@dividend,w
  6760     0AB7                     u2255:
  6761     0AB7  1C03               	skipc
  6762     0AB8  2ABA               	goto	u2251
  6763     0AB9  2ABB               	goto	u2250
  6764     0ABA                     u2251:
  6765     0ABA  2AC1               	goto	l2417
  6766     0ABB                     u2250:
  6767     0ABB                     l2415:
  6768     0ABB  0870               	movf	___lwmod@divisor,w
  6769     0ABC  02F2               	subwf	___lwmod@dividend,f
  6770     0ABD  0871               	movf	___lwmod@divisor+1,w
  6771     0ABE  1C03               	skipc
  6772     0ABF  03F3               	decf	___lwmod@dividend+1,f
  6773     0AC0  02F3               	subwf	___lwmod@dividend+1,f
  6774     0AC1                     l2417:
  6775     0AC1  3001               	movlw	1
  6776     0AC2                     u2265:
  6777     0AC2  1003               	clrc
  6778     0AC3  0CF1               	rrf	___lwmod@divisor+1,f
  6779     0AC4  0CF0               	rrf	___lwmod@divisor,f
  6780     0AC5  3EFF               	addlw	-1
  6781     0AC6  1D03               	skipz
  6782     0AC7  2AC2               	goto	u2265
  6783     0AC8                     l2419:
  6784     0AC8  3001               	movlw	1
  6785     0AC9  02F4               	subwf	___lwmod@counter,f
  6786     0ACA  1D03               	btfss	3,2
  6787     0ACB  2ACD               	goto	u2271
  6788     0ACC  2ACE               	goto	u2270
  6789     0ACD                     u2271:
  6790     0ACD  2AB1               	goto	l2413
  6791     0ACE                     u2270:
  6792     0ACE                     l2421:
  6793     0ACE  0873               	movf	___lwmod@dividend+1,w
  6794     0ACF  00F1               	movwf	?___lwmod+1
  6795     0AD0  0872               	movf	___lwmod@dividend,w
  6796     0AD1  00F0               	movwf	?___lwmod
  6797     0AD2                     l875:
  6798     0AD2  0008               	return
  6799     0AD3                     __end_of___lwmod:
  6800                           
  6801                           	psect	text35
  6802     0AD3                     __ptext35:	
  6803 ;; *************** function ___lwdiv *****************
  6804 ;; Defined at:
  6805 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
  6806 ;; Parameters:    Size  Location     Type
  6807 ;;  divisor         2    0[COMMON] unsigned int 
  6808 ;;  dividend        2    2[COMMON] unsigned int 
  6809 ;; Auto vars:     Size  Location     Type
  6810 ;;  quotient        2    4[COMMON] unsigned int 
  6811 ;;  counter         1    6[COMMON] unsigned char 
  6812 ;; Return value:  Size  Location     Type
  6813 ;;                  2    0[COMMON] unsigned int 
  6814 ;; Registers used:
  6815 ;;		wreg, status,2, status,0
  6816 ;; Tracked objects:
  6817 ;;		On entry : 0/0
  6818 ;;		On exit  : 0/0
  6819 ;;		Unchanged: 0/0
  6820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6821 ;;      Params:         4       0       0       0       0
  6822 ;;      Locals:         3       0       0       0       0
  6823 ;;      Temps:          0       0       0       0       0
  6824 ;;      Totals:         7       0       0       0       0
  6825 ;;Total ram usage:        7 bytes
  6826 ;; Hardware stack levels used: 1
  6827 ;; This function calls:
  6828 ;;		Nothing
  6829 ;; This function is called by:
  6830 ;;		_store_events
  6831 ;;		_Dash_board
  6832 ;; This function uses a non-reentrant model
  6833 ;;
  6834                           
  6835     0AD3                     ___lwdiv:	
  6836                           ;psect for function ___lwdiv
  6837                           
  6838     0AD3                     l2377:	
  6839                           ;incstack = 0
  6840                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6841                           
  6842     0AD3  01F4               	clrf	___lwdiv@quotient
  6843     0AD4  01F5               	clrf	___lwdiv@quotient+1
  6844     0AD5                     l2379:
  6845     0AD5  0870               	movf	___lwdiv@divisor,w
  6846     0AD6  0471               	iorwf	___lwdiv@divisor+1,w
  6847     0AD7  1903               	btfsc	3,2
  6848     0AD8  2ADA               	goto	u2151
  6849     0AD9  2ADB               	goto	u2150
  6850     0ADA                     u2151:
  6851     0ADA  2B10               	goto	l2399
  6852     0ADB                     u2150:
  6853     0ADB                     l2381:
  6854     0ADB  3001               	movlw	1
  6855     0ADC  00F6               	movwf	___lwdiv@counter
  6856     0ADD  2AE7               	goto	l2387
  6857     0ADE                     l2383:
  6858     0ADE  3001               	movlw	1
  6859     0ADF                     u2165:
  6860     0ADF  1003               	clrc
  6861     0AE0  0DF0               	rlf	___lwdiv@divisor,f
  6862     0AE1  0DF1               	rlf	___lwdiv@divisor+1,f
  6863     0AE2  3EFF               	addlw	-1
  6864     0AE3  1D03               	skipz
  6865     0AE4  2ADF               	goto	u2165
  6866     0AE5                     l2385:
  6867     0AE5  3001               	movlw	1
  6868     0AE6  07F6               	addwf	___lwdiv@counter,f
  6869     0AE7                     l2387:
  6870     0AE7  1FF1               	btfss	___lwdiv@divisor+1,7
  6871     0AE8  2AEA               	goto	u2171
  6872     0AE9  2AEB               	goto	u2170
  6873     0AEA                     u2171:
  6874     0AEA  2ADE               	goto	l2383
  6875     0AEB                     u2170:
  6876     0AEB                     l2389:
  6877     0AEB  3001               	movlw	1
  6878     0AEC                     u2185:
  6879     0AEC  1003               	clrc
  6880     0AED  0DF4               	rlf	___lwdiv@quotient,f
  6881     0AEE  0DF5               	rlf	___lwdiv@quotient+1,f
  6882     0AEF  3EFF               	addlw	-1
  6883     0AF0  1D03               	skipz
  6884     0AF1  2AEC               	goto	u2185
  6885     0AF2  0871               	movf	___lwdiv@divisor+1,w
  6886     0AF3  0273               	subwf	___lwdiv@dividend+1,w
  6887     0AF4  1D03               	skipz
  6888     0AF5  2AF8               	goto	u2195
  6889     0AF6  0870               	movf	___lwdiv@divisor,w
  6890     0AF7  0272               	subwf	___lwdiv@dividend,w
  6891     0AF8                     u2195:
  6892     0AF8  1C03               	skipc
  6893     0AF9  2AFB               	goto	u2191
  6894     0AFA  2AFC               	goto	u2190
  6895     0AFB                     u2191:
  6896     0AFB  2B03               	goto	l2395
  6897     0AFC                     u2190:
  6898     0AFC                     l2391:
  6899     0AFC  0870               	movf	___lwdiv@divisor,w
  6900     0AFD  02F2               	subwf	___lwdiv@dividend,f
  6901     0AFE  0871               	movf	___lwdiv@divisor+1,w
  6902     0AFF  1C03               	skipc
  6903     0B00  03F3               	decf	___lwdiv@dividend+1,f
  6904     0B01  02F3               	subwf	___lwdiv@dividend+1,f
  6905     0B02                     l2393:
  6906     0B02  1474               	bsf	___lwdiv@quotient,0
  6907     0B03                     l2395:
  6908     0B03  3001               	movlw	1
  6909     0B04                     u2205:
  6910     0B04  1003               	clrc
  6911     0B05  0CF1               	rrf	___lwdiv@divisor+1,f
  6912     0B06  0CF0               	rrf	___lwdiv@divisor,f
  6913     0B07  3EFF               	addlw	-1
  6914     0B08  1D03               	skipz
  6915     0B09  2B04               	goto	u2205
  6916     0B0A                     l2397:
  6917     0B0A  3001               	movlw	1
  6918     0B0B  02F6               	subwf	___lwdiv@counter,f
  6919     0B0C  1D03               	btfss	3,2
  6920     0B0D  2B0F               	goto	u2211
  6921     0B0E  2B10               	goto	u2210
  6922     0B0F                     u2211:
  6923     0B0F  2AEB               	goto	l2389
  6924     0B10                     u2210:
  6925     0B10                     l2399:
  6926     0B10  0875               	movf	___lwdiv@quotient+1,w
  6927     0B11  00F1               	movwf	?___lwdiv+1
  6928     0B12  0874               	movf	___lwdiv@quotient,w
  6929     0B13  00F0               	movwf	?___lwdiv
  6930     0B14                     l865:
  6931     0B14  0008               	return
  6932     0B15                     __end_of___lwdiv:
  6933                           
  6934                           	psect	text36
  6935     1787                     __ptext36:	
  6936 ;; *************** function ___bmul *****************
  6937 ;; Defined at:
  6938 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul8.c"
  6939 ;; Parameters:    Size  Location     Type
  6940 ;;  multiplier      1    wreg     unsigned char 
  6941 ;;  multiplicand    1    0[COMMON] unsigned char 
  6942 ;; Auto vars:     Size  Location     Type
  6943 ;;  multiplier      1    2[COMMON] unsigned char 
  6944 ;;  product         1    1[COMMON] unsigned char 
  6945 ;; Return value:  Size  Location     Type
  6946 ;;                  1    wreg      unsigned char 
  6947 ;; Registers used:
  6948 ;;		wreg, status,2, status,0
  6949 ;; Tracked objects:
  6950 ;;		On entry : 0/0
  6951 ;;		On exit  : 0/0
  6952 ;;		Unchanged: 0/0
  6953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6954 ;;      Params:         1       0       0       0       0
  6955 ;;      Locals:         2       0       0       0       0
  6956 ;;      Temps:          0       0       0       0       0
  6957 ;;      Totals:         3       0       0       0       0
  6958 ;;Total ram usage:        3 bytes
  6959 ;; Hardware stack levels used: 1
  6960 ;; This function calls:
  6961 ;;		Nothing
  6962 ;; This function is called by:
  6963 ;;		_store_events
  6964 ;;		_Dash_board
  6965 ;;		_view_log
  6966 ;;		_bcd_to_binary
  6967 ;; This function uses a non-reentrant model
  6968 ;;
  6969                           
  6970     1787                     ___bmul:	
  6971                           ;psect for function ___bmul
  6972                           
  6973                           
  6974                           ;incstack = 0
  6975                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  6976                           ;___bmul@multiplier stored from wreg
  6977     1787  00F2               	movwf	___bmul@multiplier
  6978     1788                     l2257:
  6979     1788  01F1               	clrf	___bmul@product
  6980     1789                     l2259:
  6981     1789  1C72               	btfss	___bmul@multiplier,0
  6982     178A  2F8C               	goto	u1871
  6983     178B  2F8D               	goto	u1870
  6984     178C                     u1871:
  6985     178C  2F8F               	goto	l2263
  6986     178D                     u1870:
  6987     178D                     l2261:
  6988     178D  0870               	movf	___bmul@multiplicand,w
  6989     178E  07F1               	addwf	___bmul@product,f
  6990     178F                     l2263:
  6991     178F  1003               	clrc
  6992     1790  0DF0               	rlf	___bmul@multiplicand,f
  6993     1791                     l2265:
  6994     1791  1003               	clrc
  6995     1792  0CF2               	rrf	___bmul@multiplier,f
  6996     1793  0872               	movf	___bmul@multiplier,w
  6997     1794  1D03               	btfss	3,2
  6998     1795  2F97               	goto	u1881
  6999     1796  2F98               	goto	u1880
  7000     1797                     u1881:
  7001     1797  2F89               	goto	l2259
  7002     1798                     u1880:
  7003     1798                     l2267:
  7004     1798  0871               	movf	___bmul@product,w
  7005     1799                     l611:
  7006     1799  0008               	return
  7007     179A                     __end_of___bmul:
  7008                           
  7009                           	psect	text37
  7010     17E1                     __ptext37:	
  7011 ;; *************** function _read_adc *****************
  7012 ;; Defined at:
  7013 ;;		line 12 in file "adc.c"
  7014 ;; Parameters:    Size  Location     Type
  7015 ;;  channel         1    wreg     unsigned char 
  7016 ;; Auto vars:     Size  Location     Type
  7017 ;;  channel         1    5[COMMON] unsigned char 
  7018 ;;  adc_reg_val     2    3[COMMON] unsigned short 
  7019 ;; Return value:  Size  Location     Type
  7020 ;;                  2    0[COMMON] unsigned short 
  7021 ;; Registers used:
  7022 ;;		wreg, status,2, status,0
  7023 ;; Tracked objects:
  7024 ;;		On entry : 0/0
  7025 ;;		On exit  : 0/0
  7026 ;;		Unchanged: 0/0
  7027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7028 ;;      Params:         2       0       0       0       0
  7029 ;;      Locals:         3       0       0       0       0
  7030 ;;      Temps:          1       0       0       0       0
  7031 ;;      Totals:         6       0       0       0       0
  7032 ;;Total ram usage:        6 bytes
  7033 ;; Hardware stack levels used: 1
  7034 ;; This function calls:
  7035 ;;		Nothing
  7036 ;; This function is called by:
  7037 ;;		_Dash_board
  7038 ;; This function uses a non-reentrant model
  7039 ;;
  7040                           
  7041     17E1                     _read_adc:	
  7042                           ;psect for function _read_adc
  7043                           
  7044                           
  7045                           ;incstack = 0
  7046                           ; Regs used in _read_adc: [wreg+status,2+status,0]
  7047                           ;read_adc@channel stored from wreg
  7048     17E1  00F5               	movwf	read_adc@channel
  7049     17E2                     l2467:
  7050                           
  7051                           ;adc.c: 12: unsigned short read_adc(unsigned char channel);adc.c: 13: {;adc.c: 14:     u
      +                          nsigned short adc_reg_val;;adc.c: 17:     ADCON0 = (ADCON0 & 0xC7) | (channel << 3);
  7052     17E2  0875               	movf	read_adc@channel,w
  7053     17E3  00F2               	movwf	??_read_adc
  7054     17E4  3003               	movlw	3
  7055     17E5                     u2325:
  7056     17E5  1003               	clrc
  7057     17E6  0DF2               	rlf	??_read_adc,f
  7058     17E7  3EFF               	addlw	-1
  7059     17E8  1D03               	skipz
  7060     17E9  2FE5               	goto	u2325
  7061     17EA  1283               	bcf	3,5	;RP0=0, select bank0
  7062     17EB  1303               	bcf	3,6	;RP1=0, select bank0
  7063     17EC  081F               	movf	31,w	;volatile
  7064     17ED  39C7               	andlw	199
  7065     17EE  0472               	iorwf	??_read_adc,w
  7066     17EF  009F               	movwf	31	;volatile
  7067     17F0                     l2469:
  7068                           
  7069                           ;adc.c: 20:     GO = 1;
  7070     17F0  151F               	bsf	31,2	;volatile
  7071     17F1                     l69:	
  7072                           ;adc.c: 22:     while (nDONE);
  7073                           
  7074     17F1  191F               	btfsc	31,2	;volatile
  7075     17F2  2FF4               	goto	u2331
  7076     17F3  2FF5               	goto	u2330
  7077     17F4                     u2331:
  7078     17F4  2FF1               	goto	l69
  7079     17F5                     u2330:
  7080     17F5                     l2471:
  7081                           
  7082                           ;adc.c: 24:     adc_reg_val = (ADRESH << 8) | ADRESL;
  7083     17F5  081E               	movf	30,w	;volatile
  7084     17F6  00F4               	movwf	read_adc@adc_reg_val+1
  7085     17F7  1683               	bsf	3,5	;RP0=1, select bank1
  7086     17F8  1303               	bcf	3,6	;RP1=0, select bank1
  7087     17F9  081E               	movf	30,w	;volatile
  7088     17FA  00F3               	movwf	read_adc@adc_reg_val
  7089                           
  7090                           ;adc.c: 26:     return adc_reg_val;
  7091     17FB  0874               	movf	read_adc@adc_reg_val+1,w
  7092     17FC  00F1               	movwf	?_read_adc+1
  7093     17FD  0873               	movf	read_adc@adc_reg_val,w
  7094     17FE  00F0               	movwf	?_read_adc
  7095     17FF                     l72:
  7096     17FF  0008               	return
  7097     1800                     __end_of_read_adc:
  7098                           
  7099                           	psect	text38
  7100     0812                     __ptext38:	
  7101 ;; *************** function _get_time *****************
  7102 ;; Defined at:
  7103 ;;		line 30 in file "BLACK_BOX.c"
  7104 ;; Parameters:    Size  Location     Type
  7105 ;;  clock_regist    1    4[COMMON] PTR unsigned char 
  7106 ;;		 -> set_time@Clock_register(3), Dash_board@Clock_register(3), 
  7107 ;; Auto vars:     Size  Location     Type
  7108 ;;		None
  7109 ;; Return value:  Size  Location     Type
  7110 ;;                  1    wreg      void 
  7111 ;; Registers used:
  7112 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7113 ;; Tracked objects:
  7114 ;;		On entry : 0/0
  7115 ;;		On exit  : 0/0
  7116 ;;		Unchanged: 0/0
  7117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7118 ;;      Params:         1       0       0       0       0
  7119 ;;      Locals:         0       0       0       0       0
  7120 ;;      Temps:          0       0       0       0       0
  7121 ;;      Totals:         1       0       0       0       0
  7122 ;;Total ram usage:        1 bytes
  7123 ;; Hardware stack levels used: 1
  7124 ;; Hardware stack levels required when called: 3
  7125 ;; This function calls:
  7126 ;;		_read_ds1307
  7127 ;; This function is called by:
  7128 ;;		_Dash_board
  7129 ;;		_set_time
  7130 ;; This function uses a non-reentrant model
  7131 ;;
  7132                           
  7133     0812                     _get_time:	
  7134                           ;psect for function _get_time
  7135                           
  7136     0812                     l2497:	
  7137                           ;incstack = 0
  7138                           ; Regs used in _get_time: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7139                           
  7140                           
  7141                           ;BLACK_BOX.c: 30: void get_time(unsigned char *clock_register);BLACK_BOX.c: 31: {;BLACK_
      +                          BOX.c: 32:     clock_register[0] = read_ds1307(0x02);
  7142     0812  0874               	movf	get_time@clock_register,w
  7143     0813  0084               	movwf	4
  7144     0814  3002               	movlw	2
  7145     0815  120A  158A  2115  120A  158A  	fcall	_read_ds1307
  7146     081A  1383               	bcf	3,7	;select IRP bank0
  7147     081B  0080               	movwf	0
  7148                           
  7149                           ;BLACK_BOX.c: 33:     clock_register[1] = read_ds1307(0x01);
  7150     081C  0A74               	incf	get_time@clock_register,w
  7151     081D  0084               	movwf	4
  7152     081E  3001               	movlw	1
  7153     081F  120A  158A  2115  120A  158A  	fcall	_read_ds1307
  7154     0824  1383               	bcf	3,7	;select IRP bank0
  7155     0825  0080               	movwf	0
  7156                           
  7157                           ;BLACK_BOX.c: 34:     clock_register[2] = read_ds1307(0x00);
  7158     0826  0874               	movf	get_time@clock_register,w
  7159     0827  3E02               	addlw	2
  7160     0828  0084               	movwf	4
  7161     0829  3000               	movlw	0
  7162     082A  120A  158A  2115  120A  158A  	fcall	_read_ds1307
  7163     082F  1383               	bcf	3,7	;select IRP bank0
  7164     0830  0080               	movwf	0
  7165     0831                     l209:
  7166     0831  0008               	return
  7167     0832                     __end_of_get_time:
  7168                           
  7169                           	psect	text39
  7170     0915                     __ptext39:	
  7171 ;; *************** function _read_ds1307 *****************
  7172 ;; Defined at:
  7173 ;;		line 15 in file "ds1307.c"
  7174 ;; Parameters:    Size  Location     Type
  7175 ;;  addr            1    wreg     unsigned char 
  7176 ;; Auto vars:     Size  Location     Type
  7177 ;;  addr            1    2[COMMON] unsigned char 
  7178 ;;  data            1    3[COMMON] unsigned char 
  7179 ;; Return value:  Size  Location     Type
  7180 ;;                  1    wreg      unsigned char 
  7181 ;; Registers used:
  7182 ;;		wreg, status,2, status,0, pclath, cstack
  7183 ;; Tracked objects:
  7184 ;;		On entry : 0/0
  7185 ;;		On exit  : 0/0
  7186 ;;		Unchanged: 0/0
  7187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7188 ;;      Params:         0       0       0       0       0
  7189 ;;      Locals:         2       0       0       0       0
  7190 ;;      Temps:          0       0       0       0       0
  7191 ;;      Totals:         2       0       0       0       0
  7192 ;;Total ram usage:        2 bytes
  7193 ;; Hardware stack levels used: 1
  7194 ;; Hardware stack levels required when called: 2
  7195 ;; This function calls:
  7196 ;;		_i2c_read
  7197 ;;		_i2c_rep_start
  7198 ;;		_i2c_start
  7199 ;;		_i2c_stop
  7200 ;;		_i2c_write
  7201 ;; This function is called by:
  7202 ;;		_init_ds1307
  7203 ;;		_get_time
  7204 ;; This function uses a non-reentrant model
  7205 ;;
  7206                           
  7207     0915                     _read_ds1307:	
  7208                           ;psect for function _read_ds1307
  7209                           
  7210                           
  7211                           ;incstack = 0
  7212                           ; Regs used in _read_ds1307: [wreg+status,2+status,0+pclath+cstack]
  7213                           ;read_ds1307@addr stored from wreg
  7214     0915  00F2               	movwf	read_ds1307@addr
  7215     0916                     l2225:
  7216                           
  7217                           ;ds1307.c: 15: unsigned char read_ds1307(unsigned char addr);ds1307.c: 16: {;ds1307.c: 1
      +                          7:     unsigned char data;;ds1307.c: 19:     i2c_start();
  7218     0916  160A  118A  2703  120A  158A  	fcall	_i2c_start
  7219                           
  7220                           ;ds1307.c: 20:     i2c_write(0b11010000);
  7221     091B  30D0               	movlw	208
  7222     091C  160A  118A  2730  120A  158A  	fcall	_i2c_write
  7223                           
  7224                           ;ds1307.c: 21:     i2c_write(addr);
  7225     0921  0872               	movf	read_ds1307@addr,w
  7226     0922  160A  118A  2730  120A  158A  	fcall	_i2c_write
  7227                           
  7228                           ;ds1307.c: 22:     i2c_rep_start();
  7229     0927  160A  118A  26FA  120A  158A  	fcall	_i2c_rep_start
  7230                           
  7231                           ;ds1307.c: 23:     i2c_write(0b11010001);
  7232     092C  30D1               	movlw	209
  7233     092D  160A  118A  2730  120A  158A  	fcall	_i2c_write
  7234                           
  7235                           ;ds1307.c: 24:     data = i2c_read(0);
  7236     0932  3000               	movlw	0
  7237     0933  120A  158A  2032  120A  158A  	fcall	_i2c_read
  7238     0938  00F3               	movwf	read_ds1307@data
  7239                           
  7240                           ;ds1307.c: 25:     i2c_stop();
  7241     0939  160A  118A  270C  120A  158A  	fcall	_i2c_stop
  7242     093E                     l2227:
  7243                           
  7244                           ;ds1307.c: 27:     return data;
  7245     093E  0873               	movf	read_ds1307@data,w
  7246     093F                     l142:
  7247     093F  0008               	return
  7248     0940                     __end_of_read_ds1307:
  7249                           
  7250                           	psect	text40
  7251     1730                     __ptext40:	
  7252 ;; *************** function _i2c_write *****************
  7253 ;; Defined at:
  7254 ;;		line 66 in file "i2c.c"
  7255 ;; Parameters:    Size  Location     Type
  7256 ;;  data            1    wreg     unsigned char 
  7257 ;; Auto vars:     Size  Location     Type
  7258 ;;  data            1    0[COMMON] unsigned char 
  7259 ;; Return value:  Size  Location     Type
  7260 ;;                  2  121[None  ] int 
  7261 ;; Registers used:
  7262 ;;		wreg, status,2, status,0, pclath, cstack
  7263 ;; Tracked objects:
  7264 ;;		On entry : 0/0
  7265 ;;		On exit  : 0/0
  7266 ;;		Unchanged: 0/0
  7267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7268 ;;      Params:         0       0       0       0       0
  7269 ;;      Locals:         1       0       0       0       0
  7270 ;;      Temps:          0       0       0       0       0
  7271 ;;      Totals:         1       0       0       0       0
  7272 ;;Total ram usage:        1 bytes
  7273 ;; Hardware stack levels used: 1
  7274 ;; Hardware stack levels required when called: 1
  7275 ;; This function calls:
  7276 ;;		_i2c_wait_for_idle
  7277 ;; This function is called by:
  7278 ;;		_read_ds1307
  7279 ;;		_write_ds1307
  7280 ;; This function uses a non-reentrant model
  7281 ;;
  7282                           
  7283     1730                     _i2c_write:	
  7284                           ;psect for function _i2c_write
  7285                           
  7286                           
  7287                           ;incstack = 0
  7288                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
  7289                           ;i2c_write@data stored from wreg
  7290     1730  00F0               	movwf	i2c_write@data
  7291     1731                     l2169:
  7292                           
  7293                           ;i2c.c: 66: int i2c_write(unsigned char data);i2c.c: 67: {;i2c.c: 68:     i2c_wait_for_i
      +                          dle();
  7294     1731  160A  118A  275C  160A  118A  	fcall	_i2c_wait_for_idle
  7295     1736                     l2171:
  7296                           
  7297                           ;i2c.c: 69:     SSPBUF = data;
  7298     1736  0870               	movf	i2c_write@data,w
  7299     1737  1283               	bcf	3,5	;RP0=0, select bank0
  7300     1738  1303               	bcf	3,6	;RP1=0, select bank0
  7301     1739  0093               	movwf	19	;volatile
  7302     173A                     l2173:
  7303     173A                     l122:	
  7304                           ;i2c.c: 71:     return !ACKSTAT;;	Return value of _i2c_write is never used
  7305                           
  7306     173A  0008               	return
  7307     173B                     __end_of_i2c_write:
  7308                           
  7309                           	psect	text41
  7310     170C                     __ptext41:	
  7311 ;; *************** function _i2c_stop *****************
  7312 ;; Defined at:
  7313 ;;		line 36 in file "i2c.c"
  7314 ;; Parameters:    Size  Location     Type
  7315 ;;		None
  7316 ;; Auto vars:     Size  Location     Type
  7317 ;;		None
  7318 ;; Return value:  Size  Location     Type
  7319 ;;                  1    wreg      void 
  7320 ;; Registers used:
  7321 ;;		wreg, status,2, status,0, pclath, cstack
  7322 ;; Tracked objects:
  7323 ;;		On entry : 0/0
  7324 ;;		On exit  : 0/0
  7325 ;;		Unchanged: 0/0
  7326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7327 ;;      Params:         0       0       0       0       0
  7328 ;;      Locals:         0       0       0       0       0
  7329 ;;      Temps:          0       0       0       0       0
  7330 ;;      Totals:         0       0       0       0       0
  7331 ;;Total ram usage:        0 bytes
  7332 ;; Hardware stack levels used: 1
  7333 ;; Hardware stack levels required when called: 1
  7334 ;; This function calls:
  7335 ;;		_i2c_wait_for_idle
  7336 ;; This function is called by:
  7337 ;;		_read_ds1307
  7338 ;;		_write_ds1307
  7339 ;; This function uses a non-reentrant model
  7340 ;;
  7341                           
  7342     170C                     _i2c_stop:	
  7343                           ;psect for function _i2c_stop
  7344                           
  7345     170C                     l2151:	
  7346                           ;incstack = 0
  7347                           ; Regs used in _i2c_stop: [wreg+status,2+status,0+pclath+cstack]
  7348                           
  7349                           
  7350                           ;i2c.c: 38:     i2c_wait_for_idle();
  7351     170C  160A  118A  275C  160A  118A  	fcall	_i2c_wait_for_idle
  7352     1711                     l2153:
  7353                           
  7354                           ;i2c.c: 39:     PEN = 1;
  7355     1711  1683               	bsf	3,5	;RP0=1, select bank1
  7356     1712  1303               	bcf	3,6	;RP1=0, select bank1
  7357     1713  1511               	bsf	17,2	;volatile
  7358     1714                     l114:
  7359     1714  0008               	return
  7360     1715                     __end_of_i2c_stop:
  7361                           
  7362                           	psect	text42
  7363     1703                     __ptext42:	
  7364 ;; *************** function _i2c_start *****************
  7365 ;; Defined at:
  7366 ;;		line 23 in file "i2c.c"
  7367 ;; Parameters:    Size  Location     Type
  7368 ;;		None
  7369 ;; Auto vars:     Size  Location     Type
  7370 ;;		None
  7371 ;; Return value:  Size  Location     Type
  7372 ;;                  1    wreg      void 
  7373 ;; Registers used:
  7374 ;;		wreg, status,2, status,0, pclath, cstack
  7375 ;; Tracked objects:
  7376 ;;		On entry : 0/0
  7377 ;;		On exit  : 0/0
  7378 ;;		Unchanged: 0/0
  7379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7380 ;;      Params:         0       0       0       0       0
  7381 ;;      Locals:         0       0       0       0       0
  7382 ;;      Temps:          0       0       0       0       0
  7383 ;;      Totals:         0       0       0       0       0
  7384 ;;Total ram usage:        0 bytes
  7385 ;; Hardware stack levels used: 1
  7386 ;; Hardware stack levels required when called: 1
  7387 ;; This function calls:
  7388 ;;		_i2c_wait_for_idle
  7389 ;; This function is called by:
  7390 ;;		_read_ds1307
  7391 ;;		_write_ds1307
  7392 ;; This function uses a non-reentrant model
  7393 ;;
  7394                           
  7395     1703                     _i2c_start:	
  7396                           ;psect for function _i2c_start
  7397                           
  7398     1703                     l2143:	
  7399                           ;incstack = 0
  7400                           ; Regs used in _i2c_start: [wreg+status,2+status,0+pclath+cstack]
  7401                           
  7402                           
  7403                           ;i2c.c: 25:     i2c_wait_for_idle();
  7404     1703  160A  118A  275C  160A  118A  	fcall	_i2c_wait_for_idle
  7405     1708                     l2145:
  7406                           
  7407                           ;i2c.c: 26:     SEN = 1;
  7408     1708  1683               	bsf	3,5	;RP0=1, select bank1
  7409     1709  1303               	bcf	3,6	;RP1=0, select bank1
  7410     170A  1411               	bsf	17,0	;volatile
  7411     170B                     l108:
  7412     170B  0008               	return
  7413     170C                     __end_of_i2c_start:
  7414                           
  7415                           	psect	text43
  7416     16FA                     __ptext43:	
  7417 ;; *************** function _i2c_rep_start *****************
  7418 ;; Defined at:
  7419 ;;		line 29 in file "i2c.c"
  7420 ;; Parameters:    Size  Location     Type
  7421 ;;		None
  7422 ;; Auto vars:     Size  Location     Type
  7423 ;;		None
  7424 ;; Return value:  Size  Location     Type
  7425 ;;                  1    wreg      void 
  7426 ;; Registers used:
  7427 ;;		wreg, status,2, status,0, pclath, cstack
  7428 ;; Tracked objects:
  7429 ;;		On entry : 0/0
  7430 ;;		On exit  : 0/0
  7431 ;;		Unchanged: 0/0
  7432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7433 ;;      Params:         0       0       0       0       0
  7434 ;;      Locals:         0       0       0       0       0
  7435 ;;      Temps:          0       0       0       0       0
  7436 ;;      Totals:         0       0       0       0       0
  7437 ;;Total ram usage:        0 bytes
  7438 ;; Hardware stack levels used: 1
  7439 ;; Hardware stack levels required when called: 1
  7440 ;; This function calls:
  7441 ;;		_i2c_wait_for_idle
  7442 ;; This function is called by:
  7443 ;;		_read_ds1307
  7444 ;; This function uses a non-reentrant model
  7445 ;;
  7446                           
  7447     16FA                     _i2c_rep_start:	
  7448                           ;psect for function _i2c_rep_start
  7449                           
  7450     16FA                     l2147:	
  7451                           ;incstack = 0
  7452                           ; Regs used in _i2c_rep_start: [wreg+status,2+status,0+pclath+cstack]
  7453                           
  7454                           
  7455                           ;i2c.c: 31:     i2c_wait_for_idle();
  7456     16FA  160A  118A  275C  160A  118A  	fcall	_i2c_wait_for_idle
  7457     16FF                     l2149:
  7458                           
  7459                           ;i2c.c: 32:     SEN = 1;
  7460     16FF  1683               	bsf	3,5	;RP0=1, select bank1
  7461     1700  1303               	bcf	3,6	;RP1=0, select bank1
  7462     1701  1411               	bsf	17,0	;volatile
  7463     1702                     l111:
  7464     1702  0008               	return
  7465     1703                     __end_of_i2c_rep_start:
  7466                           
  7467                           	psect	text44
  7468     0832                     __ptext44:	
  7469 ;; *************** function _i2c_read *****************
  7470 ;; Defined at:
  7471 ;;		line 42 in file "i2c.c"
  7472 ;; Parameters:    Size  Location     Type
  7473 ;;  ack             1    wreg     unsigned char 
  7474 ;; Auto vars:     Size  Location     Type
  7475 ;;  ack             1    0[COMMON] unsigned char 
  7476 ;;  data            1    1[COMMON] unsigned char 
  7477 ;; Return value:  Size  Location     Type
  7478 ;;                  1    wreg      unsigned char 
  7479 ;; Registers used:
  7480 ;;		wreg, status,2, status,0, pclath, cstack
  7481 ;; Tracked objects:
  7482 ;;		On entry : 0/0
  7483 ;;		On exit  : 0/0
  7484 ;;		Unchanged: 0/0
  7485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7486 ;;      Params:         0       0       0       0       0
  7487 ;;      Locals:         2       0       0       0       0
  7488 ;;      Temps:          0       0       0       0       0
  7489 ;;      Totals:         2       0       0       0       0
  7490 ;;Total ram usage:        2 bytes
  7491 ;; Hardware stack levels used: 1
  7492 ;; Hardware stack levels required when called: 1
  7493 ;; This function calls:
  7494 ;;		_i2c_wait_for_idle
  7495 ;; This function is called by:
  7496 ;;		_read_ds1307
  7497 ;; This function uses a non-reentrant model
  7498 ;;
  7499                           
  7500     0832                     _i2c_read:	
  7501                           ;psect for function _i2c_read
  7502                           
  7503                           
  7504                           ;incstack = 0
  7505                           ; Regs used in _i2c_read: [wreg+status,2+status,0+pclath+cstack]
  7506                           ;i2c_read@ack stored from wreg
  7507     0832  00F0               	movwf	i2c_read@ack
  7508     0833                     l2155:
  7509                           
  7510                           ;i2c.c: 42: unsigned char i2c_read(unsigned char ack);i2c.c: 43: {;i2c.c: 44:     unsign
      +                          ed char data;;i2c.c: 46:     i2c_wait_for_idle();
  7511     0833  160A  118A  275C  120A  158A  	fcall	_i2c_wait_for_idle
  7512     0838                     l2157:
  7513                           
  7514                           ;i2c.c: 47:     RCEN = 1;
  7515     0838  1683               	bsf	3,5	;RP0=1, select bank1
  7516     0839  1303               	bcf	3,6	;RP1=0, select bank1
  7517     083A  1591               	bsf	17,3	;volatile
  7518                           
  7519                           ;i2c.c: 49:     i2c_wait_for_idle();
  7520     083B  160A  118A  275C  120A  158A  	fcall	_i2c_wait_for_idle
  7521     0840                     l2159:
  7522                           
  7523                           ;i2c.c: 50:     data = SSPBUF;
  7524     0840  1283               	bcf	3,5	;RP0=0, select bank0
  7525     0841  1303               	bcf	3,6	;RP1=0, select bank0
  7526     0842  0813               	movf	19,w	;volatile
  7527     0843  00F1               	movwf	i2c_read@data
  7528     0844                     l2161:
  7529                           
  7530                           ;i2c.c: 52:     if (ack == 1)
  7531     0844  0370               	decf	i2c_read@ack,w
  7532     0845  1D03               	btfss	3,2
  7533     0846  2848               	goto	u1831
  7534     0847  2849               	goto	u1830
  7535     0848                     u1831:
  7536     0848  284D               	goto	l117
  7537     0849                     u1830:
  7538     0849                     l2163:
  7539                           
  7540                           ;i2c.c: 53:     {;i2c.c: 54:         ACKDT = 1;
  7541     0849  1683               	bsf	3,5	;RP0=1, select bank1
  7542     084A  1303               	bcf	3,6	;RP1=0, select bank1
  7543     084B  1691               	bsf	17,5	;volatile
  7544                           
  7545                           ;i2c.c: 55:     }
  7546     084C  2850               	goto	l118
  7547     084D                     l117:	
  7548                           ;i2c.c: 56:     else
  7549                           
  7550                           
  7551                           ;i2c.c: 57:     {;i2c.c: 58:         ACKDT = 0;
  7552     084D  1683               	bsf	3,5	;RP0=1, select bank1
  7553     084E  1303               	bcf	3,6	;RP1=0, select bank1
  7554     084F  1291               	bcf	17,5	;volatile
  7555     0850                     l118:	
  7556                           ;i2c.c: 59:     }
  7557                           
  7558                           
  7559                           ;i2c.c: 61:     ACKEN = 1;
  7560     0850  1611               	bsf	17,4	;volatile
  7561     0851                     l2165:
  7562                           
  7563                           ;i2c.c: 63:     return data;
  7564     0851  0871               	movf	i2c_read@data,w
  7565     0852                     l119:
  7566     0852  0008               	return
  7567     0853                     __end_of_i2c_read:
  7568                           
  7569                           	psect	text45
  7570     175C                     __ptext45:	
  7571 ;; *************** function _i2c_wait_for_idle *****************
  7572 ;; Defined at:
  7573 ;;		line 16 in file "i2c.c"
  7574 ;; Parameters:    Size  Location     Type
  7575 ;;		None
  7576 ;; Auto vars:     Size  Location     Type
  7577 ;;		None
  7578 ;; Return value:  Size  Location     Type
  7579 ;;                  1    wreg      void 
  7580 ;; Registers used:
  7581 ;;		wreg, status,2
  7582 ;; Tracked objects:
  7583 ;;		On entry : 0/0
  7584 ;;		On exit  : 0/0
  7585 ;;		Unchanged: 0/0
  7586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7587 ;;      Params:         0       0       0       0       0
  7588 ;;      Locals:         0       0       0       0       0
  7589 ;;      Temps:          0       0       0       0       0
  7590 ;;      Totals:         0       0       0       0       0
  7591 ;;Total ram usage:        0 bytes
  7592 ;; Hardware stack levels used: 1
  7593 ;; This function calls:
  7594 ;;		Nothing
  7595 ;; This function is called by:
  7596 ;;		_i2c_start
  7597 ;;		_i2c_rep_start
  7598 ;;		_i2c_stop
  7599 ;;		_i2c_read
  7600 ;;		_i2c_write
  7601 ;; This function uses a non-reentrant model
  7602 ;;
  7603                           
  7604     175C                     _i2c_wait_for_idle:	
  7605                           ;psect for function _i2c_wait_for_idle
  7606                           
  7607     175C                     l2115:	
  7608                           ;incstack = 0
  7609                           ; Regs used in _i2c_wait_for_idle: [wreg+status,2]
  7610                           
  7611     175C                     l102:	
  7612                           ;i2c.c: 19:     while (R_nW || (SSPCON2 & 0x1F));
  7613                           
  7614     175C  1683               	bsf	3,5	;RP0=1, select bank1
  7615     175D  1303               	bcf	3,6	;RP1=0, select bank1
  7616     175E  1914               	btfsc	20,2	;volatile
  7617     175F  2F61               	goto	u1761
  7618     1760  2F62               	goto	u1760
  7619     1761                     u1761:
  7620     1761  2F5C               	goto	l102
  7621     1762                     u1760:
  7622     1762                     l2117:
  7623     1762  0811               	movf	17,w	;volatile
  7624     1763  391F               	andlw	31
  7625     1764  1D03               	btfss	3,2
  7626     1765  2F67               	goto	u1771
  7627     1766  2F68               	goto	u1770
  7628     1767                     u1771:
  7629     1767  2F5C               	goto	l102
  7630     1768                     u1770:
  7631     1768                     l105:
  7632     1768  0008               	return
  7633     1769                     __end_of_i2c_wait_for_idle:
  7634                           
  7635                           	psect	text46
  7636     0B57                     __ptext46:	
  7637 ;; *************** function _display_time *****************
  7638 ;; Defined at:
  7639 ;;		line 14 in file "BLACK_BOX.c"
  7640 ;; Parameters:    Size  Location     Type
  7641 ;;  clock_regist    1    7[COMMON] PTR unsigned char 
  7642 ;;		 -> set_time@Clock_register(3), Dash_board@Clock_register(3), 
  7643 ;; Auto vars:     Size  Location     Type
  7644 ;;		None
  7645 ;; Return value:  Size  Location     Type
  7646 ;;                  1    wreg      void 
  7647 ;; Registers used:
  7648 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7649 ;; Tracked objects:
  7650 ;;		On entry : 0/0
  7651 ;;		On exit  : 0/0
  7652 ;;		Unchanged: 0/0
  7653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7654 ;;      Params:         1       0       0       0       0
  7655 ;;      Locals:         0       0       0       0       0
  7656 ;;      Temps:          1       0       0       0       0
  7657 ;;      Totals:         2       0       0       0       0
  7658 ;;Total ram usage:        2 bytes
  7659 ;; Hardware stack levels used: 1
  7660 ;; Hardware stack levels required when called: 2
  7661 ;; This function calls:
  7662 ;;		_clcd_print
  7663 ;; This function is called by:
  7664 ;;		_Dash_board
  7665 ;;		_set_time
  7666 ;; This function uses a non-reentrant model
  7667 ;;
  7668                           
  7669     0B57                     _display_time:	
  7670                           ;psect for function _display_time
  7671                           
  7672     0B57                     l2487:	
  7673                           ;incstack = 0
  7674                           ; Regs used in _display_time: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7675                           
  7676                           
  7677                           ;BLACK_BOX.c: 14: void display_time(unsigned char *clock_register);BLACK_BOX.c: 15: {;BL
      +                          ACK_BOX.c: 18:     time[0] = (((clock_register[0] >> 4) & 0x0F) + '0');
  7678     0B57  0877               	movf	display_time@clock_register,w
  7679     0B58  0084               	movwf	4
  7680     0B59  1383               	bcf	3,7	;select IRP bank0
  7681     0B5A  0800               	movf	0,w
  7682     0B5B  00F8               	movwf	??_display_time
  7683     0B5C  3004               	movlw	4
  7684     0B5D                     u2355:
  7685     0B5D  1003               	clrc
  7686     0B5E  0CF8               	rrf	??_display_time,f
  7687     0B5F  3EFF               	addlw	-1
  7688     0B60  1D03               	skipz
  7689     0B61  2B5D               	goto	u2355
  7690     0B62  0878               	movf	??_display_time,w
  7691     0B63  390F               	andlw	15
  7692     0B64  3E30               	addlw	48
  7693     0B65  1283               	bcf	3,5	;RP0=0, select bank0
  7694     0B66  1303               	bcf	3,6	;RP1=0, select bank0
  7695     0B67  00DF               	movwf	_time
  7696                           
  7697                           ;BLACK_BOX.c: 19:     time[1] = ((clock_register[0] & 0x0F) + '0');
  7698     0B68  0877               	movf	display_time@clock_register,w
  7699     0B69  0084               	movwf	4
  7700     0B6A  0800               	movf	0,w
  7701     0B6B  390F               	andlw	15
  7702     0B6C  3E30               	addlw	48
  7703     0B6D  00E0               	movwf	_time+1
  7704     0B6E                     l2489:
  7705                           
  7706                           ;BLACK_BOX.c: 20:     time[2] = ':';
  7707     0B6E  303A               	movlw	58
  7708     0B6F  00E1               	movwf	_time+2
  7709                           
  7710                           ;BLACK_BOX.c: 21:     time[3] = (((clock_register[1] >> 4) & 0x0F) + '0');
  7711     0B70  0A77               	incf	display_time@clock_register,w
  7712     0B71  0084               	movwf	4
  7713     0B72  0800               	movf	0,w
  7714     0B73  00F8               	movwf	??_display_time
  7715     0B74  3004               	movlw	4
  7716     0B75                     u2365:
  7717     0B75  1003               	clrc
  7718     0B76  0CF8               	rrf	??_display_time,f
  7719     0B77  3EFF               	addlw	-1
  7720     0B78  1D03               	skipz
  7721     0B79  2B75               	goto	u2365
  7722     0B7A  0878               	movf	??_display_time,w
  7723     0B7B  390F               	andlw	15
  7724     0B7C  3E30               	addlw	48
  7725     0B7D  00E2               	movwf	_time+3
  7726                           
  7727                           ;BLACK_BOX.c: 22:     time[4] = ((clock_register[1] & 0x0F) + '0');
  7728     0B7E  0A77               	incf	display_time@clock_register,w
  7729     0B7F  0084               	movwf	4
  7730     0B80  0800               	movf	0,w
  7731     0B81  390F               	andlw	15
  7732     0B82  3E30               	addlw	48
  7733     0B83  00E3               	movwf	_time+4
  7734     0B84                     l2491:
  7735                           
  7736                           ;BLACK_BOX.c: 23:     time[5] = ':';
  7737     0B84  303A               	movlw	58
  7738     0B85  00E4               	movwf	_time+5
  7739                           
  7740                           ;BLACK_BOX.c: 24:     time[6] = (((clock_register[2] >> 4) & 0x0F) + '0');
  7741     0B86  0877               	movf	display_time@clock_register,w
  7742     0B87  3E02               	addlw	2
  7743     0B88  0084               	movwf	4
  7744     0B89  0800               	movf	0,w
  7745     0B8A  00F8               	movwf	??_display_time
  7746     0B8B  3004               	movlw	4
  7747     0B8C                     u2375:
  7748     0B8C  1003               	clrc
  7749     0B8D  0CF8               	rrf	??_display_time,f
  7750     0B8E  3EFF               	addlw	-1
  7751     0B8F  1D03               	skipz
  7752     0B90  2B8C               	goto	u2375
  7753     0B91  0878               	movf	??_display_time,w
  7754     0B92  390F               	andlw	15
  7755     0B93  3E30               	addlw	48
  7756     0B94  00E5               	movwf	_time+6
  7757                           
  7758                           ;BLACK_BOX.c: 25:     time[7] = ((clock_register[2] & 0x0F) + '0');
  7759     0B95  0877               	movf	display_time@clock_register,w
  7760     0B96  3E02               	addlw	2
  7761     0B97  0084               	movwf	4
  7762     0B98  0800               	movf	0,w
  7763     0B99  390F               	andlw	15
  7764     0B9A  3E30               	addlw	48
  7765     0B9B  00E6               	movwf	_time+7
  7766     0B9C                     l2493:
  7767                           
  7768                           ;BLACK_BOX.c: 26:     time[8] = '\0';
  7769     0B9C  01E7               	clrf	_time+8
  7770     0B9D                     l2495:
  7771                           
  7772                           ;BLACK_BOX.c: 27:     clcd_print(time, (0xC0 + 0));
  7773     0B9D  305F               	movlw	(low (_time| 0))& (0+255)
  7774     0B9E  00F4               	movwf	clcd_print@str
  7775     0B9F  3000               	movlw	0
  7776     0BA0  00F5               	movwf	clcd_print@str+1
  7777     0BA1  30C0               	movlw	192
  7778     0BA2  00F6               	movwf	clcd_print@addr
  7779     0BA3  120A  158A  216B  120A  158A  	fcall	_clcd_print
  7780     0BA8                     l206:
  7781     0BA8  0008               	return
  7782     0BA9                     __end_of_display_time:
  7783                           
  7784                           	psect	text47
  7785     096B                     __ptext47:	
  7786 ;; *************** function _clcd_print *****************
  7787 ;; Defined at:
  7788 ;;		line 62 in file "clcd.c"
  7789 ;; Parameters:    Size  Location     Type
  7790 ;;  str             2    4[COMMON] PTR const unsigned char 
  7791 ;;		 -> STR_22(17), STR_21(17), STR_20(17), STR_19(17), 
  7792 ;;		 -> STR_18(17), STR_17(9), STR_16(14), STR_15(15), 
  7793 ;;		 -> STR_14(17), STR_13(11), STR_8(15), view_log@speed_data(3), 
  7794 ;;		 -> view_log@event_data(3), view_log@time_data(10), STR_7(17), STR_6(17), 
  7795 ;;		 -> events(30), time(10), STR_5(17), STR_4(17), 
  7796 ;;		 -> STR_3(17), STR_2(17), STR_1(17), 
  7797 ;;  addr            1    6[COMMON] unsigned char 
  7798 ;; Auto vars:     Size  Location     Type
  7799 ;;		None
  7800 ;; Return value:  Size  Location     Type
  7801 ;;                  1    wreg      void 
  7802 ;; Registers used:
  7803 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7804 ;; Tracked objects:
  7805 ;;		On entry : 0/0
  7806 ;;		On exit  : 0/0
  7807 ;;		Unchanged: 0/0
  7808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7809 ;;      Params:         3       0       0       0       0
  7810 ;;      Locals:         0       0       0       0       0
  7811 ;;      Temps:          0       0       0       0       0
  7812 ;;      Totals:         3       0       0       0       0
  7813 ;;Total ram usage:        3 bytes
  7814 ;; Hardware stack levels used: 1
  7815 ;; Hardware stack levels required when called: 1
  7816 ;; This function calls:
  7817 ;;		_clcd_write
  7818 ;; This function is called by:
  7819 ;;		_display_time
  7820 ;;		_Dash_board
  7821 ;;		_main_menu
  7822 ;;		_view_log
  7823 ;;		_Download_log
  7824 ;;		_clear_log
  7825 ;;		_set_time
  7826 ;; This function uses a non-reentrant model
  7827 ;;
  7828                           
  7829     096B                     _clcd_print:	
  7830                           ;psect for function _clcd_print
  7831                           
  7832     096B                     l2217:	
  7833                           ;incstack = 0
  7834                           ; Regs used in _clcd_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7835                           
  7836                           
  7837                           ;clcd.c: 62: void clcd_print(const char *str, unsigned char addr);clcd.c: 63: {;clcd.c: 
      +                          65:     clcd_write(addr, 0);
  7838     096B  01F0               	clrf	clcd_write@mode
  7839     096C  0876               	movf	clcd_print@addr,w
  7840     096D  120A  158A  222E  120A  158A  	fcall	_clcd_write
  7841                           
  7842                           ;clcd.c: 67:     while (*str != '\0')
  7843     0972  2989               	goto	l2223
  7844     0973                     l2219:
  7845                           
  7846                           ;clcd.c: 68:     {;clcd.c: 69:         clcd_write(*str, 1);
  7847     0973  01F0               	clrf	clcd_write@mode
  7848     0974  0AF0               	incf	clcd_write@mode,f
  7849     0975  0875               	movf	clcd_print@str+1,w
  7850     0976  00FF               	movwf	btemp+1
  7851     0977  0874               	movf	clcd_print@str,w
  7852     0978  0084               	movwf	4
  7853     0979  120A  118A  2003  120A  158A  	fcall	stringtab
  7854     097E  120A  158A  222E  120A  158A  	fcall	_clcd_write
  7855     0983                     l2221:
  7856                           
  7857                           ;clcd.c: 70:         str++;
  7858     0983  3001               	movlw	1
  7859     0984  07F4               	addwf	clcd_print@str,f
  7860     0985  1803               	skipnc
  7861     0986  0AF5               	incf	clcd_print@str+1,f
  7862     0987  3000               	movlw	0
  7863     0988  07F5               	addwf	clcd_print@str+1,f
  7864     0989                     l2223:
  7865                           
  7866                           ;clcd.c: 67:     while (*str != '\0')
  7867     0989  0875               	movf	clcd_print@str+1,w
  7868     098A  1283               	bcf	3,5	;RP0=0, select bank0
  7869     098B  1303               	bcf	3,6	;RP1=0, select bank0
  7870     098C  00FF               	movwf	btemp+1
  7871     098D  0874               	movf	clcd_print@str,w
  7872     098E  0084               	movwf	4
  7873     098F  120A  118A  2003  120A  158A  	fcall	stringtab
  7874     0994  3A00               	xorlw	0
  7875     0995  1D03               	skipz
  7876     0996  2998               	goto	u1841
  7877     0997  2999               	goto	u1840
  7878     0998                     u1841:
  7879     0998  2973               	goto	l2219
  7880     0999                     u1840:
  7881     0999                     l32:
  7882     0999  0008               	return
  7883     099A                     __end_of_clcd_print:
  7884                           
  7885                           	psect	text48
  7886     1776                     __ptext48:	
  7887 ;; *************** function _clcd_putch *****************
  7888 ;; Defined at:
  7889 ;;		line 56 in file "clcd.c"
  7890 ;; Parameters:    Size  Location     Type
  7891 ;;  data            1    wreg     const unsigned char 
  7892 ;;  addr            1    7[COMMON] unsigned char 
  7893 ;; Auto vars:     Size  Location     Type
  7894 ;;  data            1    8[COMMON] const unsigned char 
  7895 ;; Return value:  Size  Location     Type
  7896 ;;                  1    wreg      void 
  7897 ;; Registers used:
  7898 ;;		wreg, status,2, status,0, pclath, cstack
  7899 ;; Tracked objects:
  7900 ;;		On entry : 0/0
  7901 ;;		On exit  : 0/0
  7902 ;;		Unchanged: 0/0
  7903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7904 ;;      Params:         1       0       0       0       0
  7905 ;;      Locals:         1       0       0       0       0
  7906 ;;      Temps:          0       0       0       0       0
  7907 ;;      Totals:         2       0       0       0       0
  7908 ;;Total ram usage:        2 bytes
  7909 ;; Hardware stack levels used: 1
  7910 ;; Hardware stack levels required when called: 1
  7911 ;; This function calls:
  7912 ;;		_clcd_write
  7913 ;; This function is called by:
  7914 ;;		_Dash_board
  7915 ;;		_main_menu
  7916 ;;		_view_log
  7917 ;;		_set_time
  7918 ;; This function uses a non-reentrant model
  7919 ;;
  7920                           
  7921     1776                     _clcd_putch:	
  7922                           ;psect for function _clcd_putch
  7923                           
  7924                           
  7925                           ;incstack = 0
  7926                           ; Regs used in _clcd_putch: [wreg+status,2+status,0+pclath+cstack]
  7927                           ;clcd_putch@data stored from wreg
  7928     1776  00F8               	movwf	clcd_putch@data
  7929     1777                     l2433:
  7930                           
  7931                           ;clcd.c: 56: void clcd_putch(const char data, unsigned char addr);clcd.c: 57: {;clcd.c: 
      +                          58:     clcd_write(addr, 0);
  7932     1777  01F0               	clrf	clcd_write@mode
  7933     1778  0877               	movf	clcd_putch@addr,w
  7934     1779  120A  158A  222E  160A  118A  	fcall	_clcd_write
  7935                           
  7936                           ;clcd.c: 59:     clcd_write(data, 1);
  7937     177E  01F0               	clrf	clcd_write@mode
  7938     177F  0AF0               	incf	clcd_write@mode,f
  7939     1780  0878               	movf	clcd_putch@data,w
  7940     1781  120A  158A  222E  160A  118A  	fcall	_clcd_write
  7941     1786                     l26:
  7942     1786  0008               	return
  7943     1787                     __end_of_clcd_putch:
  7944                           
  7945                           	psect	text49
  7946     0A2E                     __ptext49:	
  7947 ;; *************** function _clcd_write *****************
  7948 ;; Defined at:
  7949 ;;		line 4 in file "clcd.c"
  7950 ;; Parameters:    Size  Location     Type
  7951 ;;  byte            1    wreg     unsigned char 
  7952 ;;  mode            1    0[COMMON] unsigned char 
  7953 ;; Auto vars:     Size  Location     Type
  7954 ;;  byte            1    3[COMMON] unsigned char 
  7955 ;; Return value:  Size  Location     Type
  7956 ;;                  1    wreg      void 
  7957 ;; Registers used:
  7958 ;;		wreg, status,2, status,0
  7959 ;; Tracked objects:
  7960 ;;		On entry : 0/0
  7961 ;;		On exit  : 0/0
  7962 ;;		Unchanged: 0/0
  7963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7964 ;;      Params:         1       0       0       0       0
  7965 ;;      Locals:         1       0       0       0       0
  7966 ;;      Temps:          2       0       0       0       0
  7967 ;;      Totals:         4       0       0       0       0
  7968 ;;Total ram usage:        4 bytes
  7969 ;; Hardware stack levels used: 1
  7970 ;; This function calls:
  7971 ;;		Nothing
  7972 ;; This function is called by:
  7973 ;;		_init_display_controller
  7974 ;;		_clcd_putch
  7975 ;;		_clcd_print
  7976 ;;		_Dash_board
  7977 ;;		_main_menu
  7978 ;;		_view_log
  7979 ;;		_Download_log
  7980 ;;		_clear_log
  7981 ;;		_set_time
  7982 ;; This function uses a non-reentrant model
  7983 ;;
  7984                           
  7985     0A2E                     _clcd_write:	
  7986                           ;psect for function _clcd_write
  7987                           
  7988                           
  7989                           ;incstack = 0
  7990                           ; Regs used in _clcd_write: [wreg+status,2+status,0]
  7991                           ;clcd_write@byte stored from wreg
  7992     0A2E  00F3               	movwf	clcd_write@byte
  7993     0A2F                     l2123:
  7994                           
  7995                           ;clcd.c: 4:  void clcd_write(unsigned char byte, unsigned char mode);clcd.c: 5: {;clcd.c
      +                          : 6:     RE2 = mode;
  7996     0A2F  1870               	btfsc	clcd_write@mode,0
  7997     0A30  2A32               	goto	u1801
  7998     0A31  2A36               	goto	u1800
  7999     0A32                     u1801:
  8000     0A32  1283               	bcf	3,5	;RP0=0, select bank0
  8001     0A33  1303               	bcf	3,6	;RP1=0, select bank0
  8002     0A34  1509               	bsf	9,2	;volatile
  8003     0A35  2A39               	goto	u1814
  8004     0A36                     u1800:
  8005     0A36  1283               	bcf	3,5	;RP0=0, select bank0
  8006     0A37  1303               	bcf	3,6	;RP1=0, select bank0
  8007     0A38  1109               	bcf	9,2	;volatile
  8008     0A39                     u1814:
  8009     0A39                     l2125:
  8010                           
  8011                           ;clcd.c: 8:     PORTD = byte & 0xF0;
  8012     0A39  0873               	movf	clcd_write@byte,w
  8013     0A3A  39F0               	andlw	240
  8014     0A3B  0088               	movwf	8	;volatile
  8015     0A3C                     l2127:
  8016                           
  8017                           ;clcd.c: 9:     RE1 = 1;
  8018     0A3C  1489               	bsf	9,1	;volatile
  8019     0A3D                     l2129:
  8020                           
  8021                           ;clcd.c: 10:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  8022     0A3D  30A6               	movlw	166
  8023     0A3E  00F1               	movwf	??_clcd_write
  8024     0A3F                     u3637:
  8025     0A3F  0BF1               	decfsz	??_clcd_write,f
  8026     0A40  2A3F               	goto	u3637
  8027     0A41  0000               	nop
  8028     0A42                     l2131:
  8029                           
  8030                           ;clcd.c: 11:     RE1 = 0;
  8031     0A42  1283               	bcf	3,5	;RP0=0, select bank0
  8032     0A43  1303               	bcf	3,6	;RP1=0, select bank0
  8033     0A44  1089               	bcf	9,1	;volatile
  8034     0A45                     l2133:
  8035                           
  8036                           ;clcd.c: 13:     PORTD = (byte & 0x0F) << 4;
  8037     0A45  0873               	movf	clcd_write@byte,w
  8038     0A46  390F               	andlw	15
  8039     0A47  00F1               	movwf	??_clcd_write
  8040     0A48  3003               	movlw	3
  8041     0A49                     u1825:
  8042     0A49  1003               	clrc
  8043     0A4A  0DF1               	rlf	??_clcd_write,f
  8044     0A4B  3EFF               	addlw	-1
  8045     0A4C  1D03               	skipz
  8046     0A4D  2A49               	goto	u1825
  8047     0A4E  1003               	clrc
  8048     0A4F  0D71               	rlf	??_clcd_write,w
  8049     0A50  0088               	movwf	8	;volatile
  8050     0A51                     l2135:
  8051                           
  8052                           ;clcd.c: 14:     RE1 = 1;
  8053     0A51  1489               	bsf	9,1	;volatile
  8054     0A52                     l2137:
  8055                           
  8056                           ;clcd.c: 15:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  8057     0A52  30A6               	movlw	166
  8058     0A53  00F1               	movwf	??_clcd_write
  8059     0A54                     u3647:
  8060     0A54  0BF1               	decfsz	??_clcd_write,f
  8061     0A55  2A54               	goto	u3647
  8062     0A56  0000               	nop
  8063     0A57                     l2139:
  8064                           
  8065                           ;clcd.c: 16:     RE1 = 0;
  8066     0A57  1283               	bcf	3,5	;RP0=0, select bank0
  8067     0A58  1303               	bcf	3,6	;RP1=0, select bank0
  8068     0A59  1089               	bcf	9,1	;volatile
  8069     0A5A                     l2141:
  8070                           
  8071                           ;clcd.c: 18:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  8072     0A5A  301B               	movlw	27
  8073     0A5B  00F2               	movwf	??_clcd_write+1
  8074     0A5C  309E               	movlw	158
  8075     0A5D  00F1               	movwf	??_clcd_write
  8076     0A5E                     u3657:
  8077     0A5E  0BF1               	decfsz	??_clcd_write,f
  8078     0A5F  2A5E               	goto	u3657
  8079     0A60  0BF2               	decfsz	??_clcd_write+1,f
  8080     0A61  2A5E               	goto	u3657
  8081     0A62  0000               	nop
  8082     0A63                     l17:
  8083     0A63  0008               	return
  8084     0A64                     __end_of_clcd_write:
  8085                           
  8086                           	psect	text50
  8087     0F4C                     __ptext50:	
  8088 ;; *************** function ___xxtofl *****************
  8089 ;; Defined at:
  8090 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
  8091 ;; Parameters:    Size  Location     Type
  8092 ;;  sign            1    wreg     unsigned char 
  8093 ;;  val             4    0[COMMON] long 
  8094 ;; Auto vars:     Size  Location     Type
  8095 ;;  sign            1    8[COMMON] unsigned char 
  8096 ;;  arg             4   10[COMMON] unsigned long 
  8097 ;;  exp             1    9[COMMON] unsigned char 
  8098 ;; Return value:  Size  Location     Type
  8099 ;;                  4    0[COMMON] unsigned char 
  8100 ;; Registers used:
  8101 ;;		wreg, status,2, status,0
  8102 ;; Tracked objects:
  8103 ;;		On entry : 0/0
  8104 ;;		On exit  : 0/0
  8105 ;;		Unchanged: 0/0
  8106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8107 ;;      Params:         4       0       0       0       0
  8108 ;;      Locals:         6       0       0       0       0
  8109 ;;      Temps:          4       0       0       0       0
  8110 ;;      Totals:        14       0       0       0       0
  8111 ;;Total ram usage:       14 bytes
  8112 ;; Hardware stack levels used: 1
  8113 ;; This function calls:
  8114 ;;		Nothing
  8115 ;; This function is called by:
  8116 ;;		_Dash_board
  8117 ;; This function uses a non-reentrant model
  8118 ;;
  8119                           
  8120     0F4C                     ___xxtofl:	
  8121                           ;psect for function ___xxtofl
  8122                           
  8123                           
  8124                           ;incstack = 0
  8125                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8126                           ;___xxtofl@sign stored from wreg
  8127     0F4C  00F8               	movwf	___xxtofl@sign
  8128     0F4D                     l2743:
  8129     0F4D  0878               	movf	___xxtofl@sign,w
  8130     0F4E  1903               	btfsc	3,2
  8131     0F4F  2F51               	goto	u2841
  8132     0F50  2F52               	goto	u2840
  8133     0F51                     u2841:
  8134     0F51  2F66               	goto	l2749
  8135     0F52                     u2840:
  8136     0F52                     l2745:
  8137     0F52  1FF3               	btfss	___xxtofl@val+3,7
  8138     0F53  2F55               	goto	u2851
  8139     0F54  2F56               	goto	u2850
  8140     0F55                     u2851:
  8141     0F55  2F66               	goto	l2749
  8142     0F56                     u2850:
  8143     0F56                     l2747:
  8144     0F56  0970               	comf	___xxtofl@val,w
  8145     0F57  00FA               	movwf	___xxtofl@arg
  8146     0F58  0971               	comf	___xxtofl@val+1,w
  8147     0F59  00FB               	movwf	___xxtofl@arg+1
  8148     0F5A  0972               	comf	___xxtofl@val+2,w
  8149     0F5B  00FC               	movwf	___xxtofl@arg+2
  8150     0F5C  0973               	comf	___xxtofl@val+3,w
  8151     0F5D  00FD               	movwf	___xxtofl@arg+3
  8152     0F5E  0AFA               	incf	___xxtofl@arg,f
  8153     0F5F  1903               	skipnz
  8154     0F60  0AFB               	incf	___xxtofl@arg+1,f
  8155     0F61  1903               	skipnz
  8156     0F62  0AFC               	incf	___xxtofl@arg+2,f
  8157     0F63  1903               	skipnz
  8158     0F64  0AFD               	incf	___xxtofl@arg+3,f
  8159     0F65  2F6E               	goto	l1026
  8160     0F66                     l2749:
  8161     0F66  0873               	movf	___xxtofl@val+3,w
  8162     0F67  00FD               	movwf	___xxtofl@arg+3
  8163     0F68  0872               	movf	___xxtofl@val+2,w
  8164     0F69  00FC               	movwf	___xxtofl@arg+2
  8165     0F6A  0871               	movf	___xxtofl@val+1,w
  8166     0F6B  00FB               	movwf	___xxtofl@arg+1
  8167     0F6C  0870               	movf	___xxtofl@val,w
  8168     0F6D  00FA               	movwf	___xxtofl@arg
  8169     0F6E                     l1026:
  8170     0F6E  0873               	movf	___xxtofl@val+3,w
  8171     0F6F  0472               	iorwf	___xxtofl@val+2,w
  8172     0F70  0471               	iorwf	___xxtofl@val+1,w
  8173     0F71  0470               	iorwf	___xxtofl@val,w
  8174     0F72  1D03               	skipz
  8175     0F73  2F75               	goto	u2861
  8176     0F74  2F76               	goto	u2860
  8177     0F75                     u2861:
  8178     0F75  2F7F               	goto	l1027
  8179     0F76                     u2860:
  8180     0F76                     l2751:
  8181     0F76  3000               	movlw	0
  8182     0F77  00F3               	movwf	?___xxtofl+3
  8183     0F78  3000               	movlw	0
  8184     0F79  00F2               	movwf	?___xxtofl+2
  8185     0F7A  3000               	movlw	0
  8186     0F7B  00F1               	movwf	?___xxtofl+1
  8187     0F7C  3000               	movlw	0
  8188     0F7D  00F0               	movwf	?___xxtofl
  8189     0F7E  2FFF               	goto	l1028
  8190     0F7F                     l1027:
  8191     0F7F  3096               	movlw	150
  8192     0F80  00F9               	movwf	___xxtofl@exp
  8193     0F81  2F8D               	goto	l2757
  8194     0F82                     l2755:
  8195     0F82  3001               	movlw	1
  8196     0F83  07F9               	addwf	___xxtofl@exp,f
  8197     0F84  3001               	movlw	1
  8198     0F85                     u2875:
  8199     0F85  1003               	clrc
  8200     0F86  0CFD               	rrf	___xxtofl@arg+3,f
  8201     0F87  0CFC               	rrf	___xxtofl@arg+2,f
  8202     0F88  0CFB               	rrf	___xxtofl@arg+1,f
  8203     0F89  0CFA               	rrf	___xxtofl@arg,f
  8204     0F8A  3EFF               	addlw	-1
  8205     0F8B  1D03               	skipz
  8206     0F8C  2F85               	goto	u2875
  8207     0F8D                     l2757:
  8208     0F8D  30FE               	movlw	254
  8209     0F8E  057D               	andwf	___xxtofl@arg+3,w
  8210     0F8F  1D03               	btfss	3,2
  8211     0F90  2F92               	goto	u2881
  8212     0F91  2F93               	goto	u2880
  8213     0F92                     u2881:
  8214     0F92  2F82               	goto	l2755
  8215     0F93                     u2880:
  8216     0F93  2FAD               	goto	l1032
  8217     0F94                     l2759:
  8218     0F94  3001               	movlw	1
  8219     0F95  07F9               	addwf	___xxtofl@exp,f
  8220     0F96                     l2761:
  8221     0F96  3001               	movlw	1
  8222     0F97  07FA               	addwf	___xxtofl@arg,f
  8223     0F98  3000               	movlw	0
  8224     0F99  1803               	skipnc
  8225     0F9A  3001               	movlw	1
  8226     0F9B  07FB               	addwf	___xxtofl@arg+1,f
  8227     0F9C  3000               	movlw	0
  8228     0F9D  1803               	skipnc
  8229     0F9E  3001               	movlw	1
  8230     0F9F  07FC               	addwf	___xxtofl@arg+2,f
  8231     0FA0  3000               	movlw	0
  8232     0FA1  1803               	skipnc
  8233     0FA2  3001               	movlw	1
  8234     0FA3  07FD               	addwf	___xxtofl@arg+3,f
  8235     0FA4                     l2763:
  8236     0FA4  3001               	movlw	1
  8237     0FA5                     u2895:
  8238     0FA5  1003               	clrc
  8239     0FA6  0CFD               	rrf	___xxtofl@arg+3,f
  8240     0FA7  0CFC               	rrf	___xxtofl@arg+2,f
  8241     0FA8  0CFB               	rrf	___xxtofl@arg+1,f
  8242     0FA9  0CFA               	rrf	___xxtofl@arg,f
  8243     0FAA  3EFF               	addlw	-1
  8244     0FAB  1D03               	skipz
  8245     0FAC  2FA5               	goto	u2895
  8246     0FAD                     l1032:
  8247     0FAD  30FF               	movlw	255
  8248     0FAE  057D               	andwf	___xxtofl@arg+3,w
  8249     0FAF  1D03               	btfss	3,2
  8250     0FB0  2FB2               	goto	u2901
  8251     0FB1  2FB3               	goto	u2900
  8252     0FB2                     u2901:
  8253     0FB2  2F94               	goto	l2759
  8254     0FB3                     u2900:
  8255     0FB3  2FBF               	goto	l2767
  8256     0FB4                     l2765:
  8257     0FB4  3001               	movlw	1
  8258     0FB5  02F9               	subwf	___xxtofl@exp,f
  8259     0FB6  3001               	movlw	1
  8260     0FB7  00F4               	movwf	??___xxtofl
  8261     0FB8                     u2915:
  8262     0FB8  1003               	clrc
  8263     0FB9  0DFA               	rlf	___xxtofl@arg,f
  8264     0FBA  0DFB               	rlf	___xxtofl@arg+1,f
  8265     0FBB  0DFC               	rlf	___xxtofl@arg+2,f
  8266     0FBC  0DFD               	rlf	___xxtofl@arg+3,f
  8267     0FBD  0BF4               	decfsz	??___xxtofl,f
  8268     0FBE  2FB8               	goto	u2915
  8269     0FBF                     l2767:
  8270     0FBF  1BFC               	btfsc	___xxtofl@arg+2,7
  8271     0FC0  2FC2               	goto	u2921
  8272     0FC1  2FC3               	goto	u2920
  8273     0FC2                     u2921:
  8274     0FC2  2FC9               	goto	l1039
  8275     0FC3                     u2920:
  8276     0FC3                     l2769:
  8277     0FC3  3002               	movlw	2
  8278     0FC4  0279               	subwf	___xxtofl@exp,w
  8279     0FC5  1803               	skipnc
  8280     0FC6  2FC8               	goto	u2931
  8281     0FC7  2FC9               	goto	u2930
  8282     0FC8                     u2931:
  8283     0FC8  2FB4               	goto	l2765
  8284     0FC9                     u2930:
  8285     0FC9                     l1039:
  8286     0FC9  1879               	btfsc	___xxtofl@exp,0
  8287     0FCA  2FCC               	goto	u2941
  8288     0FCB  2FCD               	goto	u2940
  8289     0FCC                     u2941:
  8290     0FCC  2FD5               	goto	l1040
  8291     0FCD                     u2940:
  8292     0FCD                     l2771:
  8293     0FCD  30FF               	movlw	255
  8294     0FCE  05FA               	andwf	___xxtofl@arg,f
  8295     0FCF  30FF               	movlw	255
  8296     0FD0  05FB               	andwf	___xxtofl@arg+1,f
  8297     0FD1  307F               	movlw	127
  8298     0FD2  05FC               	andwf	___xxtofl@arg+2,f
  8299     0FD3  30FF               	movlw	255
  8300     0FD4  05FD               	andwf	___xxtofl@arg+3,f
  8301     0FD5                     l1040:
  8302     0FD5  1003               	clrc
  8303     0FD6  0CF9               	rrf	___xxtofl@exp,f
  8304     0FD7                     l2773:
  8305     0FD7  0879               	movf	___xxtofl@exp,w
  8306     0FD8  00F4               	movwf	??___xxtofl
  8307     0FD9  01F5               	clrf	??___xxtofl+1
  8308     0FDA  01F6               	clrf	??___xxtofl+2
  8309     0FDB  01F7               	clrf	??___xxtofl+3
  8310     0FDC  3018               	movlw	24
  8311     0FDD                     u2955:
  8312     0FDD  1003               	clrc
  8313     0FDE  0DF4               	rlf	??___xxtofl,f
  8314     0FDF  0DF5               	rlf	??___xxtofl+1,f
  8315     0FE0  0DF6               	rlf	??___xxtofl+2,f
  8316     0FE1  0DF7               	rlf	??___xxtofl+3,f
  8317     0FE2                     u2950:
  8318     0FE2  3EFF               	addlw	-1
  8319     0FE3  1D03               	skipz
  8320     0FE4  2FDD               	goto	u2955
  8321     0FE5  0874               	movf	??___xxtofl,w
  8322     0FE6  04FA               	iorwf	___xxtofl@arg,f
  8323     0FE7  0875               	movf	??___xxtofl+1,w
  8324     0FE8  04FB               	iorwf	___xxtofl@arg+1,f
  8325     0FE9  0876               	movf	??___xxtofl+2,w
  8326     0FEA  04FC               	iorwf	___xxtofl@arg+2,f
  8327     0FEB  0877               	movf	??___xxtofl+3,w
  8328     0FEC  04FD               	iorwf	___xxtofl@arg+3,f
  8329     0FED                     l2775:
  8330     0FED  0878               	movf	___xxtofl@sign,w
  8331     0FEE  1903               	btfsc	3,2
  8332     0FEF  2FF1               	goto	u2961
  8333     0FF0  2FF2               	goto	u2960
  8334     0FF1                     u2961:
  8335     0FF1  2FF7               	goto	l2781
  8336     0FF2                     u2960:
  8337     0FF2                     l2777:
  8338     0FF2  1FF3               	btfss	___xxtofl@val+3,7
  8339     0FF3  2FF5               	goto	u2971
  8340     0FF4  2FF6               	goto	u2970
  8341     0FF5                     u2971:
  8342     0FF5  2FF7               	goto	l2781
  8343     0FF6                     u2970:
  8344     0FF6                     l2779:
  8345     0FF6  17FD               	bsf	___xxtofl@arg+3,7
  8346     0FF7                     l2781:
  8347     0FF7  087D               	movf	___xxtofl@arg+3,w
  8348     0FF8  00F3               	movwf	?___xxtofl+3
  8349     0FF9  087C               	movf	___xxtofl@arg+2,w
  8350     0FFA  00F2               	movwf	?___xxtofl+2
  8351     0FFB  087B               	movf	___xxtofl@arg+1,w
  8352     0FFC  00F1               	movwf	?___xxtofl+1
  8353     0FFD  087A               	movf	___xxtofl@arg,w
  8354     0FFE  00F0               	movwf	?___xxtofl
  8355     0FFF                     l1028:
  8356     0FFF  0008               	return
  8357     1000                     __end_of___xxtofl:
  8358                           
  8359                           	psect	text51
  8360     0D88                     __ptext51:	
  8361 ;; *************** function ___fltol *****************
  8362 ;; Defined at:
  8363 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fltol.c"
  8364 ;; Parameters:    Size  Location     Type
  8365 ;;  f1              4   26[BANK0 ] unsigned char 
  8366 ;; Auto vars:     Size  Location     Type
  8367 ;;  exp1            1   35[BANK0 ] unsigned char 
  8368 ;;  sign1           1   34[BANK0 ] unsigned char 
  8369 ;; Return value:  Size  Location     Type
  8370 ;;                  4   26[BANK0 ] long 
  8371 ;; Registers used:
  8372 ;;		wreg, status,2, status,0
  8373 ;; Tracked objects:
  8374 ;;		On entry : 0/0
  8375 ;;		On exit  : 0/0
  8376 ;;		Unchanged: 0/0
  8377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8378 ;;      Params:         0       4       0       0       0
  8379 ;;      Locals:         0       2       0       0       0
  8380 ;;      Temps:          0       4       0       0       0
  8381 ;;      Totals:         0      10       0       0       0
  8382 ;;Total ram usage:       10 bytes
  8383 ;; Hardware stack levels used: 1
  8384 ;; This function calls:
  8385 ;;		Nothing
  8386 ;; This function is called by:
  8387 ;;		_Dash_board
  8388 ;; This function uses a non-reentrant model
  8389 ;;
  8390                           
  8391     0D88                     ___fltol:	
  8392                           ;psect for function ___fltol
  8393                           
  8394     0D88                     l2563:	
  8395                           ;incstack = 0
  8396                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8397                           
  8398     0D88  1003               	clrc
  8399     0D89  1283               	bcf	3,5	;RP0=0, select bank0
  8400     0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  8401     0D8B  0D3C               	rlf	___fltol@f1+2,w
  8402     0D8C  0D3D               	rlf	___fltol@f1+3,w
  8403     0D8D  00C3               	movwf	___fltol@exp1
  8404     0D8E  0843               	movf	___fltol@exp1,w
  8405     0D8F  1D03               	btfss	3,2
  8406     0D90  2D92               	goto	u2451
  8407     0D91  2D93               	goto	u2450
  8408     0D92                     u2451:
  8409     0D92  2D9C               	goto	l2569
  8410     0D93                     u2450:
  8411     0D93                     l2565:
  8412     0D93  3000               	movlw	0
  8413     0D94  00BD               	movwf	?___fltol+3
  8414     0D95  3000               	movlw	0
  8415     0D96  00BC               	movwf	?___fltol+2
  8416     0D97  3000               	movlw	0
  8417     0D98  00BB               	movwf	?___fltol+1
  8418     0D99  3000               	movlw	0
  8419     0D9A  00BA               	movwf	?___fltol
  8420     0D9B  2DFD               	goto	l779
  8421     0D9C                     l2569:
  8422     0D9C  083A               	movf	___fltol@f1,w
  8423     0D9D  00BE               	movwf	??___fltol
  8424     0D9E  083B               	movf	___fltol@f1+1,w
  8425     0D9F  00BF               	movwf	??___fltol+1
  8426     0DA0  083C               	movf	___fltol@f1+2,w
  8427     0DA1  00C0               	movwf	??___fltol+2
  8428     0DA2  083D               	movf	___fltol@f1+3,w
  8429     0DA3  00C1               	movwf	??___fltol+3
  8430     0DA4  301F               	movlw	31
  8431     0DA5                     u2465:
  8432     0DA5  1003               	clrc
  8433     0DA6  0CC1               	rrf	??___fltol+3,f
  8434     0DA7  0CC0               	rrf	??___fltol+2,f
  8435     0DA8  0CBF               	rrf	??___fltol+1,f
  8436     0DA9  0CBE               	rrf	??___fltol,f
  8437     0DAA                     u2460:
  8438     0DAA  3EFF               	addlw	-1
  8439     0DAB  1D03               	skipz
  8440     0DAC  2DA5               	goto	u2465
  8441     0DAD  083E               	movf	??___fltol,w
  8442     0DAE  00C2               	movwf	___fltol@sign1
  8443     0DAF                     l2571:
  8444     0DAF  17BC               	bsf	___fltol@f1+2,7
  8445     0DB0                     l2573:
  8446     0DB0  30FF               	movlw	255
  8447     0DB1  05BA               	andwf	___fltol@f1,f
  8448     0DB2  30FF               	movlw	255
  8449     0DB3  05BB               	andwf	___fltol@f1+1,f
  8450     0DB4  30FF               	movlw	255
  8451     0DB5  05BC               	andwf	___fltol@f1+2,f
  8452     0DB6  3000               	movlw	0
  8453     0DB7  05BD               	andwf	___fltol@f1+3,f
  8454     0DB8                     l2575:
  8455     0DB8  3096               	movlw	150
  8456     0DB9  02C3               	subwf	___fltol@exp1,f
  8457     0DBA                     l2577:
  8458     0DBA  1FC3               	btfss	___fltol@exp1,7
  8459     0DBB  2DBD               	goto	u2471
  8460     0DBC  2DBE               	goto	u2470
  8461     0DBD                     u2471:
  8462     0DBD  2DD6               	goto	l2587
  8463     0DBE                     u2470:
  8464     0DBE                     l2579:
  8465     0DBE  0843               	movf	___fltol@exp1,w
  8466     0DBF  3A80               	xorlw	128
  8467     0DC0  3E97               	addlw	151
  8468     0DC1  1803               	skipnc
  8469     0DC2  2DC4               	goto	u2481
  8470     0DC3  2DC5               	goto	u2480
  8471     0DC4                     u2481:
  8472     0DC4  2DC6               	goto	l2585
  8473     0DC5                     u2480:
  8474     0DC5  2D93               	goto	l2565
  8475     0DC6                     l2585:
  8476     0DC6  3001               	movlw	1
  8477     0DC7                     u2495:
  8478     0DC7  1003               	clrc
  8479     0DC8  0CBD               	rrf	___fltol@f1+3,f
  8480     0DC9  0CBC               	rrf	___fltol@f1+2,f
  8481     0DCA  0CBB               	rrf	___fltol@f1+1,f
  8482     0DCB  0CBA               	rrf	___fltol@f1,f
  8483     0DCC  3EFF               	addlw	-1
  8484     0DCD  1D03               	skipz
  8485     0DCE  2DC7               	goto	u2495
  8486     0DCF  3001               	movlw	1
  8487     0DD0  07C3               	addwf	___fltol@exp1,f
  8488     0DD1  1D03               	btfss	3,2
  8489     0DD2  2DD4               	goto	u2501
  8490     0DD3  2DD5               	goto	u2500
  8491     0DD4                     u2501:
  8492     0DD4  2DC6               	goto	l2585
  8493     0DD5                     u2500:
  8494     0DD5  2DED               	goto	l2595
  8495     0DD6                     l2587:
  8496     0DD6  3020               	movlw	32
  8497     0DD7  0243               	subwf	___fltol@exp1,w
  8498     0DD8  1C03               	skipc
  8499     0DD9  2DDB               	goto	u2511
  8500     0DDA  2DDC               	goto	u2510
  8501     0DDB                     u2511:
  8502     0DDB  2DE8               	goto	l786
  8503     0DDC                     u2510:
  8504     0DDC  2D93               	goto	l2565
  8505     0DDD                     l2593:
  8506     0DDD  3001               	movlw	1
  8507     0DDE  00BE               	movwf	??___fltol
  8508     0DDF                     u2525:
  8509     0DDF  1003               	clrc
  8510     0DE0  0DBA               	rlf	___fltol@f1,f
  8511     0DE1  0DBB               	rlf	___fltol@f1+1,f
  8512     0DE2  0DBC               	rlf	___fltol@f1+2,f
  8513     0DE3  0DBD               	rlf	___fltol@f1+3,f
  8514     0DE4  0BBE               	decfsz	??___fltol,f
  8515     0DE5  2DDF               	goto	u2525
  8516     0DE6  3001               	movlw	1
  8517     0DE7  02C3               	subwf	___fltol@exp1,f
  8518     0DE8                     l786:
  8519     0DE8  0843               	movf	___fltol@exp1,w
  8520     0DE9  1D03               	btfss	3,2
  8521     0DEA  2DEC               	goto	u2531
  8522     0DEB  2DED               	goto	u2530
  8523     0DEC                     u2531:
  8524     0DEC  2DDD               	goto	l2593
  8525     0DED                     u2530:
  8526     0DED                     l2595:
  8527     0DED  0842               	movf	___fltol@sign1,w
  8528     0DEE  1903               	btfsc	3,2
  8529     0DEF  2DF1               	goto	u2541
  8530     0DF0  2DF2               	goto	u2540
  8531     0DF1                     u2541:
  8532     0DF1  2DFD               	goto	l789
  8533     0DF2                     u2540:
  8534     0DF2                     l2597:
  8535     0DF2  09BA               	comf	___fltol@f1,f
  8536     0DF3  09BB               	comf	___fltol@f1+1,f
  8537     0DF4  09BC               	comf	___fltol@f1+2,f
  8538     0DF5  09BD               	comf	___fltol@f1+3,f
  8539     0DF6  0ABA               	incf	___fltol@f1,f
  8540     0DF7  1903               	skipnz
  8541     0DF8  0ABB               	incf	___fltol@f1+1,f
  8542     0DF9  1903               	skipnz
  8543     0DFA  0ABC               	incf	___fltol@f1+2,f
  8544     0DFB  1903               	skipnz
  8545     0DFC  0ABD               	incf	___fltol@f1+3,f
  8546     0DFD                     l789:
  8547     0DFD                     l779:
  8548     0DFD  0008               	return
  8549     0DFE                     __end_of___fltol:
  8550                           
  8551                           	psect	text52
  8552     060F                     __ptext52:	
  8553 ;; *************** function ___fldiv *****************
  8554 ;; Defined at:
  8555 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcdiv.c"
  8556 ;; Parameters:    Size  Location     Type
  8557 ;;  a               4    0[BANK0 ] long 
  8558 ;;  b               4    4[BANK0 ] long 
  8559 ;; Auto vars:     Size  Location     Type
  8560 ;;  grs             4   20[BANK0 ] unsigned long 
  8561 ;;  rem             4   13[BANK0 ] unsigned long 
  8562 ;;  new_exp         2   18[BANK0 ] short 
  8563 ;;  aexp            1   25[BANK0 ] unsigned char 
  8564 ;;  bexp            1   24[BANK0 ] unsigned char 
  8565 ;;  sign            1   17[BANK0 ] unsigned char 
  8566 ;; Return value:  Size  Location     Type
  8567 ;;                  4    0[BANK0 ] unsigned char 
  8568 ;; Registers used:
  8569 ;;		wreg, status,2, status,0, btemp+1
  8570 ;; Tracked objects:
  8571 ;;		On entry : 0/0
  8572 ;;		On exit  : 0/0
  8573 ;;		Unchanged: 0/0
  8574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8575 ;;      Params:         0       8       0       0       0
  8576 ;;      Locals:         0      13       0       0       0
  8577 ;;      Temps:          0       5       0       0       0
  8578 ;;      Totals:         0      26       0       0       0
  8579 ;;Total ram usage:       26 bytes
  8580 ;; Hardware stack levels used: 1
  8581 ;; This function calls:
  8582 ;;		Nothing
  8583 ;; This function is called by:
  8584 ;;		_Dash_board
  8585 ;; This function uses a non-reentrant model
  8586 ;;
  8587                           
  8588     060F                     ___fldiv:	
  8589                           ;psect for function ___fldiv
  8590                           
  8591     060F                     l2599:	
  8592                           ;incstack = 0
  8593                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  8594                           
  8595     060F  1283               	bcf	3,5	;RP0=0, select bank0
  8596     0610  1303               	bcf	3,6	;RP1=0, select bank0
  8597     0611  0827               	movf	___fldiv@b+3,w
  8598     0612  00B1               	movwf	___fldiv@sign
  8599     0613                     l2601:
  8600     0613  3080               	movlw	128
  8601     0614  05B1               	andwf	___fldiv@sign,f
  8602     0615                     l2603:
  8603     0615  0827               	movf	___fldiv@b+3,w
  8604     0616  00A8               	movwf	??___fldiv
  8605     0617  0728               	addwf	??___fldiv,w
  8606     0618  00B8               	movwf	___fldiv@bexp
  8607     0619                     l2605:
  8608     0619  1FA6               	btfss	___fldiv@b+2,7
  8609     061A  2E1C               	goto	u2551
  8610     061B  2E1D               	goto	u2550
  8611     061C                     u2551:
  8612     061C  2E1E               	goto	l2609
  8613     061D                     u2550:
  8614     061D                     l2607:
  8615     061D  1438               	bsf	___fldiv@bexp,0
  8616     061E                     l2609:
  8617     061E  0838               	movf	___fldiv@bexp,w
  8618     061F  1903               	btfsc	3,2
  8619     0620  2E22               	goto	u2561
  8620     0621  2E23               	goto	u2560
  8621     0622                     u2561:
  8622     0622  2E33               	goto	l2619
  8623     0623                     u2560:
  8624     0623                     l2611:
  8625     0623  0A38               	incf	___fldiv@bexp,w
  8626     0624  1D03               	btfss	3,2
  8627     0625  2E27               	goto	u2571
  8628     0626  2E28               	goto	u2570
  8629     0627                     u2571:
  8630     0627  2E30               	goto	l2615
  8631     0628                     u2570:
  8632     0628                     l2613:
  8633     0628  3000               	movlw	0
  8634     0629  00A7               	movwf	___fldiv@b+3
  8635     062A  3000               	movlw	0
  8636     062B  00A6               	movwf	___fldiv@b+2
  8637     062C  3000               	movlw	0
  8638     062D  00A5               	movwf	___fldiv@b+1
  8639     062E  3000               	movlw	0
  8640     062F  00A4               	movwf	___fldiv@b
  8641     0630                     l2615:
  8642     0630  17A6               	bsf	___fldiv@b+2,7
  8643     0631                     l2617:
  8644     0631  01A7               	clrf	___fldiv@b+3
  8645     0632  2E3B               	goto	l2621
  8646     0633                     l2619:
  8647     0633  3000               	movlw	0
  8648     0634  00A7               	movwf	___fldiv@b+3
  8649     0635  3000               	movlw	0
  8650     0636  00A6               	movwf	___fldiv@b+2
  8651     0637  3000               	movlw	0
  8652     0638  00A5               	movwf	___fldiv@b+1
  8653     0639  3000               	movlw	0
  8654     063A  00A4               	movwf	___fldiv@b
  8655     063B                     l2621:
  8656     063B  0823               	movf	___fldiv@a+3,w
  8657     063C  3980               	andlw	128
  8658     063D  06B1               	xorwf	___fldiv@sign,f
  8659     063E                     l2623:
  8660     063E  0823               	movf	___fldiv@a+3,w
  8661     063F  00A8               	movwf	??___fldiv
  8662     0640  0728               	addwf	??___fldiv,w
  8663     0641  00B9               	movwf	___fldiv@aexp
  8664     0642                     l2625:
  8665     0642  1FA2               	btfss	___fldiv@a+2,7
  8666     0643  2E45               	goto	u2581
  8667     0644  2E46               	goto	u2580
  8668     0645                     u2581:
  8669     0645  2E47               	goto	l2629
  8670     0646                     u2580:
  8671     0646                     l2627:
  8672     0646  1439               	bsf	___fldiv@aexp,0
  8673     0647                     l2629:
  8674     0647  0839               	movf	___fldiv@aexp,w
  8675     0648  1903               	btfsc	3,2
  8676     0649  2E4B               	goto	u2591
  8677     064A  2E4C               	goto	u2590
  8678     064B                     u2591:
  8679     064B  2E5C               	goto	l2639
  8680     064C                     u2590:
  8681     064C                     l2631:
  8682     064C  0A39               	incf	___fldiv@aexp,w
  8683     064D  1D03               	btfss	3,2
  8684     064E  2E50               	goto	u2601
  8685     064F  2E51               	goto	u2600
  8686     0650                     u2601:
  8687     0650  2E59               	goto	l2635
  8688     0651                     u2600:
  8689     0651                     l2633:
  8690     0651  3000               	movlw	0
  8691     0652  00A3               	movwf	___fldiv@a+3
  8692     0653  3000               	movlw	0
  8693     0654  00A2               	movwf	___fldiv@a+2
  8694     0655  3000               	movlw	0
  8695     0656  00A1               	movwf	___fldiv@a+1
  8696     0657  3000               	movlw	0
  8697     0658  00A0               	movwf	___fldiv@a
  8698     0659                     l2635:
  8699     0659  17A2               	bsf	___fldiv@a+2,7
  8700     065A                     l2637:
  8701     065A  01A3               	clrf	___fldiv@a+3
  8702     065B  2E64               	goto	l942
  8703     065C                     l2639:
  8704     065C  3000               	movlw	0
  8705     065D  00A3               	movwf	___fldiv@a+3
  8706     065E  3000               	movlw	0
  8707     065F  00A2               	movwf	___fldiv@a+2
  8708     0660  3000               	movlw	0
  8709     0661  00A1               	movwf	___fldiv@a+1
  8710     0662  3000               	movlw	0
  8711     0663  00A0               	movwf	___fldiv@a
  8712     0664                     l942:
  8713     0664  0823               	movf	___fldiv@a+3,w
  8714     0665  0422               	iorwf	___fldiv@a+2,w
  8715     0666  0421               	iorwf	___fldiv@a+1,w
  8716     0667  0420               	iorwf	___fldiv@a,w
  8717     0668  1D03               	skipz
  8718     0669  2E6B               	goto	u2611
  8719     066A  2E6C               	goto	u2610
  8720     066B                     u2611:
  8721     066B  2E83               	goto	l2649
  8722     066C                     u2610:
  8723     066C                     l2641:
  8724     066C  3000               	movlw	0
  8725     066D  00A7               	movwf	___fldiv@b+3
  8726     066E  3000               	movlw	0
  8727     066F  00A6               	movwf	___fldiv@b+2
  8728     0670  3000               	movlw	0
  8729     0671  00A5               	movwf	___fldiv@b+1
  8730     0672  3000               	movlw	0
  8731     0673  00A4               	movwf	___fldiv@b
  8732     0674  3080               	movlw	128
  8733     0675  04A6               	iorwf	___fldiv@b+2,f
  8734     0676  307F               	movlw	127
  8735     0677  04A7               	iorwf	___fldiv@b+3,f
  8736     0678                     l2643:
  8737     0678  0831               	movf	___fldiv@sign,w
  8738     0679  04A7               	iorwf	___fldiv@b+3,f
  8739     067A                     l2645:
  8740     067A  0827               	movf	___fldiv@b+3,w
  8741     067B  00A3               	movwf	?___fldiv+3
  8742     067C  0826               	movf	___fldiv@b+2,w
  8743     067D  00A2               	movwf	?___fldiv+2
  8744     067E  0825               	movf	___fldiv@b+1,w
  8745     067F  00A1               	movwf	?___fldiv+1
  8746     0680  0824               	movf	___fldiv@b,w
  8747     0681  00A0               	movwf	?___fldiv
  8748     0682  2FD8               	goto	l944
  8749     0683                     l2649:
  8750     0683  0838               	movf	___fldiv@bexp,w
  8751     0684  1D03               	btfss	3,2
  8752     0685  2E87               	goto	u2621
  8753     0686  2E88               	goto	u2620
  8754     0687                     u2621:
  8755     0687  2E91               	goto	l2655
  8756     0688                     u2620:
  8757     0688                     l2651:
  8758     0688  3000               	movlw	0
  8759     0689  00A3               	movwf	?___fldiv+3
  8760     068A  3000               	movlw	0
  8761     068B  00A2               	movwf	?___fldiv+2
  8762     068C  3000               	movlw	0
  8763     068D  00A1               	movwf	?___fldiv+1
  8764     068E  3000               	movlw	0
  8765     068F  00A0               	movwf	?___fldiv
  8766     0690  2FD8               	goto	l944
  8767     0691                     l2655:
  8768     0691  0838               	movf	___fldiv@bexp,w
  8769     0692  00A8               	movwf	??___fldiv
  8770     0693  01A9               	clrf	??___fldiv+1
  8771     0694  0829               	movf	??___fldiv+1,w
  8772     0695  00AB               	movwf	??___fldiv+3
  8773     0696  0839               	movf	___fldiv@aexp,w
  8774     0697  0228               	subwf	??___fldiv,w
  8775     0698  00AA               	movwf	??___fldiv+2
  8776     0699  1C03               	skipc
  8777     069A  03AB               	decf	??___fldiv+3,f
  8778     069B  082A               	movf	??___fldiv+2,w
  8779     069C  3E7F               	addlw	127
  8780     069D  00B2               	movwf	___fldiv@new_exp
  8781     069E  082B               	movf	??___fldiv+3,w
  8782     069F  1803               	skipnc
  8783     06A0  3E01               	addlw	1
  8784     06A1  3E00               	addlw	0
  8785     06A2  00B3               	movwf	___fldiv@new_exp+1
  8786     06A3                     l2657:
  8787     06A3  0827               	movf	___fldiv@b+3,w
  8788     06A4  00B0               	movwf	___fldiv@rem+3
  8789     06A5  0826               	movf	___fldiv@b+2,w
  8790     06A6  00AF               	movwf	___fldiv@rem+2
  8791     06A7  0825               	movf	___fldiv@b+1,w
  8792     06A8  00AE               	movwf	___fldiv@rem+1
  8793     06A9  0824               	movf	___fldiv@b,w
  8794     06AA  00AD               	movwf	___fldiv@rem
  8795     06AB                     l2659:
  8796     06AB  3000               	movlw	0
  8797     06AC  00A7               	movwf	___fldiv@b+3
  8798     06AD  3000               	movlw	0
  8799     06AE  00A6               	movwf	___fldiv@b+2
  8800     06AF  3000               	movlw	0
  8801     06B0  00A5               	movwf	___fldiv@b+1
  8802     06B1  3000               	movlw	0
  8803     06B2  00A4               	movwf	___fldiv@b
  8804     06B3                     l2661:
  8805     06B3  3000               	movlw	0
  8806     06B4  00B7               	movwf	___fldiv@grs+3
  8807     06B5  3000               	movlw	0
  8808     06B6  00B6               	movwf	___fldiv@grs+2
  8809     06B7  3000               	movlw	0
  8810     06B8  00B5               	movwf	___fldiv@grs+1
  8811     06B9  3000               	movlw	0
  8812     06BA  00B4               	movwf	___fldiv@grs
  8813     06BB                     l2663:
  8814     06BB  01B9               	clrf	___fldiv@aexp
  8815     06BC  2F05               	goto	l2683
  8816     06BD                     l2665:
  8817     06BD  0839               	movf	___fldiv@aexp,w
  8818     06BE  1903               	btfsc	3,2
  8819     06BF  2EC1               	goto	u2631
  8820     06C0  2EC2               	goto	u2630
  8821     06C1                     u2631:
  8822     06C1  2EE2               	goto	l2675
  8823     06C2                     u2630:
  8824     06C2                     l2667:
  8825     06C2  3001               	movlw	1
  8826     06C3  00A8               	movwf	??___fldiv
  8827     06C4                     u2645:
  8828     06C4  1003               	clrc
  8829     06C5  0DAD               	rlf	___fldiv@rem,f
  8830     06C6  0DAE               	rlf	___fldiv@rem+1,f
  8831     06C7  0DAF               	rlf	___fldiv@rem+2,f
  8832     06C8  0DB0               	rlf	___fldiv@rem+3,f
  8833     06C9  0BA8               	decfsz	??___fldiv,f
  8834     06CA  2EC4               	goto	u2645
  8835     06CB  3001               	movlw	1
  8836     06CC  00A8               	movwf	??___fldiv
  8837     06CD                     u2655:
  8838     06CD  1003               	clrc
  8839     06CE  0DA4               	rlf	___fldiv@b,f
  8840     06CF  0DA5               	rlf	___fldiv@b+1,f
  8841     06D0  0DA6               	rlf	___fldiv@b+2,f
  8842     06D1  0DA7               	rlf	___fldiv@b+3,f
  8843     06D2  0BA8               	decfsz	??___fldiv,f
  8844     06D3  2ECD               	goto	u2655
  8845     06D4                     l2669:
  8846     06D4  1FB7               	btfss	___fldiv@grs+3,7
  8847     06D5  2ED7               	goto	u2661
  8848     06D6  2ED8               	goto	u2660
  8849     06D7                     u2661:
  8850     06D7  2ED9               	goto	l2673
  8851     06D8                     u2660:
  8852     06D8                     l2671:
  8853     06D8  1424               	bsf	___fldiv@b,0
  8854     06D9                     l2673:
  8855     06D9  3001               	movlw	1
  8856     06DA  00A8               	movwf	??___fldiv
  8857     06DB                     u2675:
  8858     06DB  1003               	clrc
  8859     06DC  0DB4               	rlf	___fldiv@grs,f
  8860     06DD  0DB5               	rlf	___fldiv@grs+1,f
  8861     06DE  0DB6               	rlf	___fldiv@grs+2,f
  8862     06DF  0DB7               	rlf	___fldiv@grs+3,f
  8863     06E0  0BA8               	decfsz	??___fldiv,f
  8864     06E1  2EDB               	goto	u2675
  8865     06E2                     l2675:
  8866     06E2  0823               	movf	___fldiv@a+3,w
  8867     06E3  0230               	subwf	___fldiv@rem+3,w
  8868     06E4  1D03               	skipz
  8869     06E5  2EF0               	goto	u2685
  8870     06E6  0822               	movf	___fldiv@a+2,w
  8871     06E7  022F               	subwf	___fldiv@rem+2,w
  8872     06E8  1D03               	skipz
  8873     06E9  2EF0               	goto	u2685
  8874     06EA  0821               	movf	___fldiv@a+1,w
  8875     06EB  022E               	subwf	___fldiv@rem+1,w
  8876     06EC  1D03               	skipz
  8877     06ED  2EF0               	goto	u2685
  8878     06EE  0820               	movf	___fldiv@a,w
  8879     06EF  022D               	subwf	___fldiv@rem,w
  8880     06F0                     u2685:
  8881     06F0  1C03               	skipc
  8882     06F1  2EF3               	goto	u2681
  8883     06F2  2EF4               	goto	u2680
  8884     06F3                     u2681:
  8885     06F3  2F03               	goto	l2681
  8886     06F4                     u2680:
  8887     06F4                     l2677:
  8888     06F4  1737               	bsf	___fldiv@grs+3,6
  8889     06F5                     l2679:
  8890     06F5  0820               	movf	___fldiv@a,w
  8891     06F6  02AD               	subwf	___fldiv@rem,f
  8892     06F7  0821               	movf	___fldiv@a+1,w
  8893     06F8  1C03               	skipc
  8894     06F9  0F21               	incfsz	___fldiv@a+1,w
  8895     06FA  02AE               	subwf	___fldiv@rem+1,f
  8896     06FB  0822               	movf	___fldiv@a+2,w
  8897     06FC  1C03               	skipc
  8898     06FD  0F22               	incfsz	___fldiv@a+2,w
  8899     06FE  02AF               	subwf	___fldiv@rem+2,f
  8900     06FF  0823               	movf	___fldiv@a+3,w
  8901     0700  1C03               	skipc
  8902     0701  0F23               	incfsz	___fldiv@a+3,w
  8903     0702  02B0               	subwf	___fldiv@rem+3,f
  8904     0703                     l2681:
  8905     0703  3001               	movlw	1
  8906     0704  07B9               	addwf	___fldiv@aexp,f
  8907     0705                     l2683:
  8908     0705  301A               	movlw	26
  8909     0706  0239               	subwf	___fldiv@aexp,w
  8910     0707  1C03               	skipc
  8911     0708  2F0A               	goto	u2691
  8912     0709  2F0B               	goto	u2690
  8913     070A                     u2691:
  8914     070A  2EBD               	goto	l2665
  8915     070B                     u2690:
  8916     070B                     l2685:
  8917     070B  0830               	movf	___fldiv@rem+3,w
  8918     070C  042F               	iorwf	___fldiv@rem+2,w
  8919     070D  042E               	iorwf	___fldiv@rem+1,w
  8920     070E  042D               	iorwf	___fldiv@rem,w
  8921     070F  1903               	skipnz
  8922     0710  2F12               	goto	u2701
  8923     0711  2F13               	goto	u2700
  8924     0712                     u2701:
  8925     0712  2F32               	goto	l2699
  8926     0713                     u2700:
  8927     0713                     l2687:
  8928     0713  1434               	bsf	___fldiv@grs,0
  8929     0714  2F32               	goto	l2699
  8930     0715                     l2689:
  8931     0715  3001               	movlw	1
  8932     0716  00A8               	movwf	??___fldiv
  8933     0717                     u2715:
  8934     0717  1003               	clrc
  8935     0718  0DA4               	rlf	___fldiv@b,f
  8936     0719  0DA5               	rlf	___fldiv@b+1,f
  8937     071A  0DA6               	rlf	___fldiv@b+2,f
  8938     071B  0DA7               	rlf	___fldiv@b+3,f
  8939     071C  0BA8               	decfsz	??___fldiv,f
  8940     071D  2F17               	goto	u2715
  8941     071E                     l2691:
  8942     071E  1FB7               	btfss	___fldiv@grs+3,7
  8943     071F  2F21               	goto	u2721
  8944     0720  2F22               	goto	u2720
  8945     0721                     u2721:
  8946     0721  2F23               	goto	l2695
  8947     0722                     u2720:
  8948     0722                     l2693:
  8949     0722  1424               	bsf	___fldiv@b,0
  8950     0723                     l2695:
  8951     0723  3001               	movlw	1
  8952     0724  00A8               	movwf	??___fldiv
  8953     0725                     u2735:
  8954     0725  1003               	clrc
  8955     0726  0DB4               	rlf	___fldiv@grs,f
  8956     0727  0DB5               	rlf	___fldiv@grs+1,f
  8957     0728  0DB6               	rlf	___fldiv@grs+2,f
  8958     0729  0DB7               	rlf	___fldiv@grs+3,f
  8959     072A  0BA8               	decfsz	??___fldiv,f
  8960     072B  2F25               	goto	u2735
  8961     072C                     l2697:
  8962     072C  30FF               	movlw	255
  8963     072D  07B2               	addwf	___fldiv@new_exp,f
  8964     072E  1803               	skipnc
  8965     072F  0AB3               	incf	___fldiv@new_exp+1,f
  8966     0730  30FF               	movlw	255
  8967     0731  07B3               	addwf	___fldiv@new_exp+1,f
  8968     0732                     l2699:
  8969     0732  1FA6               	btfss	___fldiv@b+2,7
  8970     0733  2F35               	goto	u2741
  8971     0734  2F36               	goto	u2740
  8972     0735                     u2741:
  8973     0735  2F15               	goto	l2689
  8974     0736                     u2740:
  8975     0736                     l2701:
  8976     0736  01B9               	clrf	___fldiv@aexp
  8977     0737                     l2703:
  8978     0737  1FB7               	btfss	___fldiv@grs+3,7
  8979     0738  2F3A               	goto	u2751
  8980     0739  2F3B               	goto	u2750
  8981     073A                     u2751:
  8982     073A  2F57               	goto	l2711
  8983     073B                     u2750:
  8984     073B                     l2705:
  8985     073B  30FF               	movlw	255
  8986     073C  0534               	andwf	___fldiv@grs,w
  8987     073D  00A8               	movwf	??___fldiv
  8988     073E  30FF               	movlw	255
  8989     073F  0535               	andwf	___fldiv@grs+1,w
  8990     0740  00A9               	movwf	??___fldiv+1
  8991     0741  30FF               	movlw	255
  8992     0742  0536               	andwf	___fldiv@grs+2,w
  8993     0743  00AA               	movwf	??___fldiv+2
  8994     0744  307F               	movlw	127
  8995     0745  0537               	andwf	___fldiv@grs+3,w
  8996     0746  00AB               	movwf	??___fldiv+3
  8997     0747  082B               	movf	??___fldiv+3,w
  8998     0748  042A               	iorwf	??___fldiv+2,w
  8999     0749  0429               	iorwf	??___fldiv+1,w
  9000     074A  0428               	iorwf	??___fldiv,w
  9001     074B  1903               	skipnz
  9002     074C  2F4E               	goto	u2761
  9003     074D  2F4F               	goto	u2760
  9004     074E                     u2761:
  9005     074E  2F52               	goto	l958
  9006     074F                     u2760:
  9007     074F                     l2707:
  9008     074F  3001               	movlw	1
  9009     0750  00B9               	movwf	___fldiv@aexp
  9010     0751  2F57               	goto	l2711
  9011     0752                     l958:
  9012     0752  1C24               	btfss	___fldiv@b,0
  9013     0753  2F55               	goto	u2771
  9014     0754  2F56               	goto	u2770
  9015     0755                     u2771:
  9016     0755  2F57               	goto	l2711
  9017     0756                     u2770:
  9018     0756  2F4F               	goto	l2707
  9019     0757                     l2711:
  9020     0757  0839               	movf	___fldiv@aexp,w
  9021     0758  1903               	btfsc	3,2
  9022     0759  2F5B               	goto	u2781
  9023     075A  2F5C               	goto	u2780
  9024     075B                     u2781:
  9025     075B  2F8D               	goto	l2721
  9026     075C                     u2780:
  9027     075C                     l2713:
  9028     075C  3001               	movlw	1
  9029     075D  07A4               	addwf	___fldiv@b,f
  9030     075E  3000               	movlw	0
  9031     075F  1803               	skipnc
  9032     0760  3001               	movlw	1
  9033     0761  07A5               	addwf	___fldiv@b+1,f
  9034     0762  3000               	movlw	0
  9035     0763  1803               	skipnc
  9036     0764  3001               	movlw	1
  9037     0765  07A6               	addwf	___fldiv@b+2,f
  9038     0766  3000               	movlw	0
  9039     0767  1803               	skipnc
  9040     0768  3001               	movlw	1
  9041     0769  07A7               	addwf	___fldiv@b+3,f
  9042     076A                     l2715:
  9043     076A  1C27               	btfss	___fldiv@b+3,0
  9044     076B  2F6D               	goto	u2791
  9045     076C  2F6E               	goto	u2790
  9046     076D                     u2791:
  9047     076D  2F8D               	goto	l2721
  9048     076E                     u2790:
  9049     076E                     l2717:
  9050     076E  0824               	movf	___fldiv@b,w
  9051     076F  00A8               	movwf	??___fldiv
  9052     0770  0825               	movf	___fldiv@b+1,w
  9053     0771  00A9               	movwf	??___fldiv+1
  9054     0772  0826               	movf	___fldiv@b+2,w
  9055     0773  00AA               	movwf	??___fldiv+2
  9056     0774  0827               	movf	___fldiv@b+3,w
  9057     0775  00AB               	movwf	??___fldiv+3
  9058     0776  3001               	movlw	1
  9059     0777  00AC               	movwf	??___fldiv+4
  9060     0778                     u2805:
  9061     0778  0D2B               	rlf	??___fldiv+3,w
  9062     0779  0CAB               	rrf	??___fldiv+3,f
  9063     077A  0CAA               	rrf	??___fldiv+2,f
  9064     077B  0CA9               	rrf	??___fldiv+1,f
  9065     077C  0CA8               	rrf	??___fldiv,f
  9066     077D                     u2800:
  9067     077D  0BAC               	decfsz	??___fldiv+4,f
  9068     077E  2F78               	goto	u2805
  9069     077F  082B               	movf	??___fldiv+3,w
  9070     0780  00A7               	movwf	___fldiv@b+3
  9071     0781  082A               	movf	??___fldiv+2,w
  9072     0782  00A6               	movwf	___fldiv@b+2
  9073     0783  0829               	movf	??___fldiv+1,w
  9074     0784  00A5               	movwf	___fldiv@b+1
  9075     0785  0828               	movf	??___fldiv,w
  9076     0786  00A4               	movwf	___fldiv@b
  9077     0787                     l2719:
  9078     0787  3001               	movlw	1
  9079     0788  07B2               	addwf	___fldiv@new_exp,f
  9080     0789  1803               	skipnc
  9081     078A  0AB3               	incf	___fldiv@new_exp+1,f
  9082     078B  3000               	movlw	0
  9083     078C  07B3               	addwf	___fldiv@new_exp+1,f
  9084     078D                     l2721:
  9085     078D  0833               	movf	___fldiv@new_exp+1,w
  9086     078E  3A80               	xorlw	128
  9087     078F  00FF               	movwf	btemp+1
  9088     0790  3080               	movlw	128
  9089     0791  027F               	subwf	btemp+1,w
  9090     0792  1D03               	skipz
  9091     0793  2F96               	goto	u2815
  9092     0794  30FF               	movlw	255
  9093     0795  0232               	subwf	___fldiv@new_exp,w
  9094     0796                     u2815:
  9095     0796  1C03               	skipc
  9096     0797  2F99               	goto	u2811
  9097     0798  2F9A               	goto	u2810
  9098     0799                     u2811:
  9099     0799  2FA8               	goto	l2725
  9100     079A                     u2810:
  9101     079A                     l2723:
  9102     079A  30FF               	movlw	255
  9103     079B  1283               	bcf	3,5	;RP0=0, select bank0
  9104     079C  1303               	bcf	3,6	;RP1=0, select bank0
  9105     079D  00B2               	movwf	___fldiv@new_exp
  9106     079E  3000               	movlw	0
  9107     079F  00B3               	movwf	___fldiv@new_exp+1
  9108     07A0  3000               	movlw	0
  9109     07A1  00A7               	movwf	___fldiv@b+3
  9110     07A2  3000               	movlw	0
  9111     07A3  00A6               	movwf	___fldiv@b+2
  9112     07A4  3000               	movlw	0
  9113     07A5  00A5               	movwf	___fldiv@b+1
  9114     07A6  3000               	movlw	0
  9115     07A7  00A4               	movwf	___fldiv@b
  9116     07A8                     l2725:
  9117     07A8  1283               	bcf	3,5	;RP0=0, select bank0
  9118     07A9  1303               	bcf	3,6	;RP1=0, select bank0
  9119     07AA  0833               	movf	___fldiv@new_exp+1,w
  9120     07AB  3A80               	xorlw	128
  9121     07AC  00FF               	movwf	btemp+1
  9122     07AD  3080               	movlw	128
  9123     07AE  027F               	subwf	btemp+1,w
  9124     07AF  1D03               	skipz
  9125     07B0  2FB3               	goto	u2825
  9126     07B1  3001               	movlw	1
  9127     07B2  0232               	subwf	___fldiv@new_exp,w
  9128     07B3                     u2825:
  9129     07B3  1803               	skipnc
  9130     07B4  2FB6               	goto	u2821
  9131     07B5  2FB7               	goto	u2820
  9132     07B6                     u2821:
  9133     07B6  2FC4               	goto	l964
  9134     07B7                     u2820:
  9135     07B7                     l2727:
  9136     07B7  1283               	bcf	3,5	;RP0=0, select bank0
  9137     07B8  1303               	bcf	3,6	;RP1=0, select bank0
  9138     07B9  01B2               	clrf	___fldiv@new_exp
  9139     07BA  01B3               	clrf	___fldiv@new_exp+1
  9140     07BB                     l2729:
  9141     07BB  3000               	movlw	0
  9142     07BC  00A7               	movwf	___fldiv@b+3
  9143     07BD  3000               	movlw	0
  9144     07BE  00A6               	movwf	___fldiv@b+2
  9145     07BF  3000               	movlw	0
  9146     07C0  00A5               	movwf	___fldiv@b+1
  9147     07C1  3000               	movlw	0
  9148     07C2  00A4               	movwf	___fldiv@b
  9149     07C3                     l2731:
  9150     07C3  01B1               	clrf	___fldiv@sign
  9151     07C4                     l964:
  9152     07C4  1283               	bcf	3,5	;RP0=0, select bank0
  9153     07C5  1303               	bcf	3,6	;RP1=0, select bank0
  9154     07C6  0832               	movf	___fldiv@new_exp,w
  9155     07C7  00B8               	movwf	___fldiv@bexp
  9156     07C8                     l2733:
  9157     07C8  1C38               	btfss	___fldiv@bexp,0
  9158     07C9  2FCB               	goto	u2831
  9159     07CA  2FCC               	goto	u2830
  9160     07CB                     u2831:
  9161     07CB  2FCE               	goto	l2737
  9162     07CC                     u2830:
  9163     07CC                     l2735:
  9164     07CC  17A6               	bsf	___fldiv@b+2,7
  9165     07CD  2FD0               	goto	l966
  9166     07CE                     l2737:
  9167     07CE  307F               	movlw	127
  9168     07CF  05A6               	andwf	___fldiv@b+2,f
  9169     07D0                     l966:
  9170     07D0  0838               	movf	___fldiv@bexp,w
  9171     07D1  00A8               	movwf	??___fldiv
  9172     07D2  1003               	clrc
  9173     07D3  0C28               	rrf	??___fldiv,w
  9174     07D4  00A7               	movwf	___fldiv@b+3
  9175     07D5  0831               	movf	___fldiv@sign,w
  9176     07D6  04A7               	iorwf	___fldiv@b+3,f
  9177     07D7  2E7A               	goto	l2645
  9178     07D8                     l944:
  9179     07D8  0008               	return
  9180     07D9                     __end_of___fldiv:
  9181     0002                     ___latbits      equ	2
  9182     007E                     btemp           set	126	;btemp
  9183     007E                     wtemp0          set	126
  9184                           
  9185                           	psect	idloc
  9186                           
  9187                           ;Config register IDLOC0 @ 0x2000
  9188                           ;	unspecified, using default values
  9189     2000                     	org	8192
  9190     2000  3FFF               	dw	16383
  9191                           
  9192                           ;Config register IDLOC1 @ 0x2001
  9193                           ;	unspecified, using default values
  9194     2001                     	org	8193
  9195     2001  3FFF               	dw	16383
  9196                           
  9197                           ;Config register IDLOC2 @ 0x2002
  9198                           ;	unspecified, using default values
  9199     2002                     	org	8194
  9200     2002  3FFF               	dw	16383
  9201                           
  9202                           ;Config register IDLOC3 @ 0x2003
  9203                           ;	unspecified, using default values
  9204     2003                     	org	8195
  9205     2003  3FFF               	dw	16383
  9206                           
  9207                           	psect	config
  9208                           
  9209                           ;Config register CONFIG @ 0x2007
  9210                           ;	Oscillator Selection bits
  9211                           ;	FOSC = 0x3, unprogrammed default
  9212                           ;	Watchdog Timer Enable bit
  9213                           ;	WDTE = OFF, WDT disabled
  9214                           ;	Power-up Timer Enable bit
  9215                           ;	PWRTE = 0x1, unprogrammed default
  9216                           ;	Brown-out Reset Enable bit
  9217                           ;	BOREN = 0x1, unprogrammed default
  9218                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  9219                           ;	LVP = 0x1, unprogrammed default
  9220                           ;	Data EEPROM Memory Code Protection bit
  9221                           ;	CPD = 0x1, unprogrammed default
  9222                           ;	Flash Program Memory Write Enable bits
  9223                           ;	WRT = 0x3, unprogrammed default
  9224                           ;	In-Circuit Debugger Mode bit
  9225                           ;	DEBUG = 0x1, unprogrammed default
  9226                           ;	Flash Program Memory Code Protection bit
  9227                           ;	CP = 0x1, unprogrammed default
  9228     2007                     	org	8199
  9229     2007  3FFB               	dw	16379

Data Sizes:
    Strings     193
    Constant    0
    Data        37
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     41      80
    BANK1            80      0      30
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    clcd_print@str	PTR const unsigned char  size(2) Largest target is 30
		 -> events(BANK1[30]), STR_1(CODE[17]), STR_13(CODE[11]), STR_14(CODE[17]), 
		 -> STR_15(CODE[15]), STR_16(CODE[14]), STR_17(CODE[9]), STR_18(CODE[17]), 
		 -> STR_19(CODE[17]), STR_2(CODE[17]), STR_20(CODE[17]), STR_21(CODE[17]), 
		 -> STR_22(CODE[17]), STR_3(CODE[17]), STR_4(CODE[17]), STR_5(CODE[17]), 
		 -> STR_6(CODE[17]), STR_7(CODE[17]), STR_8(CODE[15]), time(BANK0[10]), 
		 -> view_log@event_data(BANK0[3]), view_log@speed_data(BANK0[3]), view_log@time_data(BANK0[10]), 

    display_time@clock_register	PTR unsigned char  size(1) Largest target is 3
		 -> Dash_board@Clock_register(BANK0[3]), set_time@Clock_register(BANK0[3]), 

    get_time@clock_register	PTR unsigned char  size(1) Largest target is 3
		 -> Dash_board@Clock_register(BANK0[3]), set_time@Clock_register(BANK0[3]), 

    Main_menu	PTR unsigned char [5] size(1) Largest target is 17
		 -> STR_1(CODE[17]), STR_18(CODE[17]), STR_19(CODE[17]), STR_2(CODE[17]), 
		 -> STR_20(CODE[17]), STR_21(CODE[17]), STR_22(CODE[17]), STR_3(CODE[17]), 
		 -> STR_4(CODE[17]), STR_5(CODE[17]), 

    puts@s	PTR const unsigned char  size(2) Largest target is 25
		 -> Download_log@event_data(BANK0[3]), Download_log@speed_data(BANK0[3]), Download_log@time_data(BANK0[10]), STR_10(CODE[3]), 
		 -> STR_11(CODE[6]), STR_12(CODE[3]), STR_9(CODE[25]), 


Critical Paths under _main in COMMON

    _view_log->_clcd_putch
    _set_time->_binary_to_bcd
    _set_time->_clcd_putch
    _set_time->_display_time
    _binary_to_bcd->___awdiv
    _bcd_to_binary->___bmul
    _main_menu->_clcd_putch
    _init_uart->___lldiv
    _init_i2c1->___lldiv
    _init_i2c->___lldiv
    _init_ds1307->_read_ds1307
    _write_ds1307->_i2c_write
    _init_clcd->_init_display_controller
    _init_display_controller->_clcd_write
    _clear_log->_clcd_print
    _Download_log->_clcd_print
    _read_ext_eeprom->_i2c1_read
    _puts->_putchar
    _Dash_board->___xxtofl
    _store_events->_write_ext_eeprom
    _write_ext_eeprom->___lwdiv
    _get_time->_read_ds1307
    _read_ds1307->_i2c_read
    _display_time->_clcd_print
    _clcd_print->_clcd_write
    _clcd_putch->___lwdiv
    ___fltol->___xxtofl
    ___fldiv->___xxtofl

Critical Paths under _main in BANK0

    _main->_Dash_board
    _set_time->_binary_to_bcd
    _init_config->_init_i2c
    _init_config->_init_i2c1
    _init_config->_init_uart
    _Dash_board->___fltol
    ___fltol->___fldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   10399
                         _Dash_board
                       _Download_log
                          _clear_log
                        _init_config
                          _main_menu
                _read_digital_keypad
                           _set_time
                           _view_log
 ---------------------------------------------------------------------------------
 (1) _view_log                                            26    26      0    1280
                                              9 COMMON     3     3      0
                                              0 BANK0     23    23      0
                             ___bmul
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                _read_digital_keypad
                    _read_ext_eeprom
 ---------------------------------------------------------------------------------
 (1) _set_time                                            11    11      0    2574
                                              9 COMMON     3     3      0
                                              7 BANK0      8     8      0
                      _bcd_to_binary
                      _binary_to_bcd
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                       _display_time
                           _get_time
                _read_digital_keypad
                       _write_ds1307
 ---------------------------------------------------------------------------------
 (2) _read_digital_keypad                                  2     2      0      29
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _binary_to_bcd                                        8     8      0     658
                                              8 COMMON     1     1      0
                                              0 BANK0      7     7      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     298
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     302
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _bcd_to_binary                                        3     3      0     170
                                              3 COMMON     3     3      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _main_menu                                            2     2      0     467
                                              9 COMMON     2     2      0
                         _clcd_print
                         _clcd_putch
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0     917
                           _init_adc
                          _init_clcd
                _init_digital_keypad
                        _init_ds1307
                           _init_i2c
                          _init_i2c1
                          _init_uart
 ---------------------------------------------------------------------------------
 (2) _init_uart                                            8     4      4     191
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _init_i2c1                                            8     4      4     191
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _init_i2c                                             8     4      4     191
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     168
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) _init_ds1307                                          1     1      0     241
                                              4 COMMON     1     1      0
                        _read_ds1307
                       _write_ds1307
 ---------------------------------------------------------------------------------
 (2) _write_ds1307                                         2     1      1      84
                                              1 COMMON     2     1      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _init_digital_keypad                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0     103
            _init_display_controller
 ---------------------------------------------------------------------------------
 (3) _init_display_controller                              2     2      0     103
                                              4 COMMON     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _clear_log                                            3     3      0     303
                                              7 COMMON     3     3      0
                         _clcd_print
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _Download_log                                        25    25      0     968
                                              7 COMMON     3     3      0
                                              0 BANK0     22    22      0
                         _clcd_print
                         _clcd_write
                               _puts
                    _read_ext_eeprom
 ---------------------------------------------------------------------------------
 (2) _read_ext_eeprom                                      2     2      0     133
                                              2 COMMON     2     2      0
                          _i2c1_read
                     _i2c1_rep_start
                         _i2c1_start
                          _i2c1_stop
                         _i2c1_write
 ---------------------------------------------------------------------------------
 (3) _i2c1_rep_start                                       0     0      0       0
                 _i2c1_wait_for_idle
 ---------------------------------------------------------------------------------
 (3) _i2c1_read                                            2     2      0      52
                                              0 COMMON     2     2      0
                 _i2c1_wait_for_idle
 ---------------------------------------------------------------------------------
 (2) _puts                                                 2     0      2      81
                                              1 COMMON     2     0      2
                            _putchar
 ---------------------------------------------------------------------------------
 (3) _putchar                                              1     1      0      29
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Dash_board                                           5     5      0    3861
                                             36 BANK0      5     5      0
                             ___bmul
                            ___fldiv
                            ___fltol
                            ___lwdiv
                            ___lwmod
                           ___xxtofl
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                       _display_time
                           _get_time
                           _read_adc
                       _store_events
 ---------------------------------------------------------------------------------
 (2) _store_events                                         2     2      0     594
                                             11 COMMON     2     2      0
                             ___bmul
                            ___lwdiv
                            ___lwmod
                   _write_ext_eeprom
 ---------------------------------------------------------------------------------
 (3) _write_ext_eeprom                                     4     3      1      85
                                              7 COMMON     4     3      1
                             ___bmul (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                         _i2c1_start
                          _i2c1_stop
                         _i2c1_write
 ---------------------------------------------------------------------------------
 (3) _i2c1_write                                           1     1      0      29
                                              0 COMMON     1     1      0
                 _i2c1_wait_for_idle
 ---------------------------------------------------------------------------------
 (3) _i2c1_stop                                            0     0      0       0
                 _i2c1_wait_for_idle
 ---------------------------------------------------------------------------------
 (3) _i2c1_start                                           0     0      0       0
                 _i2c1_wait_for_idle
 ---------------------------------------------------------------------------------
 (4) _i2c1_wait_for_idle                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     163
                                              0 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     166
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               3     2      1     112
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (2) _read_adc                                             6     4      2      52
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (2) _get_time                                             1     0      1     201
                                              4 COMMON     1     0      1
                        _read_ds1307
 ---------------------------------------------------------------------------------
 (3) _read_ds1307                                          2     2      0     133
                                              2 COMMON     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_write                                            1     1      0      29
                                              0 COMMON     1     1      0
                  _i2c_wait_for_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_stop                                             0     0      0       0
                  _i2c_wait_for_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_start                                            0     0      0       0
                  _i2c_wait_for_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_rep_start                                        0     0      0       0
                  _i2c_wait_for_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_read                                             2     2      0      52
                                              0 COMMON     2     2      0
                  _i2c_wait_for_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_wait_for_idle                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_time                                         2     1      1     336
                                              7 COMMON     2     1      1
                         _clcd_print
 ---------------------------------------------------------------------------------
 (2) _clcd_print                                           3     0      3     200
                                              4 COMMON     3     0      3
                             ___bmul (ARG)
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _clcd_putch                                           2     1      1     164
                                              7 COMMON     2     1      1
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _clcd_write                                           4     3      1     103
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     337
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     230
                                             26 BANK0     10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1124
                                              0 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Dash_board
     ___bmul
     ___fldiv
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
       ___xxtofl (ARG)
     ___lwdiv
     ___lwmod
     ___xxtofl
     _clcd_print
       ___bmul (ARG)
       _clcd_write (ARG)
     _clcd_putch
       ___lwdiv (ARG)
       ___lwmod (ARG)
       _clcd_write (ARG)
     _clcd_write
     _display_time
       _clcd_print
     _get_time
       _read_ds1307
         _i2c_read
           _i2c_wait_for_idle
         _i2c_rep_start
           _i2c_wait_for_idle
         _i2c_start
           _i2c_wait_for_idle
         _i2c_stop
           _i2c_wait_for_idle
         _i2c_write
           _i2c_wait_for_idle
     _read_adc
     _store_events
       ___bmul
       ___lwdiv
       ___lwmod
       _write_ext_eeprom
         ___bmul (ARG)
         ___lwdiv (ARG)
         ___lwmod (ARG)
         _i2c1_start (ARG)
           _i2c1_wait_for_idle
         _i2c1_stop (ARG)
           _i2c1_wait_for_idle
         _i2c1_write (ARG)
           _i2c1_wait_for_idle
   _Download_log
     _clcd_print
     _clcd_write
     _puts
       _putchar
     _read_ext_eeprom
       _i2c1_read
         _i2c1_wait_for_idle
       _i2c1_rep_start
         _i2c1_wait_for_idle
       _i2c1_start
       _i2c1_stop
       _i2c1_write
   _clear_log
     _clcd_print
     _clcd_write
   _init_config
     _init_adc
     _init_clcd
       _init_display_controller
         _clcd_write
     _init_digital_keypad
     _init_ds1307
       _read_ds1307
       _write_ds1307
         _i2c_start
         _i2c_stop
         _i2c_write
     _init_i2c
       ___lldiv
     _init_i2c1
       ___lldiv
     _init_uart
       ___lldiv
   _main_menu
     _clcd_print
     _clcd_putch
     _clcd_write
   _read_digital_keypad
   _set_time
     _bcd_to_binary
       ___bmul
     _binary_to_bcd
       ___awdiv
       ___awmod
     _clcd_print
     _clcd_putch
     _clcd_write
     _display_time
     _get_time
     _read_digital_keypad
     _write_ds1307
   _view_log
     ___bmul
     _clcd_print
     _clcd_putch
     _clcd_write
     _read_digital_keypad
     _read_ext_eeprom

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0      30     37.5%
BITBANK1            80      0       0      0.0%
BANK0               80     41      80    100.0%
BITBANK0            80      0       0      0.0%
COMMON              14     14      14    100.0%
BITCOMMON           14      0       0      0.0%
DATA                 0      0     124      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Tue Feb 25 23:11:54 2025

                   ___fldiv@aexp 0039                     ___fldiv@bexp 0038                                pc 0002  
                   ___fldiv@sign 0031                   ___bmul@product 0071                   clcd_print@addr 0076  
                             l20 0CC0                               l23 175B                               l32 0999  
                             l17 0A63                               l26 1786                               l45 0914  
                             l39 16E3                               l72 17FF                               l66 16EA  
                             l69 17F1                               _GO 00FA                               l99 09FB  
                   ___awdiv@sign 0075                               fsr 0004           Download_log@event_data 002A  
                            l102 175C                              l111 1702                              l105 1768  
                            l114 1714                              l122 173A                              l108 170B  
                            l212 0E11                              l220 0134                              l117 084D  
                            l206 0BA8                              l118 0850                              l142 093F  
                            l310 049D                              l119 0852                              l215 0EA4  
                            l232 021B                              l304 047D                              l209 0831  
                            l145 17E0                              l313 17C2                              l227 018B  
                            l411 096A                              l139 0811                              l243 0F4B  
                            l316 0A9A                              l252 060E                              l253 05E2  
                            l414 08C0                              l431 09C9                              l255 05B8  
                            l441 174B                              l442 174F                              l274 0349  
                            l611 1799                              l443 1750                              l277 08EA  
                            l621 0D87                              l382 0C05                              l449 0899  
                            l377 0B56                              l482 1775                              l491 1726  
                            l476 0A2D                              l388 0C5A                              l485 171D  
                            l494 086E                              l479 1769                              l495 0871  
                            l751 0BFF                              l496 0873                              l488 172F  
                            l738 0D23                              l499 1745                              l942 0664  
                            l944 07D8                              l865 0B14                              l786 0DE8  
                            l779 0DFD                              l875 0AD2                              l964 07C4  
                            l789 0DFD                              l966 07D0                              l958 0752  
                            _RE1 0049                              _RE2 004A                              _PEN 048A  
                            _SEN 0488                    ?_display_time 0077                              _key 005E  
                 clcd_putch@addr 0077                              fsr0 0004                   clcd_putch@data 0078  
                            indf 0000                     ___awmod@sign 0075                     ___fltol@exp1 0043  
                           l1040 0FD5                             l1032 0FAD                             l1026 0F6E  
                           l1027 0F7F                             l1028 0FFF                             l1039 0FC9  
                           l2121 176F                             l3001 0285                             l2201 0C82  
                           l2131 0A42                             l2123 0A2F                             l2115 175C  
                           l3011 02AF                             l3003 028E                             l2211 0CA4  
                           l2203 0C89                             l2141 0A5A                             l2133 0A45  
                           l2125 0A39                             l2221 0983                             l2117 1762  
                           l3021 02DB                             l3013 02B8                             l3005 0299  
                           l2213 0CB4                             l2205 0C8C                             l2301 0CCB  
                           l3101 03C1                             l2135 0A51                             l2127 0A3C  
                           l2223 0989                             l2143 1703                             l2151 170C  
                           l2119 1769                             l3031 030A                             l3023 02E2  
                           l3015 02C1                             l3007 029F                             l2215 0CBB  
                           l2207 0C93                             l2231 17C4                             l2311 0CDA  
                           l2303 0CCD                             l3111 03E2                             l3103 03CB  
                           l2137 0A52                             l2129 0A3D                             l2217 096B  
                           l2161 0844                             l2145 1708                             l2153 1711  
                           l2225 0916                             l2233 089B                             l2241 0854  
                           l3041 033C                             l3025 02EB                             l3017 02CC  
                           l3009 02A8                             l3033 0316                             l2209 0C9F  
                           l2321 0CF0                             l2313 0CE0                             l2305 0CD1  
                           l3121 0402                             l3113 03E4                             l3105 03D1  
          ??_read_digital_keypad 0070                             l2139 0A57                             l2219 0973  
                           l2163 0849                             l2155 0833                             l2147 16FA  
                           l2171 1736                             l2227 093E                             l2411 0AAD  
                           l2403 0A9B                             l2235 08B7                             l2251 0872  
                           l2243 0859                             l3043 033C                             l3035 031A  
                           l3027 02F4                             l3019 02D2                             l3051 08C6  
                           l2323 0D01                             l2315 0CE3                             l2331 0D15  
                           l2307 0CD6                             l3107 03DA                             l3115 03ED  
                           l3131 0433                             l2165 0851                             l2157 0838  
                           l2149 16FF                             l2173 173A                             l2261 178D  
                           l2413 0AB1                             l2405 0AA1                             l2421 0ACE  
                           l2181 173C                             l2501 0E06                             l2245 0861  
                           l2237 1727                             l3045 0343                             l3037 0325  
                           l3029 02FC                             l3053 08D1                             l2333 0D1A  
                           l2325 0D07                             l2317 0CEA                             l2309 0CD8  
                           l2341 0BAA                             l3141 0466                             l3133 043A  
                           l3125 0409                             l3109 03E0                             l3117 03F5  
                           l3061 034E                             l2159 0840                             l2263 178F  
                           l2415 0ABB                             l2407 0AA4                             l2191 1723  
                           l2183 1741                             l2511 0E13                             l2503 0E0C  
                           l2255 1747                             l2247 0865                             l2239 172C  
                           l3039 0330                             l3055 08DD                             l3047 08C1  
                           l2431 1756                             l2271 0D24                             l3151 0B15  
                           l2335 0D1F                             l2327 0D08                             l2319 0CEC  
                           l2351 0BBE                             l2343 0BAE                             l3143 046C  
                           l3135 043F                             l3127 040F                             l3119 03FB  
                           l3071 0376                             l3063 0355                             l2601 0613  
                           l2433 1777                             l2169 1731                             l2265 1791  
                           l2257 1788                             l2417 0AC1                             l2409 0AAB  
                           l2177 1715                             l2185 1745                             l2521 0E4F  
                           l2513 0E21                             l2505 0E0D                             l2249 086A  
                           l3057 08E4                             l3049 08C5                             l2193 0C5E  
                           l2425 1751                             l2281 0D4F                             l2273 0D34  
                           l3153 0B51                             l2329 0D0F                             l2361 0BD4  
                           l2353 0BC4                             l2345 0BB3                             l3137 0450  
                           l3145 047E                             l3081 038C                             l3073 037C  
                           l3065 0360                             l3161 0C1A                             l2611 0623  
                           l2603 0615                             l2267 1798                             l2259 1789  
                           l2419 0AC8                             l2179 171A                             l2523 0E53  
                           l2515 0E25                             l2531 0941                             l2195 0C66  
                           l2427 1754                             l2435 16DE                             l2283 0D61  
                           l2275 0D37                             l2291 0D7F                             l2371 0BF6  
                           l2363 0BDE                             l2355 0BC7                             l2347 0BB5  
                           l2339 0BA9                             l3139 0455                             l3147 0485  
                           l3083 0395                             l3091 03A9                             l3075 037E  
                           l3067 0367                             l3059 034A                             l3171 0C3A  
                           l3163 0C20                             l3155 0C00                             l2701 0736  
                           l2621 063B                             l2613 0628                             l2605 0619  
                           l2381 0ADB                             l2189 171E                             l2525 0E6C  
                           l2517 0E2B                             l2541 0883                             l2533 0969  
                           l2197 0C6D                             l2429 1755                             l2285 0D6F  
                           l2277 0D42                             l2373 0BFB                             l2365 0BE4  
                           l2357 0BCE                             l2349 0BB9                             l2461 0913  
                           l2445 08F6                             l2437 08EC                             l3149 048F  
                           l3093 03AE                             l3085 039B                             l3077 0381  
                           l3069 0370                             l3173 0C40                             l3165 0C26  
                           l3157 0C0E                             l2711 0757                             l2703 0737  
                           l2631 064C                             l2623 063E                             l2615 0630  
                           l2607 061D                             l2471 17F5                             l2391 0AFC  
                           l2383 0ADE                             l2527 0E84                             l2519 0E38  
                           l2543 0889                             l2199 0C7D                             l2287 0D70  
                           l2279 0D46                             l2295 0CC1                             l2367 0BEB  
                           l2359 0BD0                             l2447 0901                             l2439 08F1  
                           l3095 03B7                             l3087 039D                             l3079 0387  
                           l3175 0C47                             l3167 0C2D                             l3159 0C14  
            binary_to_bcd@binary 0078                             l2713 075C                             l2721 078D  
                           l2705 073B                             l2641 066C                             l2633 0651  
                           l2625 0642                             l2617 0631                             l2609 061E  
                           l2393 0B02                             l2385 0AE5                             l2377 0AD3  
                           l2529 0EA0                             l2801 013C                             l2537 0874  
                           l2465 16E4                             l2481 0800                             l2289 0D79  
                           l2553 09FC                             l2561 099E                             l2545 17AE  
                           l2297 0CC2                             l2369 0BF1                             l2449 0906  
                           l2457 0908                             l3097 03BD                             l3089 039F  
                           l3177 0C4D                             l3169 0C33                             l2731 07C3  
                           l2723 079A                             l2715 076A                             l2707 074F  
                           l2651 0688                             l2643 0678                             l2635 0659  
                           l2627 0646                             l2619 0633                             l2571 0DAF  
                           l2563 0D88                             l2491 0B84                             l2467 17E2  
                           l2395 0B03                             l2387 0AE7                             l2379 0AD5  
                           l2811 015D                             l2803 0142                             l2539 0875  
                           l2483 0807                             l2475 09CA                             l2555 09FF  
                           l2299 0CC6                             l2459 0911                             l3099 03BF  
                           l3179 0C54                             l2733 07C8                             l2725 07A8  
                           l2717 076E                             l2661 06B3                             l2645 067A  
                           l2637 065A                             l2629 0647                             l2573 0DB0  
                           l2565 0D93                             l2493 0B9C                             l2469 17F0  
                           l2397 0B0A                             l2389 0AEB                             l2821 0177  
                           l2805 0148                             l2485 0809                             l2477 09CD  
                           l2557 0A2A                             l2549 0A65                             l2901 04FD  
                           l2735 07CC                             l2727 07B7                             l2719 0787  
                           l2671 06D8                             l2663 06BB                             l2655 0691  
                           l2639 065C                             l2575 0DB8                             l2751 0F76  
                           l2743 0F4D                             l2495 0B9D                             l2487 0B57  
                           l2399 0B10                             l2831 01AC                             l2823 017D  
                           l2815 0166                             l2479 09F8                             l2559 099A  
                           l2911 051F                             l2903 0500                             l2737 07CE  
                           l2729 07BB                             l2681 0703                             l2673 06D9  
                           l2665 06BD                             l2657 06A3                             l2649 0683  
                           l2593 0DDD                             l2585 0DC6                             l2577 0DBA  
                           l2569 0D9C                             l2761 0F96                             l2745 0F52  
                           l2489 0B6E                             l2497 0812                             l2833 01E4  
                           l2825 0184                             l2817 016C                             l2809 0150  
                           l2841 0EBC                             l2921 0547                             l2913 0528  
                           l2905 0509                             l2691 071E                             l2667 06C2  
                           l2675 06E2                             l2683 0705                             l2659 06AB  
                           l2595 0DED                             l2579 0DBE                             l2587 0DD6  
                           l2771 0FCD                             l2763 0FA4                             l2755 0F82  
                           l2747 0F56                             l2499 0DFE                             l2835 01ED  
                           l2827 018B                             l2851 0EE3                             l2843 0EC4  
                           l2931 0577                             l2923 0552                             l2915 052E  
                           l2907 050F                             l2693 0722                             l2685 070B  
                           l2677 06F4                             l2669 06D4                             l2597 0DF2  
                           l2781 0FF7                             l2773 0FD7                             l2765 0FB4  
                           l2757 0F8D                             l2749 0F66                             l2829 01A0  
                           l2861 0F03                             l2853 0EEB                             l2845 0EC6  
                           l2837 0EA5                             l2941 058B                             l2933 057E  
                           l2925 055D                             l2917 0537                             l2909 0518  
                           l2695 0723                             l2687 0713                             l2679 06F5  
                           l2599 060F                             l2775 0FED                             l2767 0FBF  
                           l2759 0F94                             l2791 010B                             l2871 0F24  
                           l2863 0F0A                             l2855 0EED                             l2847 0ECC  
                           l2839 0EAD                             l2951 05CC                             l2943 05A1  
                           l2927 0568                             l2919 053E                             l2697 072C  
                           l2689 0715                             l2777 0FF2                             l2769 0FC3  
                           l2793 0113                             l2785 00F2                             l2873 0F27  
                           l2865 0F14                             l2857 0EF3                             l2849 0ED4  
                           l2961 05FA                             l2953 05D9                             l2945 05B0  
                           l2929 0571                             l2881 04B4                             l2699 0732  
                           l2779 0FF6                             l2795 011A                             l2787 00FD  
                           l2971 0225                             l2867 0F1A                             l2859 0EFB  
                           l2963 0606                             l2939 0585                             l2883 04BF  
                           l2955 05E3                             l2875 049E                             l2797 011F  
                           l2789 0104                             l2981 024B                             l2973 0232  
                           l2869 0F21                             l2957 05E8                             l2949 05C6  
                           l2893 04D5                             l2885 04CC                             l2877 04A2  
                           l2799 012C                             l2991 025E                             l2983 024F  
                           l2975 023B                             l2967 021C                             l2959 05EF  
                           l2895 04E2                             l2887 04D3                             l2879 04A7  
                           l2993 0266                             l2977 0240                             l2969 0220  
                           l2897 04EA                             l2995 026C                             l2979 0249  
                           l2899 04F0                             l2997 0279                             l2989 0251  
                           l2999 027C                             _ADFM 04FF                             _ADDR 005D  
                           _ADON 00F8                             STR_1 004E                             STR_2 005F  
                           STR_3 0070                             STR_4 003D                             STR_5 002C  
                           STR_6 0081                             STR_7 0092                             STR_8 00A3  
                           STR_9 0013                             _CREN 00C4                             u2000 0CF0  
                           u2001 0CEF                             u2020 0D01                             u2100 0BD4  
                           u2021 0D00                             u2101 0BD3                             u2110 0BDE  
                           u2015 0CF1                             u2111 0BDD                             u3000 012C  
                           u2040 0D15                             u3001 012B                             u2041 0D14  
                           u2025 0CFD                             u2210 0B10                             u3010 0148  
                           u2050 0D1A                             u2130 0BF1                             u2211 0B0F  
                           u3011 0147                             u2051 0D19                             u2035 0D09  
                           u2131 0BF0                             u2115 0BDA                             u2220 0AA1  
                           u3020 014F                             u3100 0EEB                             u2140 0BF6  
                           u2060 0BAE                             u2300 0906                             u2205 0B04  
                           u2221 0AA0                             u3021 014E                             u3005 0128  
                           u3101 0EEA                             u2141 0BF5                             u2125 0BE5  
                           u2061 0BAD                             u2301 0905                             u2150 0ADB  
                           u3030 015D                             u3110 0F03                             u2070 0BB9  
                           u2310 0911                             u2151 0ADA                             u3031 015C  
                           u3111 0F02                             u2071 0BB8                             u2311 0910  
                           u2240 0AB1                             u3040 016C                             u2400 0899  
                           u3120 0F1A                             u2080 0BC4                             u3200 05CC  
                           u2241 0AB0                             u3041 016B                             u2401 0898  
                           u3121 0F19                             u2081 0BC3                             u3201 05CB  
                           u2330 17F5                             u2170 0AEB                             u2250 0ABB  
                           u3050 017D                             u3210 05D9                             u3130 04A7  
                           u2331 17F4                             u2171 0AEA                             u2251 0ABA  
                           u2235 0AA5                             u3051 017C                             u3035 0159  
                           u3211 05D8                             u3131 04A6                             u2500 0DD5  
                           u3060 01ED                             u3220 0225                             u2340 09DB  
                           u3300 038C                             u3140 04B4                             u2501 0DD4  
                           u2325 17E5                             u2165 0ADF                             u3061 01EC  
                           u3221 0224                             u3301 038B                             u3141 04B3  
                           u2510 0DDC                             u2190 0AFC                             u2270 0ACE  
                           u3230 0232                             u2430 0A0D                             u3070 0EBC  
                           u3310 039B                             u3150 04FD                             u2511 0DDB  
                           u2191 0AFB                             u2271 0ACD                             u2255 0AB7  
                           u3231 0231                             u3071 0EBB                             u2415 17B6  
                           u2095 0BC8                             u3311 039A                             u3215 05D5  
                           u3151 04FC                             u2600 0651                             u1800 0A36  
                           u3240 0249                             u2440 09AC                             u3080 0EC4  
                           u2280 08F1                             u3400 0455                             u3320 03AE  
                           u3160 0577                             u2601 0650                             u1801 0A32  
                           u2185 0AEC                             u2265 0AC2                             u3241 0248  
                           u2345 09D6                             u3081 0EC3                             u2425 0A92  
                           u2281 08F0                             u3401 0454                             u3321 03AD  
                           u3161 0576                             u3145 04B0                             u2610 066C  
                           u2530 0DED                             u2450 0D93                             u3250 0279  
                           u3090 0EE3                             u2290 0901                             u3410 046C  
                           u3330 03BD                             u3170 058B                             u2611 066B  
                           u2531 0DEC                             u2451 0D92                             u2355 0B5D  
                           u2195 0AF8                             u3251 0278                             u3235 022E  
                           u2435 0A08                             u3091 0EE2                             u3075 0EB8  
                           u2291 0900                             u3411 046B                             u3331 03BC  
                           u3171 058A                             u3155 04F9                             u2700 0713  
                           u2620 0688                             u2540 0DF2                             u2460 0DAA  
                           u2380 0E06                             u3260 030A                             u3420 048D  
                           u3340 03D1                             u3180 05A1                             u2701 0712  
                           u2621 0687                             u2541 0DF1                             u2525 0DDF  
                           u2365 0B75                             u2381 0E05                             u3261 0309  
                           u2445 09A7                             u3421 048B                             u3341 03D0  
                           u3181 05A0                             u2630 06C2                             u2550 061D  
                           u2470 0DBE                             u1814 0A39                             u1830 0849  
                           u2390 0E38                             u1910 0D46                             u3430 048E  
                           u3350 03E0                             u3270 0376                             u3190 05B0  
                           u2631 06C1                             u2551 061C                             u2471 0DBD  
                           u2375 0B8C                             u1831 0848                             u2391 0E37  
                           u3255 0275                             u1911 0D45                             u3095 0EDF  
                           u3351 03DF                             u3271 0375                             u3191 05AF  
                           u2800 077D                             u2720 0722                             u2560 0623  
                           u2480 0DC5                             u1840 0999                             u1760 1762  
                           u3360 03FB                             u3280 037C                             u3440 0C14  
                           u2721 0721                             u2561 0622                             u2481 0DC4  
                           u2465 0DA5                             u1825 0A49                             u1841 0998  
                           u1761 1761                             u3265 0306                             u1905 0D39  
                           u3361 03FA                             u3281 037B                             u3185 059D  
                           u3441 0C13                             u2810 079A                             u2570 0628  
                           u1770 1768                             u1850 086A                             u1930 0D61  
                           u3370 040F                             u3290 0387                             u3450 0C20  
                           u2811 0799                             u2715 0717                             u2571 0627  
                           u1771 1767                             u2395 0E34                             u1851 0869  
                           u1931 0D60                             u3371 040E                             u3291 0386  
                           u3507 05BE                             u3195 05AC                             u3451 0C1F  
                           u2820 07B7                             u2740 0736                             u2660 06D8  
                           u2580 0646                             u2900 0FB3                             u1780 176F  
                           u1860 174F                             u3380 043A                             u3460 0C2D  
                           u2821 07B6                             u2805 0778                             u2741 0735  
                           u2661 06D7                             u2645 06C4                             u2581 0645  
                           u2901 0FB2                             u1781 176E                             u1861 174E  
                           u1925 0D48                             u3381 0439                             u3517 0600  
                           u3461 0C2C                             u2830 07CC                             u2750 073B  
                           u2590 064C                             u1870 178D                             u1790 1775  
                           u1950 0D7F                             u3390 043F                             u3470 0C3A  
                           u2831 07CB                             u2815 0796                             u2751 073A  
                           u2735 0725                             u2655 06CD                             u2591 064B  
                           u2495 0DC7                             u1871 178C                             u1791 1774  
                           u3607 08D7                             u1951 0D7E                             u1935 0D5D  
                           u3527 0495                             u3391 043E                             u3471 0C39  
                           u2760 074F                             u2680 06F4                             u2920 0FC3  
                           u2840 0F52                             u1880 1798                             u1960 0CC6  
                           u3480 0C47                             u2825 07B3                             u2761 074E  
                           u2681 06F3                             u2921 0FC2                             u2841 0F51  
                           u1881 1797                             u3617 0336                             u3537 0C62  
                           u1945 0D71                             u1961 0CC5                             u3481 0C46  
                           u2770 0756                             u2690 070B                             u2930 0FC9  
                           u2850 0F56                             u1890 0D34                             u1970 0CD1  
                           u3490 0C54                             u2771 0755                             u2691 070A  
                           u2675 06DB                             u2931 0FC8                             u2915 0FB8  
                           u2851 0F55                             u3627 08BB                             u3547 0C71  
                           u1891 0D33                             u1971 0CD0                             u3491 0C53  
                           u2780 075C                             u2940 0FCD                             u2860 0F76  
                           u1980 0CE0                             u2781 075B                             u2685 06F0  
                           u2941 0FCC                             u2861 0F75                             u3637 0A3F  
                           u3557 0C7F                             u1981 0CDF                             u2790 076E  
                           u2950 0FE2                             u2791 076D                             u3647 0A54  
                           u3567 0C95                             u2960 0FF2                             u2880 0F93  
                           u2961 0FF1                             u2881 0F92                             u3657 0A5E  
                           u3577 0CA1                             u2970 0FF6                             u2971 0FF5  
                           u2955 0FDD                             u2875 0F85                             u3587 0CAF  
                           u1995 0CE4                             u2980 0113                             _RCEN 048B  
                           _RCIF 0065                             u2981 0112                             u3597 0CBD  
                           u2990 011A                             u2895 0FA5                             u2991 0119  
                           _SPEN 00C7                             _TXIF 0064                             _R_nW 04A2  
             view_log@speed_data 002D                       _Dash_board 00F2                             _main 0C00  
                           _time 005F                             _view 004B                             btemp 007E  
                           _puts 0874                             start 0000                  ___fldiv@new_exp 0032  
             _i2c1_wait_for_idle 1769                ___bmul@multiplier 0072                    ?_Download_log 0070  
                 clcd_write@byte 0073                   clcd_write@mode 0070                    _i2c_rep_start 16FA  
                   ?_init_ds1307 0070                       _i2c1_start 1715                       _i2c1_write 173B  
            ?_i2c1_wait_for_idle 0070                    ___fltol@sign1 0042                            ?_main 0070  
                   ?_read_ds1307 0070                            _ACKEN 048C                            _ACKDT 048D  
                 ??_display_time 0078                  __end_of___fldiv 07D9                  __end_of___awdiv 0D24  
                          STR_10 003A                            STR_11 0037                            STR_12 0029  
                          STR_20 0070                            STR_13 00C0                            STR_21 003D  
                          STR_14 002C                            STR_22 002C                            STR_15 00A3  
                          STR_16 00B2                            STR_17 00CB                            STR_18 004E  
                          STR_19 005F                  __end_of___awmod 0C00                  __end_of___fltol 0DFE  
                          ?_puts 0071                  __end_of___lldiv 0D88                      i2c_read@ack 0070  
                ___awdiv@divisor 0070                  __end_of___lwdiv 0B15                  __end_of___lwmod 0AD3  
                   ?_init_config 0070                  ___awdiv@counter 0074                            _RCREG 001A  
                          _SPBRG 0099                            _PORTB 0006                            _PORTD 0008  
                          _SSPM3 00A3                            _TRISB 0086                            _TRISD 0088  
                          _SSPEN 00A5                            _TXREG 0019           Download_log@speed_data 002D  
                          _nDONE 00FA                            _speed 0051                   i2c1_write@data 0070  
           ??_i2c1_wait_for_idle 0070                            pclath 000A                            puts@s 0071  
                __end_of_putchar 1751                            status 0003                            wtemp0 007E  
               init_ds1307@dummy 0074                   ??_Download_log 0077                  __initialization 07D9  
                 ?_i2c_rep_start 0070         Dash_board@Clock_register 0046                     __end_of_main 0C5E  
                   _store_events 0DFE                     __end_of_puts 089A                 __end_of_i2c_read 0853  
               __end_of_i2c_stop 1715                ??_read_ext_eeprom 0072                           ??_main 007E  
                         ??_puts 0073             write_ext_eeprom@addr 007A             write_ext_eeprom@data 0077  
                         _ADCON0 001F                           _ADRESH 001E                           _ADRESL 009E  
               ___awdiv@dividend 0072                 _write_ext_eeprom 089A                     i2c_read@data 0071  
                   _write_ds1307 17C3                      ?_Dash_board 0070                           _SSPADD 0093  
                         _TRISE1 0449                           _TRISE2 044A                           _SSPBUF 0013  
               __end_of___xxtofl 1000      __end_of_init_digital_keypad 16E4                    view_log@ADDR1 0035  
                  view_log@ADDR2 0030                 __end_of_get_time 0832                           ___bmul 1787  
        _init_display_controller 0C5E                        ??___fldiv 0028                        ??___awdiv 0074  
                      ??___awmod 0074                        ??___fltol 003E                        ??___lldiv 0078  
                      ??___lwdiv 0074                        ??___lwmod 0074                 __end_of_init_i2c 09FC  
                    ?_i2c1_start 0070                 __end_of_init_adc 16EB                           _events 00A0  
                    ?_i2c1_write 0070                 __end_of_read_adc 1800                 ___awdiv@quotient 0076  
                ___awmod@divisor 0070                  ___awmod@counter 0074            __end_of_binary_to_bcd 0A9B  
               __end_of_set_time 049E                   _ADDR@main$F280 0059                 __end_of_view_log 060F  
                      ??_putchar 0070                   _i2c1_rep_start 1727                     ___xxtofl@arg 007A  
                   ___xxtofl@exp 0079                     ___xxtofl@val 0070          __end_of__initialization 07FC  
           __end_of_display_time 0BA9                __end_of_i2c1_read 0874                       ___fltol@f1 003A  
                ??_i2c_rep_start 0070                __end_of_i2c1_stop 1727              ___bmul@multiplicand 0070  
                 __pcstackCOMMON 0070                     __pidataBANK0 16EB                     __pidataBANK1 00D4  
                    _Event_index 0055                    _bcd_to_binary 17AD                __end_of_i2c_start 170C  
              __end_of_i2c_write 173B           get_time@clock_register 0074             __end_of_Download_log 034A  
         __end_of_i2c1_rep_start 1730                _i2c_wait_for_idle 175C               ?_i2c_wait_for_idle 0070  
                     __pbssBANK0 0049                        ?_i2c_read 0070                        ?_i2c_stop 0070  
      ??_init_display_controller 0074                       _clcd_print 096B              ??_i2c_wait_for_idle 0070  
                     _clcd_putch 1776                       _clcd_write 0A2E                       _clear_flag 005C  
                     __pmaintext 0C00                  read_ds1307@addr 0072                  read_ds1307@data 0073  
                        ?___bmul 0070                   ?_bcd_to_binary 0070                          _ACKSTAT 048E  
    __end_of_read_digital_keypad 0915                        ?___xxtofl 0070        __end_of_i2c_wait_for_idle 1769  
                   init_i2c@baud 0020                  ?_i2c1_rep_start 0070                          _SSPCON2 0091  
                      ?_get_time 0074                       __stringtab 0003                       ??_i2c_read 0070  
                     ??_i2c_stop 0070                        ?_init_i2c 0020                        ?_init_adc 0070  
                     _main_index 0053                        ?_read_adc 0070                __end_of_clear_log 08EB  
                _read_ext_eeprom 0940                        ?_set_time 0070                          ___fldiv 060F  
                        ___awdiv 0CC1                          ___awmod 0BA9                        ?_view_log 0070  
                        ___fltol 0D88                          ___lldiv 0D24         __end_of_write_ext_eeprom 08C1  
                        ___lwdiv 0AD3                          ___lwmod 0A9B                __end_of_main_menu 0F4C  
     display_time@clock_register 0077                    Download_log@i 0030                    Download_log@j 0032  
                        __ptext1 049E                          __ptext2 034A                          __ptext3 08EB  
                        __ptext4 0A64                          __ptext5 0BA9                          __ptext6 0CC1  
                        __ptext7 17AD                          __ptext8 0EA5                          __ptext9 0B15  
                     _menu_count 006E                __end_of_init_i2c1 0A2E  __end_of_init_display_controller 0CC1  
              __end_of_init_clcd 175C                       ??___xxtofl 0074                __end_of_init_uart 09CA  
               ___awmod@dividend 0072                          _putchar 1746                          clrloop0 16F3  
                     ??_get_time 0075             end_of_initialization 07FC                     ??_Dash_board 007E  
                     ??_init_i2c 0024                       ??_init_adc 0070                       ??_read_adc 0072  
                    ?_clcd_print 0074                      ?_clcd_putch 0077                  ___lldiv@divisor 0070  
                    ?_clcd_write 0070                  ___lldiv@counter 007D                       ??_set_time 0079  
                ??_bcd_to_binary 0073                       ??_view_log 0079                     ??_i2c1_start 0070  
                   ??_i2c1_write 0070                    i2c1_read@data 0071                  read_adc@channel 0075  
                   _display_time 0B57               __end_of_Dash_board 021C                    i2c_write@data 0070  
                  ___xxtofl@sign 0078                      ___fldiv@grs 0034                      ___fldiv@rem 002D  
                  clcd_print@str 0074          __end_of_read_ext_eeprom 096B                Dash_board@adc_val 0044  
             __end_of_i2c1_start 171E               __end_of_i2c1_write 1746                view_log@time_data 0020  
                   _Download_log 021C                        _i2c1_read 0853                        _i2c1_stop 171E  
                 __end_of___bmul 179A            Download_log@time_data 0020                       _twist_flag 005A  
                      _Main_menu 0069              start_initialization 07D9                        _i2c_start 1703  
                      _i2c_write 1730                      putchar@data 0070            __end_of_i2c_rep_start 1703  
                       ??___bmul 0071                       ?_i2c1_read 0070                   set_time@minute 0029  
                 set_time@second 002A                       ?_i2c1_stop 0070                       init_fetch0 179A  
                  ??_init_ds1307 0074                      __pdataBANK0 0069                      __pdataBANK1 00A0  
                  ??_read_ds1307 0072                    ??_init_config 007E                 ??_i2c1_rep_start 0070  
                      ___fldiv@a 0020                        ___fldiv@b 0024                        ___latbits 0002  
                  __pcstackBANK0 0020                       ?_i2c_start 0070                       ?_i2c_write 0070  
              Download_log@ADDR1 0034                 ?_read_ext_eeprom 0070                 ___lwdiv@dividend 0072  
                      _clear_log 08C1                    ?_store_events 0070                         ?___fldiv 0020  
                       ?___awdiv 0070                         ?___awmod 0070                         ?___fltol 003A  
                       ?___lldiv 0070                         ?___lwdiv 0070                         ?___lwmod 0070  
              ?_write_ext_eeprom 0077                        __pstrings 0003                 bcd_to_binary@BCD 0075  
             ??_write_ext_eeprom 0078                        _main_flag 0057                        _main_menu 0EA5  
                  _binary_to_bcd 0A64              __end_of_init_ds1307 0812                        _enter_key 004F  
            read_adc@adc_reg_val 0073                        _init_i2c1 09FC              __end_of_read_ds1307 0940  
               ___lwdiv@quotient 0074                         ?_putchar 0070                        _init_clcd 1751  
            __end_of_init_config 0B57                        _init_uart 099A                        _menu_flag 005B  
                  ?_write_ds1307 0071                    init_i2c1@baud 0020         ?_init_display_controller 0070  
                      clear_ram0 16F2                     ??_clcd_print 0077                     ??_clcd_putch 0078  
                   ??_clcd_write 0071                   ??_store_events 007B                       ?_clear_log 0070  
                    ??_i2c1_read 0070                      ??_i2c1_stop 0070                     i2c1_read@ack 0070  
                    __stringbase 0012                   ?_binary_to_bcd 0070                       ?_main_menu 0070  
                    ??_i2c_start 0070                       ?_init_i2c1 0020               __end_of_clcd_print 099A  
                    ??_i2c_write 0070               __end_of_clcd_putch 1787               __end_of_clcd_write 0A64  
                     ?_init_clcd 0070       __end_of_i2c1_wait_for_idle 1776                       ?_init_uart 0020  
                 ??_write_ds1307 0072              _init_digital_keypad 16DE                         _i2c_read 0832  
                       _i2c_stop 170C                    set_time@blink 0027             ?_init_digital_keypad 0070  
                    _init_ds1307 0800            __end_of_bcd_to_binary 17C3                      _event_count 004D  
             __end_of__stringtab 0013                      _read_ds1307 0915                    store_events@i 007B  
                    _init_config 0B15                         ___xxtofl 0F4C                  ___lwdiv@divisor 0070  
                ___lwdiv@counter 0076                         __ptext10 099A                         __ptext11 09FC  
                       __ptext20 08C1                         __ptext12 09CA                         __ptext21 021C  
                       __ptext13 0D24                         __ptext30 173B                         __ptext22 0940  
                       __ptext14 0800                         __ptext31 171E                         __ptext23 1727  
                       __ptext15 17C3                         __ptext40 1730                         __ptext32 1715  
                       __ptext24 0853                         __ptext16 16DE                         __ptext41 170C  
                       __ptext33 1769                         __ptext25 0874                         __ptext17 1751  
                       __ptext50 0F4C                         __ptext42 1703                         __ptext34 0A9B  
                       __ptext26 1746                         __ptext18 0C5E                         __ptext51 0D88  
                       __ptext43 16FA                         __ptext35 0AD3                         __ptext27 00F2  
                       __ptext19 16E4                         __ptext52 060F                         __ptext44 0832  
                       __ptext36 1787                         __ptext28 0DFE                         __ptext45 175C  
                       __ptext37 17E1                         __ptext29 089A                         __ptext46 0B57  
                       __ptext38 0812                         __ptext47 096B                         __ptext39 0915  
                       __ptext48 1776                         __ptext49 0A2E                         _get_time 0812  
                       _init_i2c 09CA              read_ext_eeprom@addr 0072             _main_index@main$F277 0049  
            read_ext_eeprom@data 0073                         _init_adc 16E4                set_time@time_flag 002E  
                       _read_adc 17E1          read_digital_keypad@mode 0071          read_digital_keypad@once 006F  
                    ??_clear_log 0077                         _set_time 034A                         _view_log 049E  
          ??_init_digital_keypad 0070                  ??_binary_to_bcd 0020                        view_log@i 0033  
                      view_log@j 0031                      ??_main_menu 0079                     set_time@hour 0028  
                    ??_init_i2c1 0024                         init_ram0 179E             __end_of_store_events 0EA5  
                    ??_init_clcd 0076                      ??_init_uart 0024                    init_uart@baud 0020  
               ___lwmod@dividend 0072                 ___lldiv@dividend 0074                        stringcode 000D  
           __end_of_write_ds1307 17E1              _read_digital_keypad 08EB                 ___lldiv@quotient 0079  
                ___lwmod@divisor 0070                  ___lwmod@counter 0074                         stringdir 000D  
                       stringtab 0003               view_log@event_data 002A             ?_read_digital_keypad 0070  
               write_ds1307@addr 0072                 write_ds1307@data 0071           set_time@Clock_register 002B  
